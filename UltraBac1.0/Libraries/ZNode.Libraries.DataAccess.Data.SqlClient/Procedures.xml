<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type='text/xsl' href="scriptsql.xsl"?>
<root xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<database includeDrop="true">ZnodeStorefront</database>
<procedures>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodePortal_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodePortal table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[PortalID],
					[DomainName],
					[CompanyName],
					[StoreName],
					[LogoPath],
					[UseSSL],
					[AdminEmail],
					[SalesEmail],
					[CustomerServiceEmail],
					[SalesPhoneNumber],
					[CustomerServicePhoneNumber],
					[ImageNotAvailablePath],
					[MaxCatalogDisplayColumns],
					[MaxCatalogDisplayItems],
					[MaxCatalogItemSmallWidth],
					[MaxCatalogItemMediumWidth],
					[MaxCatalogItemThumbnailWidth],
					[MaxCatalogItemLargeWidth],
					[ActiveInd],
					[SMTPServer],
					[SMTPUserName],
					[SMTPPassword],
					[BottomScriptBlock],
					[UPSUserName],
					[UPSPassword],
					[UPSKey],
					[ShippingOriginZipCode],
					[Theme],
					[ShopByPriceMin],
					[ShopByPriceMax],
					[ShopByPriceIncrement],
					[FedExAccountNumber],
					[FedExMeterNumber],
					[FedExProductionKey],
					[FedExSecurityCode],
					[ShippingOriginStateCode],
					[ShippingOriginCountryCode]
				FROM
					dbo.[ZNodePortal]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodePortal_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodePortal table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[PortalID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [PortalID]'
				SET @SQL = @SQL + ', [DomainName]'
				SET @SQL = @SQL + ', [CompanyName]'
				SET @SQL = @SQL + ', [StoreName]'
				SET @SQL = @SQL + ', [LogoPath]'
				SET @SQL = @SQL + ', [UseSSL]'
				SET @SQL = @SQL + ', [AdminEmail]'
				SET @SQL = @SQL + ', [SalesEmail]'
				SET @SQL = @SQL + ', [CustomerServiceEmail]'
				SET @SQL = @SQL + ', [SalesPhoneNumber]'
				SET @SQL = @SQL + ', [CustomerServicePhoneNumber]'
				SET @SQL = @SQL + ', [ImageNotAvailablePath]'
				SET @SQL = @SQL + ', [MaxCatalogDisplayColumns]'
				SET @SQL = @SQL + ', [MaxCatalogDisplayItems]'
				SET @SQL = @SQL + ', [MaxCatalogItemSmallWidth]'
				SET @SQL = @SQL + ', [MaxCatalogItemMediumWidth]'
				SET @SQL = @SQL + ', [MaxCatalogItemThumbnailWidth]'
				SET @SQL = @SQL + ', [MaxCatalogItemLargeWidth]'
				SET @SQL = @SQL + ', [ActiveInd]'
				SET @SQL = @SQL + ', [SMTPServer]'
				SET @SQL = @SQL + ', [SMTPUserName]'
				SET @SQL = @SQL + ', [SMTPPassword]'
				SET @SQL = @SQL + ', [BottomScriptBlock]'
				SET @SQL = @SQL + ', [UPSUserName]'
				SET @SQL = @SQL + ', [UPSPassword]'
				SET @SQL = @SQL + ', [UPSKey]'
				SET @SQL = @SQL + ', [ShippingOriginZipCode]'
				SET @SQL = @SQL + ', [Theme]'
				SET @SQL = @SQL + ', [ShopByPriceMin]'
				SET @SQL = @SQL + ', [ShopByPriceMax]'
				SET @SQL = @SQL + ', [ShopByPriceIncrement]'
				SET @SQL = @SQL + ', [FedExAccountNumber]'
				SET @SQL = @SQL + ', [FedExMeterNumber]'
				SET @SQL = @SQL + ', [FedExProductionKey]'
				SET @SQL = @SQL + ', [FedExSecurityCode]'
				SET @SQL = @SQL + ', [ShippingOriginStateCode]'
				SET @SQL = @SQL + ', [ShippingOriginCountryCode]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodePortal]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [PortalID],'
				SET @SQL = @SQL + ' [DomainName],'
				SET @SQL = @SQL + ' [CompanyName],'
				SET @SQL = @SQL + ' [StoreName],'
				SET @SQL = @SQL + ' [LogoPath],'
				SET @SQL = @SQL + ' [UseSSL],'
				SET @SQL = @SQL + ' [AdminEmail],'
				SET @SQL = @SQL + ' [SalesEmail],'
				SET @SQL = @SQL + ' [CustomerServiceEmail],'
				SET @SQL = @SQL + ' [SalesPhoneNumber],'
				SET @SQL = @SQL + ' [CustomerServicePhoneNumber],'
				SET @SQL = @SQL + ' [ImageNotAvailablePath],'
				SET @SQL = @SQL + ' [MaxCatalogDisplayColumns],'
				SET @SQL = @SQL + ' [MaxCatalogDisplayItems],'
				SET @SQL = @SQL + ' [MaxCatalogItemSmallWidth],'
				SET @SQL = @SQL + ' [MaxCatalogItemMediumWidth],'
				SET @SQL = @SQL + ' [MaxCatalogItemThumbnailWidth],'
				SET @SQL = @SQL + ' [MaxCatalogItemLargeWidth],'
				SET @SQL = @SQL + ' [ActiveInd],'
				SET @SQL = @SQL + ' [SMTPServer],'
				SET @SQL = @SQL + ' [SMTPUserName],'
				SET @SQL = @SQL + ' [SMTPPassword],'
				SET @SQL = @SQL + ' [BottomScriptBlock],'
				SET @SQL = @SQL + ' [UPSUserName],'
				SET @SQL = @SQL + ' [UPSPassword],'
				SET @SQL = @SQL + ' [UPSKey],'
				SET @SQL = @SQL + ' [ShippingOriginZipCode],'
				SET @SQL = @SQL + ' [Theme],'
				SET @SQL = @SQL + ' [ShopByPriceMin],'
				SET @SQL = @SQL + ' [ShopByPriceMax],'
				SET @SQL = @SQL + ' [ShopByPriceIncrement],'
				SET @SQL = @SQL + ' [FedExAccountNumber],'
				SET @SQL = @SQL + ' [FedExMeterNumber],'
				SET @SQL = @SQL + ' [FedExProductionKey],'
				SET @SQL = @SQL + ' [FedExSecurityCode],'
				SET @SQL = @SQL + ' [ShippingOriginStateCode],'
				SET @SQL = @SQL + ' [ShippingOriginCountryCode]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodePortal]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodePortal_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodePortal table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DomainName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@StoreName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LogoPath" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@UseSSL" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AdminEmail" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SalesEmail" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CustomerServiceEmail" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SalesPhoneNumber" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CustomerServicePhoneNumber" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ImageNotAvailablePath" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@MaxCatalogDisplayColumns" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@MaxCatalogDisplayItems" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MaxCatalogItemSmallWidth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MaxCatalogItemMediumWidth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MaxCatalogItemThumbnailWidth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MaxCatalogItemLargeWidth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SMTPServer" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SMTPUserName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SMTPPassword" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@BottomScriptBlock" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@UPSUserName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@UPSPassword" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@UPSKey" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShippingOriginZipCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Theme" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShopByPriceMin" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShopByPriceMax" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShopByPriceIncrement" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FedExAccountNumber" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@FedExMeterNumber" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@FedExProductionKey" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@FedExSecurityCode" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShippingOriginStateCode" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShippingOriginCountryCode" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodePortal]
					(
					[DomainName]
					,[CompanyName]
					,[StoreName]
					,[LogoPath]
					,[UseSSL]
					,[AdminEmail]
					,[SalesEmail]
					,[CustomerServiceEmail]
					,[SalesPhoneNumber]
					,[CustomerServicePhoneNumber]
					,[ImageNotAvailablePath]
					,[MaxCatalogDisplayColumns]
					,[MaxCatalogDisplayItems]
					,[MaxCatalogItemSmallWidth]
					,[MaxCatalogItemMediumWidth]
					,[MaxCatalogItemThumbnailWidth]
					,[MaxCatalogItemLargeWidth]
					,[ActiveInd]
					,[SMTPServer]
					,[SMTPUserName]
					,[SMTPPassword]
					,[BottomScriptBlock]
					,[UPSUserName]
					,[UPSPassword]
					,[UPSKey]
					,[ShippingOriginZipCode]
					,[Theme]
					,[ShopByPriceMin]
					,[ShopByPriceMax]
					,[ShopByPriceIncrement]
					,[FedExAccountNumber]
					,[FedExMeterNumber]
					,[FedExProductionKey]
					,[FedExSecurityCode]
					,[ShippingOriginStateCode]
					,[ShippingOriginCountryCode]
					)
				VALUES
					(
					@DomainName
					,@CompanyName
					,@StoreName
					,@LogoPath
					,@UseSSL
					,@AdminEmail
					,@SalesEmail
					,@CustomerServiceEmail
					,@SalesPhoneNumber
					,@CustomerServicePhoneNumber
					,@ImageNotAvailablePath
					,@MaxCatalogDisplayColumns
					,@MaxCatalogDisplayItems
					,@MaxCatalogItemSmallWidth
					,@MaxCatalogItemMediumWidth
					,@MaxCatalogItemThumbnailWidth
					,@MaxCatalogItemLargeWidth
					,@ActiveInd
					,@SMTPServer
					,@SMTPUserName
					,@SMTPPassword
					,@BottomScriptBlock
					,@UPSUserName
					,@UPSPassword
					,@UPSKey
					,@ShippingOriginZipCode
					,@Theme
					,@ShopByPriceMin
					,@ShopByPriceMax
					,@ShopByPriceIncrement
					,@FedExAccountNumber
					,@FedExMeterNumber
					,@FedExProductionKey
					,@FedExSecurityCode
					,@ShippingOriginStateCode
					,@ShippingOriginCountryCode
					)
				
				-- Get the identity value
				SET @PortalID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePortal_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodePortal table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DomainName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@StoreName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@LogoPath" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@UseSSL" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AdminEmail" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SalesEmail" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CustomerServiceEmail" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SalesPhoneNumber" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CustomerServicePhoneNumber" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ImageNotAvailablePath" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@MaxCatalogDisplayColumns" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@MaxCatalogDisplayItems" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MaxCatalogItemSmallWidth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MaxCatalogItemMediumWidth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MaxCatalogItemThumbnailWidth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@MaxCatalogItemLargeWidth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SMTPServer" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SMTPUserName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SMTPPassword" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@BottomScriptBlock" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@UPSUserName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@UPSPassword" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@UPSKey" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShippingOriginZipCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Theme" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShopByPriceMin" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShopByPriceMax" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShopByPriceIncrement" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@FedExAccountNumber" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@FedExMeterNumber" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@FedExProductionKey" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@FedExSecurityCode" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShippingOriginStateCode" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShippingOriginCountryCode" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodePortal]
				SET
					[DomainName] = @DomainName
					,[CompanyName] = @CompanyName
					,[StoreName] = @StoreName
					,[LogoPath] = @LogoPath
					,[UseSSL] = @UseSSL
					,[AdminEmail] = @AdminEmail
					,[SalesEmail] = @SalesEmail
					,[CustomerServiceEmail] = @CustomerServiceEmail
					,[SalesPhoneNumber] = @SalesPhoneNumber
					,[CustomerServicePhoneNumber] = @CustomerServicePhoneNumber
					,[ImageNotAvailablePath] = @ImageNotAvailablePath
					,[MaxCatalogDisplayColumns] = @MaxCatalogDisplayColumns
					,[MaxCatalogDisplayItems] = @MaxCatalogDisplayItems
					,[MaxCatalogItemSmallWidth] = @MaxCatalogItemSmallWidth
					,[MaxCatalogItemMediumWidth] = @MaxCatalogItemMediumWidth
					,[MaxCatalogItemThumbnailWidth] = @MaxCatalogItemThumbnailWidth
					,[MaxCatalogItemLargeWidth] = @MaxCatalogItemLargeWidth
					,[ActiveInd] = @ActiveInd
					,[SMTPServer] = @SMTPServer
					,[SMTPUserName] = @SMTPUserName
					,[SMTPPassword] = @SMTPPassword
					,[BottomScriptBlock] = @BottomScriptBlock
					,[UPSUserName] = @UPSUserName
					,[UPSPassword] = @UPSPassword
					,[UPSKey] = @UPSKey
					,[ShippingOriginZipCode] = @ShippingOriginZipCode
					,[Theme] = @Theme
					,[ShopByPriceMin] = @ShopByPriceMin
					,[ShopByPriceMax] = @ShopByPriceMax
					,[ShopByPriceIncrement] = @ShopByPriceIncrement
					,[FedExAccountNumber] = @FedExAccountNumber
					,[FedExMeterNumber] = @FedExMeterNumber
					,[FedExProductionKey] = @FedExProductionKey
					,[FedExSecurityCode] = @FedExSecurityCode
					,[ShippingOriginStateCode] = @ShippingOriginStateCode
					,[ShippingOriginCountryCode] = @ShippingOriginCountryCode
				WHERE
[PortalID] = @PortalID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePortal_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodePortal table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodePortal] WITH (ROWLOCK) 
				WHERE
					[PortalID] = @PortalID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePortal_GetByPortalID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodePortal table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[PortalID],
					[DomainName],
					[CompanyName],
					[StoreName],
					[LogoPath],
					[UseSSL],
					[AdminEmail],
					[SalesEmail],
					[CustomerServiceEmail],
					[SalesPhoneNumber],
					[CustomerServicePhoneNumber],
					[ImageNotAvailablePath],
					[MaxCatalogDisplayColumns],
					[MaxCatalogDisplayItems],
					[MaxCatalogItemSmallWidth],
					[MaxCatalogItemMediumWidth],
					[MaxCatalogItemThumbnailWidth],
					[MaxCatalogItemLargeWidth],
					[ActiveInd],
					[SMTPServer],
					[SMTPUserName],
					[SMTPPassword],
					[BottomScriptBlock],
					[UPSUserName],
					[UPSPassword],
					[UPSKey],
					[ShippingOriginZipCode],
					[Theme],
					[ShopByPriceMin],
					[ShopByPriceMax],
					[ShopByPriceIncrement],
					[FedExAccountNumber],
					[FedExMeterNumber],
					[FedExProductionKey],
					[FedExSecurityCode],
					[ShippingOriginStateCode],
					[ShippingOriginCountryCode]
				FROM
					dbo.[ZNodePortal]
				WHERE
					[PortalID] = @PortalID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePortal_GetByActiveInd" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodePortal table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[PortalID],
					[DomainName],
					[CompanyName],
					[StoreName],
					[LogoPath],
					[UseSSL],
					[AdminEmail],
					[SalesEmail],
					[CustomerServiceEmail],
					[SalesPhoneNumber],
					[CustomerServicePhoneNumber],
					[ImageNotAvailablePath],
					[MaxCatalogDisplayColumns],
					[MaxCatalogDisplayItems],
					[MaxCatalogItemSmallWidth],
					[MaxCatalogItemMediumWidth],
					[MaxCatalogItemThumbnailWidth],
					[MaxCatalogItemLargeWidth],
					[ActiveInd],
					[SMTPServer],
					[SMTPUserName],
					[SMTPPassword],
					[BottomScriptBlock],
					[UPSUserName],
					[UPSPassword],
					[UPSKey],
					[ShippingOriginZipCode],
					[Theme],
					[ShopByPriceMin],
					[ShopByPriceMax],
					[ShopByPriceIncrement],
					[FedExAccountNumber],
					[FedExMeterNumber],
					[FedExProductionKey],
					[FedExSecurityCode],
					[ShippingOriginStateCode],
					[ShippingOriginCountryCode]
				FROM
					dbo.[ZNodePortal]
				WHERE
					[ActiveInd] = @ActiveInd
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePortal_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodePortal table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DomainName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CompanyName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@StoreName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@LogoPath" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@UseSSL" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdminEmail" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SalesEmail" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CustomerServiceEmail" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SalesPhoneNumber" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CustomerServicePhoneNumber" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ImageNotAvailablePath" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@MaxCatalogDisplayColumns" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault="null"/>
				<parameter name="@MaxCatalogDisplayItems" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MaxCatalogItemSmallWidth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MaxCatalogItemMediumWidth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MaxCatalogItemThumbnailWidth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@MaxCatalogItemLargeWidth" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SMTPServer" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SMTPUserName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SMTPPassword" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@BottomScriptBlock" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@UPSUserName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@UPSPassword" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@UPSKey" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShippingOriginZipCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Theme" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShopByPriceMin" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShopByPriceMax" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShopByPriceIncrement" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@FedExAccountNumber" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@FedExMeterNumber" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@FedExProductionKey" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@FedExSecurityCode" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShippingOriginStateCode" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShippingOriginCountryCode" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [PortalID]
	, [DomainName]
	, [CompanyName]
	, [StoreName]
	, [LogoPath]
	, [UseSSL]
	, [AdminEmail]
	, [SalesEmail]
	, [CustomerServiceEmail]
	, [SalesPhoneNumber]
	, [CustomerServicePhoneNumber]
	, [ImageNotAvailablePath]
	, [MaxCatalogDisplayColumns]
	, [MaxCatalogDisplayItems]
	, [MaxCatalogItemSmallWidth]
	, [MaxCatalogItemMediumWidth]
	, [MaxCatalogItemThumbnailWidth]
	, [MaxCatalogItemLargeWidth]
	, [ActiveInd]
	, [SMTPServer]
	, [SMTPUserName]
	, [SMTPPassword]
	, [BottomScriptBlock]
	, [UPSUserName]
	, [UPSPassword]
	, [UPSKey]
	, [ShippingOriginZipCode]
	, [Theme]
	, [ShopByPriceMin]
	, [ShopByPriceMax]
	, [ShopByPriceIncrement]
	, [FedExAccountNumber]
	, [FedExMeterNumber]
	, [FedExProductionKey]
	, [FedExSecurityCode]
	, [ShippingOriginStateCode]
	, [ShippingOriginCountryCode]
    FROM
	dbo.[ZNodePortal]
    WHERE 
	 ([PortalID] = @PortalID OR @PortalID is null)
	AND ([DomainName] = @DomainName OR @DomainName is null)
	AND ([CompanyName] = @CompanyName OR @CompanyName is null)
	AND ([StoreName] = @StoreName OR @StoreName is null)
	AND ([LogoPath] = @LogoPath OR @LogoPath is null)
	AND ([UseSSL] = @UseSSL OR @UseSSL is null)
	AND ([AdminEmail] = @AdminEmail OR @AdminEmail is null)
	AND ([SalesEmail] = @SalesEmail OR @SalesEmail is null)
	AND ([CustomerServiceEmail] = @CustomerServiceEmail OR @CustomerServiceEmail is null)
	AND ([SalesPhoneNumber] = @SalesPhoneNumber OR @SalesPhoneNumber is null)
	AND ([CustomerServicePhoneNumber] = @CustomerServicePhoneNumber OR @CustomerServicePhoneNumber is null)
	AND ([ImageNotAvailablePath] = @ImageNotAvailablePath OR @ImageNotAvailablePath is null)
	AND ([MaxCatalogDisplayColumns] = @MaxCatalogDisplayColumns OR @MaxCatalogDisplayColumns is null)
	AND ([MaxCatalogDisplayItems] = @MaxCatalogDisplayItems OR @MaxCatalogDisplayItems is null)
	AND ([MaxCatalogItemSmallWidth] = @MaxCatalogItemSmallWidth OR @MaxCatalogItemSmallWidth is null)
	AND ([MaxCatalogItemMediumWidth] = @MaxCatalogItemMediumWidth OR @MaxCatalogItemMediumWidth is null)
	AND ([MaxCatalogItemThumbnailWidth] = @MaxCatalogItemThumbnailWidth OR @MaxCatalogItemThumbnailWidth is null)
	AND ([MaxCatalogItemLargeWidth] = @MaxCatalogItemLargeWidth OR @MaxCatalogItemLargeWidth is null)
	AND ([ActiveInd] = @ActiveInd OR @ActiveInd is null)
	AND ([SMTPServer] = @SMTPServer OR @SMTPServer is null)
	AND ([SMTPUserName] = @SMTPUserName OR @SMTPUserName is null)
	AND ([SMTPPassword] = @SMTPPassword OR @SMTPPassword is null)
	AND ([UPSUserName] = @UPSUserName OR @UPSUserName is null)
	AND ([UPSPassword] = @UPSPassword OR @UPSPassword is null)
	AND ([UPSKey] = @UPSKey OR @UPSKey is null)
	AND ([ShippingOriginZipCode] = @ShippingOriginZipCode OR @ShippingOriginZipCode is null)
	AND ([Theme] = @Theme OR @Theme is null)
	AND ([ShopByPriceMin] = @ShopByPriceMin OR @ShopByPriceMin is null)
	AND ([ShopByPriceMax] = @ShopByPriceMax OR @ShopByPriceMax is null)
	AND ([ShopByPriceIncrement] = @ShopByPriceIncrement OR @ShopByPriceIncrement is null)
	AND ([FedExAccountNumber] = @FedExAccountNumber OR @FedExAccountNumber is null)
	AND ([FedExMeterNumber] = @FedExMeterNumber OR @FedExMeterNumber is null)
	AND ([FedExProductionKey] = @FedExProductionKey OR @FedExProductionKey is null)
	AND ([FedExSecurityCode] = @FedExSecurityCode OR @FedExSecurityCode is null)
	AND ([ShippingOriginStateCode] = @ShippingOriginStateCode OR @ShippingOriginStateCode is null)
	AND ([ShippingOriginCountryCode] = @ShippingOriginCountryCode OR @ShippingOriginCountryCode is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [PortalID]
	, [DomainName]
	, [CompanyName]
	, [StoreName]
	, [LogoPath]
	, [UseSSL]
	, [AdminEmail]
	, [SalesEmail]
	, [CustomerServiceEmail]
	, [SalesPhoneNumber]
	, [CustomerServicePhoneNumber]
	, [ImageNotAvailablePath]
	, [MaxCatalogDisplayColumns]
	, [MaxCatalogDisplayItems]
	, [MaxCatalogItemSmallWidth]
	, [MaxCatalogItemMediumWidth]
	, [MaxCatalogItemThumbnailWidth]
	, [MaxCatalogItemLargeWidth]
	, [ActiveInd]
	, [SMTPServer]
	, [SMTPUserName]
	, [SMTPPassword]
	, [BottomScriptBlock]
	, [UPSUserName]
	, [UPSPassword]
	, [UPSKey]
	, [ShippingOriginZipCode]
	, [Theme]
	, [ShopByPriceMin]
	, [ShopByPriceMax]
	, [ShopByPriceIncrement]
	, [FedExAccountNumber]
	, [FedExMeterNumber]
	, [FedExProductionKey]
	, [FedExSecurityCode]
	, [ShippingOriginStateCode]
	, [ShippingOriginCountryCode]
    FROM
	dbo.[ZNodePortal]
    WHERE 
	 ([PortalID] = @PortalID AND @PortalID is not null)
	OR ([DomainName] = @DomainName AND @DomainName is not null)
	OR ([CompanyName] = @CompanyName AND @CompanyName is not null)
	OR ([StoreName] = @StoreName AND @StoreName is not null)
	OR ([LogoPath] = @LogoPath AND @LogoPath is not null)
	OR ([UseSSL] = @UseSSL AND @UseSSL is not null)
	OR ([AdminEmail] = @AdminEmail AND @AdminEmail is not null)
	OR ([SalesEmail] = @SalesEmail AND @SalesEmail is not null)
	OR ([CustomerServiceEmail] = @CustomerServiceEmail AND @CustomerServiceEmail is not null)
	OR ([SalesPhoneNumber] = @SalesPhoneNumber AND @SalesPhoneNumber is not null)
	OR ([CustomerServicePhoneNumber] = @CustomerServicePhoneNumber AND @CustomerServicePhoneNumber is not null)
	OR ([ImageNotAvailablePath] = @ImageNotAvailablePath AND @ImageNotAvailablePath is not null)
	OR ([MaxCatalogDisplayColumns] = @MaxCatalogDisplayColumns AND @MaxCatalogDisplayColumns is not null)
	OR ([MaxCatalogDisplayItems] = @MaxCatalogDisplayItems AND @MaxCatalogDisplayItems is not null)
	OR ([MaxCatalogItemSmallWidth] = @MaxCatalogItemSmallWidth AND @MaxCatalogItemSmallWidth is not null)
	OR ([MaxCatalogItemMediumWidth] = @MaxCatalogItemMediumWidth AND @MaxCatalogItemMediumWidth is not null)
	OR ([MaxCatalogItemThumbnailWidth] = @MaxCatalogItemThumbnailWidth AND @MaxCatalogItemThumbnailWidth is not null)
	OR ([MaxCatalogItemLargeWidth] = @MaxCatalogItemLargeWidth AND @MaxCatalogItemLargeWidth is not null)
	OR ([ActiveInd] = @ActiveInd AND @ActiveInd is not null)
	OR ([SMTPServer] = @SMTPServer AND @SMTPServer is not null)
	OR ([SMTPUserName] = @SMTPUserName AND @SMTPUserName is not null)
	OR ([SMTPPassword] = @SMTPPassword AND @SMTPPassword is not null)
	OR ([UPSUserName] = @UPSUserName AND @UPSUserName is not null)
	OR ([UPSPassword] = @UPSPassword AND @UPSPassword is not null)
	OR ([UPSKey] = @UPSKey AND @UPSKey is not null)
	OR ([ShippingOriginZipCode] = @ShippingOriginZipCode AND @ShippingOriginZipCode is not null)
	OR ([Theme] = @Theme AND @Theme is not null)
	OR ([ShopByPriceMin] = @ShopByPriceMin AND @ShopByPriceMin is not null)
	OR ([ShopByPriceMax] = @ShopByPriceMax AND @ShopByPriceMax is not null)
	OR ([ShopByPriceIncrement] = @ShopByPriceIncrement AND @ShopByPriceIncrement is not null)
	OR ([FedExAccountNumber] = @FedExAccountNumber AND @FedExAccountNumber is not null)
	OR ([FedExMeterNumber] = @FedExMeterNumber AND @FedExMeterNumber is not null)
	OR ([FedExProductionKey] = @FedExProductionKey AND @FedExProductionKey is not null)
	OR ([FedExSecurityCode] = @FedExSecurityCode AND @FedExSecurityCode is not null)
	OR ([ShippingOriginStateCode] = @ShippingOriginStateCode AND @ShippingOriginStateCode is not null)
	OR ([ShippingOriginCountryCode] = @ShippingOriginCountryCode AND @ShippingOriginCountryCode is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodePortal_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodePortal table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [PortalID]
					, [DomainName]
					, [CompanyName]
					, [StoreName]
					, [LogoPath]
					, [UseSSL]
					, [AdminEmail]
					, [SalesEmail]
					, [CustomerServiceEmail]
					, [SalesPhoneNumber]
					, [CustomerServicePhoneNumber]
					, [ImageNotAvailablePath]
					, [MaxCatalogDisplayColumns]
					, [MaxCatalogDisplayItems]
					, [MaxCatalogItemSmallWidth]
					, [MaxCatalogItemMediumWidth]
					, [MaxCatalogItemThumbnailWidth]
					, [MaxCatalogItemLargeWidth]
					, [ActiveInd]
					, [SMTPServer]
					, [SMTPUserName]
					, [SMTPPassword]
					, [BottomScriptBlock]
					, [UPSUserName]
					, [UPSPassword]
					, [UPSKey]
					, [ShippingOriginZipCode]
					, [Theme]
					, [ShopByPriceMin]
					, [ShopByPriceMax]
					, [ShopByPriceIncrement]
					, [FedExAccountNumber]
					, [FedExMeterNumber]
					, [FedExProductionKey]
					, [FedExSecurityCode]
					, [ShippingOriginStateCode]
					, [ShippingOriginCountryCode]
					from dbo.[ZNodePortal] {0}
				)
				select
				       [PortalID],
				       [DomainName],
				       [CompanyName],
				       [StoreName],
				       [LogoPath],
				       [UseSSL],
				       [AdminEmail],
				       [SalesEmail],
				       [CustomerServiceEmail],
				       [SalesPhoneNumber],
				       [CustomerServicePhoneNumber],
				       [ImageNotAvailablePath],
				       [MaxCatalogDisplayColumns],
				       [MaxCatalogDisplayItems],
				       [MaxCatalogItemSmallWidth],
				       [MaxCatalogItemMediumWidth],
				       [MaxCatalogItemThumbnailWidth],
				       [MaxCatalogItemLargeWidth],
				       [ActiveInd],
				       [SMTPServer],
				       [SMTPUserName],
				       [SMTPPassword],
				       [BottomScriptBlock],
				       [UPSUserName],
				       [UPSPassword],
				       [UPSKey],
				       [ShippingOriginZipCode],
				       [Theme],
				       [ShopByPriceMin],
				       [ShopByPriceMax],
				       [ShopByPriceIncrement],
				       [FedExAccountNumber],
				       [FedExMeterNumber],
				       [FedExProductionKey],
				       [FedExSecurityCode],
				       [ShippingOriginStateCode],
				       [ShippingOriginCountryCode]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodePortal] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductType_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeProductType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ProductTypeId],
					[PortalId],
					[Name],
					[Description],
					[DisplayOrder]
				FROM
					dbo.[ZNodeProductType]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductType_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductTypeId]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductTypeId]'
				SET @SQL = @SQL + ', [PortalId]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [DisplayOrder]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductTypeId],'
				SET @SQL = @SQL + ' [PortalId],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [DisplayOrder]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeProductType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Description" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeProductType]
					(
					[PortalId]
					,[Name]
					,[Description]
					,[DisplayOrder]
					)
				VALUES
					(
					@PortalId
					,@Name
					,@Description
					,@DisplayOrder
					)
				
				-- Get the identity value
				SET @ProductTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeProductType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Description" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeProductType]
				SET
					[PortalId] = @PortalId
					,[Name] = @Name
					,[Description] = @Description
					,[DisplayOrder] = @DisplayOrder
				WHERE
[ProductTypeId] = @ProductTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeProductType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeProductType] WITH (ROWLOCK) 
				WHERE
					[ProductTypeId] = @ProductTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductType_GetByPortalId" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductType table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProductTypeId],
					[PortalId],
					[Name],
					[Description],
					[DisplayOrder]
				FROM
					dbo.[ZNodeProductType]
				WHERE
					[PortalId] = @PortalId
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductType_GetByProductTypeId" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProductTypeId],
					[PortalId],
					[Name],
					[Description],
					[DisplayOrder]
				FROM
					dbo.[ZNodeProductType]
				WHERE
					[ProductTypeId] = @ProductTypeId
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductType_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeProductType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PortalId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Description" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductTypeId]
	, [PortalId]
	, [Name]
	, [Description]
	, [DisplayOrder]
    FROM
	dbo.[ZNodeProductType]
    WHERE 
	 ([ProductTypeId] = @ProductTypeId OR @ProductTypeId is null)
	AND ([PortalId] = @PortalId OR @PortalId is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([Description] = @Description OR @Description is null)
	AND ([DisplayOrder] = @DisplayOrder OR @DisplayOrder is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductTypeId]
	, [PortalId]
	, [Name]
	, [Description]
	, [DisplayOrder]
    FROM
	dbo.[ZNodeProductType]
    WHERE 
	 ([ProductTypeId] = @ProductTypeId AND @ProductTypeId is not null)
	OR ([PortalId] = @PortalId AND @PortalId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([DisplayOrder] = @DisplayOrder AND @DisplayOrder is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductType_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ProductTypeId]
					, [PortalId]
					, [Name]
					, [Description]
					, [DisplayOrder]
					from dbo.[ZNodeProductType] {0}
				)
				select
				       [ProductTypeId],
				       [PortalId],
				       [Name],
				       [Description],
				       [DisplayOrder]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeProductType] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCrossSell_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeProductCrossSell table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ProductCrossSellTypeId],
					[PortalId],
					[ProductId],
					[RelatedProductId],
					[DisplayOrder]
				FROM
					dbo.[ZNodeProductCrossSell]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCrossSell_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductCrossSell table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductCrossSellTypeId]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductCrossSellTypeId]'
				SET @SQL = @SQL + ', [PortalId]'
				SET @SQL = @SQL + ', [ProductId]'
				SET @SQL = @SQL + ', [RelatedProductId]'
				SET @SQL = @SQL + ', [DisplayOrder]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductCrossSell]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductCrossSellTypeId],'
				SET @SQL = @SQL + ' [PortalId],'
				SET @SQL = @SQL + ' [ProductId],'
				SET @SQL = @SQL + ' [RelatedProductId],'
				SET @SQL = @SQL + ' [DisplayOrder]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductCrossSell]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCrossSell_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeProductCrossSell table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductCrossSellTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RelatedProductId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeProductCrossSell]
					(
					[PortalId]
					,[ProductId]
					,[RelatedProductId]
					,[DisplayOrder]
					)
				VALUES
					(
					@PortalId
					,@ProductId
					,@RelatedProductId
					,@DisplayOrder
					)
				
				-- Get the identity value
				SET @ProductCrossSellTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCrossSell_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeProductCrossSell table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductCrossSellTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RelatedProductId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeProductCrossSell]
				SET
					[PortalId] = @PortalId
					,[ProductId] = @ProductId
					,[RelatedProductId] = @RelatedProductId
					,[DisplayOrder] = @DisplayOrder
				WHERE
[ProductCrossSellTypeId] = @ProductCrossSellTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCrossSell_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeProductCrossSell table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductCrossSellTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeProductCrossSell] WITH (ROWLOCK) 
				WHERE
					[ProductCrossSellTypeId] = @ProductCrossSellTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCrossSell_GetByProductId" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductCrossSell table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProductCrossSellTypeId],
					[PortalId],
					[ProductId],
					[RelatedProductId],
					[DisplayOrder]
				FROM
					dbo.[ZNodeProductCrossSell]
				WHERE
					[ProductId] = @ProductId
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCrossSell_GetByProductCrossSellTypeId" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductCrossSell table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductCrossSellTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProductCrossSellTypeId],
					[PortalId],
					[ProductId],
					[RelatedProductId],
					[DisplayOrder]
				FROM
					dbo.[ZNodeProductCrossSell]
				WHERE
					[ProductCrossSellTypeId] = @ProductCrossSellTypeId
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCrossSell_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeProductCrossSell table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductCrossSellTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PortalId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RelatedProductId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductCrossSellTypeId]
	, [PortalId]
	, [ProductId]
	, [RelatedProductId]
	, [DisplayOrder]
    FROM
	dbo.[ZNodeProductCrossSell]
    WHERE 
	 ([ProductCrossSellTypeId] = @ProductCrossSellTypeId OR @ProductCrossSellTypeId is null)
	AND ([PortalId] = @PortalId OR @PortalId is null)
	AND ([ProductId] = @ProductId OR @ProductId is null)
	AND ([RelatedProductId] = @RelatedProductId OR @RelatedProductId is null)
	AND ([DisplayOrder] = @DisplayOrder OR @DisplayOrder is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductCrossSellTypeId]
	, [PortalId]
	, [ProductId]
	, [RelatedProductId]
	, [DisplayOrder]
    FROM
	dbo.[ZNodeProductCrossSell]
    WHERE 
	 ([ProductCrossSellTypeId] = @ProductCrossSellTypeId AND @ProductCrossSellTypeId is not null)
	OR ([PortalId] = @PortalId AND @PortalId is not null)
	OR ([ProductId] = @ProductId AND @ProductId is not null)
	OR ([RelatedProductId] = @RelatedProductId AND @RelatedProductId is not null)
	OR ([DisplayOrder] = @DisplayOrder AND @DisplayOrder is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCrossSell_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductCrossSell table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ProductCrossSellTypeId]
					, [PortalId]
					, [ProductId]
					, [RelatedProductId]
					, [DisplayOrder]
					from dbo.[ZNodeProductCrossSell] {0}
				)
				select
				       [ProductCrossSellTypeId],
				       [PortalId],
				       [ProductId],
				       [RelatedProductId],
				       [DisplayOrder]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeProductCrossSell] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductHighlight_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeProductHighlight table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ProductHighlightID],
					[ProductID],
					[HighlightID],
					[DisplayOrder]
				FROM
					dbo.[ZNodeProductHighlight]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductHighlight_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductHighlight table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductHighlightID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductHighlightID]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [HighlightID]'
				SET @SQL = @SQL + ', [DisplayOrder]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductHighlight]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductHighlightID],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [HighlightID],'
				SET @SQL = @SQL + ' [DisplayOrder]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductHighlight]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductHighlight_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeProductHighlight table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductHighlightID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@HighlightID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeProductHighlight]
					(
					[ProductHighlightID]
					,[ProductID]
					,[HighlightID]
					,[DisplayOrder]
					)
				VALUES
					(
					@ProductHighlightID
					,@ProductID
					,@HighlightID
					,@DisplayOrder
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductHighlight_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeProductHighlight table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductHighlightID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalProductHighlightID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@HighlightID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeProductHighlight]
				SET
					[ProductHighlightID] = @ProductHighlightID
					,[ProductID] = @ProductID
					,[HighlightID] = @HighlightID
					,[DisplayOrder] = @DisplayOrder
				WHERE
[ProductHighlightID] = @OriginalProductHighlightID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductHighlight_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeProductHighlight table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductHighlightID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeProductHighlight] WITH (ROWLOCK) 
				WHERE
					[ProductHighlightID] = @ProductHighlightID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductHighlight_GetByHighlightID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductHighlight table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@HighlightID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProductHighlightID],
					[ProductID],
					[HighlightID],
					[DisplayOrder]
				FROM
					dbo.[ZNodeProductHighlight]
				WHERE
					[HighlightID] = @HighlightID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductHighlight_GetByProductID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductHighlight table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProductHighlightID],
					[ProductID],
					[HighlightID],
					[DisplayOrder]
				FROM
					dbo.[ZNodeProductHighlight]
				WHERE
					[ProductID] = @ProductID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductHighlight_GetByProductHighlightID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductHighlight table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductHighlightID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProductHighlightID],
					[ProductID],
					[HighlightID],
					[DisplayOrder]
				FROM
					dbo.[ZNodeProductHighlight]
				WHERE
					[ProductHighlightID] = @ProductHighlightID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductHighlight_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeProductHighlight table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductHighlightID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@HighlightID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductHighlightID]
	, [ProductID]
	, [HighlightID]
	, [DisplayOrder]
    FROM
	dbo.[ZNodeProductHighlight]
    WHERE 
	 ([ProductHighlightID] = @ProductHighlightID OR @ProductHighlightID is null)
	AND ([ProductID] = @ProductID OR @ProductID is null)
	AND ([HighlightID] = @HighlightID OR @HighlightID is null)
	AND ([DisplayOrder] = @DisplayOrder OR @DisplayOrder is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductHighlightID]
	, [ProductID]
	, [HighlightID]
	, [DisplayOrder]
    FROM
	dbo.[ZNodeProductHighlight]
    WHERE 
	 ([ProductHighlightID] = @ProductHighlightID AND @ProductHighlightID is not null)
	OR ([ProductID] = @ProductID AND @ProductID is not null)
	OR ([HighlightID] = @HighlightID AND @HighlightID is not null)
	OR ([DisplayOrder] = @DisplayOrder AND @DisplayOrder is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductHighlight_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductHighlight table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ProductHighlightID]
					, [ProductID]
					, [HighlightID]
					, [DisplayOrder]
					from dbo.[ZNodeProductHighlight] {0}
				)
				select
				       [ProductHighlightID],
				       [ProductID],
				       [HighlightID],
				       [DisplayOrder]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeProductHighlight] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductImage_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeProductImage table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ProductImageID],
					[ProductID],
					[Name],
					[ImageFile],
					[ActiveInd]
				FROM
					dbo.[ZNodeProductImage]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductImage_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductImage table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductImageID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductImageID]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ImageFile]'
				SET @SQL = @SQL + ', [ActiveInd]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductImage]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductImageID],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ImageFile],'
				SET @SQL = @SQL + ' [ActiveInd]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductImage]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductImage_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeProductImage table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductImageID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ImageFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeProductImage]
					(
					[ProductID]
					,[Name]
					,[ImageFile]
					,[ActiveInd]
					)
				VALUES
					(
					@ProductID
					,@Name
					,@ImageFile
					,@ActiveInd
					)
				
				-- Get the identity value
				SET @ProductImageID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductImage_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeProductImage table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductImageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ImageFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeProductImage]
				SET
					[ProductID] = @ProductID
					,[Name] = @Name
					,[ImageFile] = @ImageFile
					,[ActiveInd] = @ActiveInd
				WHERE
[ProductImageID] = @ProductImageID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductImage_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeProductImage table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductImageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeProductImage] WITH (ROWLOCK) 
				WHERE
					[ProductImageID] = @ProductImageID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductImage_GetByProductID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductImage table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProductImageID],
					[ProductID],
					[Name],
					[ImageFile],
					[ActiveInd]
				FROM
					dbo.[ZNodeProductImage]
				WHERE
					[ProductID] = @ProductID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductImage_GetByProductImageID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductImage table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductImageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProductImageID],
					[ProductID],
					[Name],
					[ImageFile],
					[ActiveInd]
				FROM
					dbo.[ZNodeProductImage]
				WHERE
					[ProductImageID] = @ProductImageID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductImage_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeProductImage table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductImageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ImageFile" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductImageID]
	, [ProductID]
	, [Name]
	, [ImageFile]
	, [ActiveInd]
    FROM
	dbo.[ZNodeProductImage]
    WHERE 
	 ([ProductImageID] = @ProductImageID OR @ProductImageID is null)
	AND ([ProductID] = @ProductID OR @ProductID is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([ImageFile] = @ImageFile OR @ImageFile is null)
	AND ([ActiveInd] = @ActiveInd OR @ActiveInd is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductImageID]
	, [ProductID]
	, [Name]
	, [ImageFile]
	, [ActiveInd]
    FROM
	dbo.[ZNodeProductImage]
    WHERE 
	 ([ProductImageID] = @ProductImageID AND @ProductImageID is not null)
	OR ([ProductID] = @ProductID AND @ProductID is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([ImageFile] = @ImageFile AND @ImageFile is not null)
	OR ([ActiveInd] = @ActiveInd AND @ActiveInd is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductImage_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductImage table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ProductImageID]
					, [ProductID]
					, [Name]
					, [ImageFile]
					, [ActiveInd]
					from dbo.[ZNodeProductImage] {0}
				)
				select
				       [ProductImageID],
				       [ProductID],
				       [Name],
				       [ImageFile],
				       [ActiveInd]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeProductImage] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductTypeAttribute_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeProductTypeAttribute table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ProductAttributeTypeID],
					[ProductTypeId],
					[AttributeTypeId]
				FROM
					dbo.[ZNodeProductTypeAttribute]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductTypeAttribute_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductTypeAttribute table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductAttributeTypeID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductAttributeTypeID]'
				SET @SQL = @SQL + ', [ProductTypeId]'
				SET @SQL = @SQL + ', [AttributeTypeId]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductTypeAttribute]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductAttributeTypeID],'
				SET @SQL = @SQL + ' [ProductTypeId],'
				SET @SQL = @SQL + ' [AttributeTypeId]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductTypeAttribute]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductTypeAttribute_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeProductTypeAttribute table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductAttributeTypeID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AttributeTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeProductTypeAttribute]
					(
					[ProductTypeId]
					,[AttributeTypeId]
					)
				VALUES
					(
					@ProductTypeId
					,@AttributeTypeId
					)
				
				-- Get the identity value
				SET @ProductAttributeTypeID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductTypeAttribute_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeProductTypeAttribute table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductAttributeTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AttributeTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeProductTypeAttribute]
				SET
					[ProductTypeId] = @ProductTypeId
					,[AttributeTypeId] = @AttributeTypeId
				WHERE
[ProductAttributeTypeID] = @ProductAttributeTypeID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductTypeAttribute_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeProductTypeAttribute table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductAttributeTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeProductTypeAttribute] WITH (ROWLOCK) 
				WHERE
					[ProductAttributeTypeID] = @ProductAttributeTypeID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductTypeAttribute_GetByProductTypeId" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductTypeAttribute table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProductAttributeTypeID],
					[ProductTypeId],
					[AttributeTypeId]
				FROM
					dbo.[ZNodeProductTypeAttribute]
				WHERE
					[ProductTypeId] = @ProductTypeId
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductTypeAttribute_GetByProductAttributeTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductTypeAttribute table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductAttributeTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProductAttributeTypeID],
					[ProductTypeId],
					[AttributeTypeId]
				FROM
					dbo.[ZNodeProductTypeAttribute]
				WHERE
					[ProductAttributeTypeID] = @ProductAttributeTypeID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductTypeAttribute_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeProductTypeAttribute table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductAttributeTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AttributeTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductAttributeTypeID]
	, [ProductTypeId]
	, [AttributeTypeId]
    FROM
	dbo.[ZNodeProductTypeAttribute]
    WHERE 
	 ([ProductAttributeTypeID] = @ProductAttributeTypeID OR @ProductAttributeTypeID is null)
	AND ([ProductTypeId] = @ProductTypeId OR @ProductTypeId is null)
	AND ([AttributeTypeId] = @AttributeTypeId OR @AttributeTypeId is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductAttributeTypeID]
	, [ProductTypeId]
	, [AttributeTypeId]
    FROM
	dbo.[ZNodeProductTypeAttribute]
    WHERE 
	 ([ProductAttributeTypeID] = @ProductAttributeTypeID AND @ProductAttributeTypeID is not null)
	OR ([ProductTypeId] = @ProductTypeId AND @ProductTypeId is not null)
	OR ([AttributeTypeId] = @AttributeTypeId AND @AttributeTypeId is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductTypeAttribute_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductTypeAttribute table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ProductAttributeTypeID]
					, [ProductTypeId]
					, [AttributeTypeId]
					from dbo.[ZNodeProductTypeAttribute] {0}
				)
				select
				       [ProductAttributeTypeID],
				       [ProductTypeId],
				       [AttributeTypeId]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeProductTypeAttribute] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentType_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodePaymentType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[PaymentTypeID],
					[Name],
					[Description],
					[ActiveInd]
				FROM
					dbo.[ZNodePaymentType]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentType_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodePaymentType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[PaymentTypeID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [PaymentTypeID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [ActiveInd]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodePaymentType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [PaymentTypeID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [ActiveInd]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodePaymentType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodePaymentType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PaymentTypeID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodePaymentType]
					(
					[Name]
					,[Description]
					,[ActiveInd]
					)
				VALUES
					(
					@Name
					,@Description
					,@ActiveInd
					)
				
				-- Get the identity value
				SET @PaymentTypeID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodePaymentType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PaymentTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodePaymentType]
				SET
					[Name] = @Name
					,[Description] = @Description
					,[ActiveInd] = @ActiveInd
				WHERE
[PaymentTypeID] = @PaymentTypeID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodePaymentType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PaymentTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodePaymentType] WITH (ROWLOCK) 
				WHERE
					[PaymentTypeID] = @PaymentTypeID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentType_GetByPaymentTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodePaymentType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PaymentTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[PaymentTypeID],
					[Name],
					[Description],
					[ActiveInd]
				FROM
					dbo.[ZNodePaymentType]
				WHERE
					[PaymentTypeID] = @PaymentTypeID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentType_GetByName" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodePaymentType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[PaymentTypeID],
					[Name],
					[Description],
					[ActiveInd]
				FROM
					dbo.[ZNodePaymentType]
				WHERE
					[Name] = @Name
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentType_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodePaymentType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PaymentTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [PaymentTypeID]
	, [Name]
	, [Description]
	, [ActiveInd]
    FROM
	dbo.[ZNodePaymentType]
    WHERE 
	 ([PaymentTypeID] = @PaymentTypeID OR @PaymentTypeID is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([ActiveInd] = @ActiveInd OR @ActiveInd is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [PaymentTypeID]
	, [Name]
	, [Description]
	, [ActiveInd]
    FROM
	dbo.[ZNodePaymentType]
    WHERE 
	 ([PaymentTypeID] = @PaymentTypeID AND @PaymentTypeID is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([ActiveInd] = @ActiveInd AND @ActiveInd is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentType_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodePaymentType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [PaymentTypeID]
					, [Name]
					, [Description]
					, [ActiveInd]
					from dbo.[ZNodePaymentType] {0}
				)
				select
				       [PaymentTypeID],
				       [Name],
				       [Description],
				       [ActiveInd]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodePaymentType] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProduct_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeProduct table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ProductID],
					[PortalID],
					[Name],
					[ShortDescription],
					[Description],
					[FeaturesDesc],
					[ProductNum],
					[ProductTypeID],
					[RetailPrice],
					[WholesalePrice],
					[SalePrice],
					[ImageFile],
					[Weight],
					[ActiveInd],
					[DisplayOrder],
					[CallForPricing],
					[HomepageSpecial],
					[CategorySpecial],
					[InventoryDisplay],
					[Keywords],
					[ManufacturerID],
					[AdditionalInfoLink],
					[AdditionalInfoLinkLabel],
					[ShippingRuleTypeID],
					[SEOTitle],
					[SEOKeywords],
					[SEODescription],
					[Custom1],
					[Custom2],
					[Custom3],
					[ShipEachItemSeparately],
					[SKU],
					[QuantityOnHand],
					[AllowBackOrder],
					[BackOrderMsg],
					[DropShipInd],
					[DropShipEmailID],
					[Specifications],
					[AdditionalInformation],
					[InStockMsg],
					[OutOfStockMsg],
					[TrackInventoryInd]
				FROM
					dbo.[ZNodeProduct]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProduct_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProduct table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [PortalID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ShortDescription]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [FeaturesDesc]'
				SET @SQL = @SQL + ', [ProductNum]'
				SET @SQL = @SQL + ', [ProductTypeID]'
				SET @SQL = @SQL + ', [RetailPrice]'
				SET @SQL = @SQL + ', [WholesalePrice]'
				SET @SQL = @SQL + ', [SalePrice]'
				SET @SQL = @SQL + ', [ImageFile]'
				SET @SQL = @SQL + ', [Weight]'
				SET @SQL = @SQL + ', [ActiveInd]'
				SET @SQL = @SQL + ', [DisplayOrder]'
				SET @SQL = @SQL + ', [CallForPricing]'
				SET @SQL = @SQL + ', [HomepageSpecial]'
				SET @SQL = @SQL + ', [CategorySpecial]'
				SET @SQL = @SQL + ', [InventoryDisplay]'
				SET @SQL = @SQL + ', [Keywords]'
				SET @SQL = @SQL + ', [ManufacturerID]'
				SET @SQL = @SQL + ', [AdditionalInfoLink]'
				SET @SQL = @SQL + ', [AdditionalInfoLinkLabel]'
				SET @SQL = @SQL + ', [ShippingRuleTypeID]'
				SET @SQL = @SQL + ', [SEOTitle]'
				SET @SQL = @SQL + ', [SEOKeywords]'
				SET @SQL = @SQL + ', [SEODescription]'
				SET @SQL = @SQL + ', [Custom1]'
				SET @SQL = @SQL + ', [Custom2]'
				SET @SQL = @SQL + ', [Custom3]'
				SET @SQL = @SQL + ', [ShipEachItemSeparately]'
				SET @SQL = @SQL + ', [SKU]'
				SET @SQL = @SQL + ', [QuantityOnHand]'
				SET @SQL = @SQL + ', [AllowBackOrder]'
				SET @SQL = @SQL + ', [BackOrderMsg]'
				SET @SQL = @SQL + ', [DropShipInd]'
				SET @SQL = @SQL + ', [DropShipEmailID]'
				SET @SQL = @SQL + ', [Specifications]'
				SET @SQL = @SQL + ', [AdditionalInformation]'
				SET @SQL = @SQL + ', [InStockMsg]'
				SET @SQL = @SQL + ', [OutOfStockMsg]'
				SET @SQL = @SQL + ', [TrackInventoryInd]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProduct]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [PortalID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ShortDescription],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [FeaturesDesc],'
				SET @SQL = @SQL + ' [ProductNum],'
				SET @SQL = @SQL + ' [ProductTypeID],'
				SET @SQL = @SQL + ' [RetailPrice],'
				SET @SQL = @SQL + ' [WholesalePrice],'
				SET @SQL = @SQL + ' [SalePrice],'
				SET @SQL = @SQL + ' [ImageFile],'
				SET @SQL = @SQL + ' [Weight],'
				SET @SQL = @SQL + ' [ActiveInd],'
				SET @SQL = @SQL + ' [DisplayOrder],'
				SET @SQL = @SQL + ' [CallForPricing],'
				SET @SQL = @SQL + ' [HomepageSpecial],'
				SET @SQL = @SQL + ' [CategorySpecial],'
				SET @SQL = @SQL + ' [InventoryDisplay],'
				SET @SQL = @SQL + ' [Keywords],'
				SET @SQL = @SQL + ' [ManufacturerID],'
				SET @SQL = @SQL + ' [AdditionalInfoLink],'
				SET @SQL = @SQL + ' [AdditionalInfoLinkLabel],'
				SET @SQL = @SQL + ' [ShippingRuleTypeID],'
				SET @SQL = @SQL + ' [SEOTitle],'
				SET @SQL = @SQL + ' [SEOKeywords],'
				SET @SQL = @SQL + ' [SEODescription],'
				SET @SQL = @SQL + ' [Custom1],'
				SET @SQL = @SQL + ' [Custom2],'
				SET @SQL = @SQL + ' [Custom3],'
				SET @SQL = @SQL + ' [ShipEachItemSeparately],'
				SET @SQL = @SQL + ' [SKU],'
				SET @SQL = @SQL + ' [QuantityOnHand],'
				SET @SQL = @SQL + ' [AllowBackOrder],'
				SET @SQL = @SQL + ' [BackOrderMsg],'
				SET @SQL = @SQL + ' [DropShipInd],'
				SET @SQL = @SQL + ' [DropShipEmailID],'
				SET @SQL = @SQL + ' [Specifications],'
				SET @SQL = @SQL + ' [AdditionalInformation],'
				SET @SQL = @SQL + ' [InStockMsg],'
				SET @SQL = @SQL + ' [OutOfStockMsg],'
				SET @SQL = @SQL + ' [TrackInventoryInd]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProduct]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProduct_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeProduct table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShortDescription" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@FeaturesDesc" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductNum" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ProductTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RetailPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@WholesalePrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@SalePrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@ImageFile" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Weight" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CallForPricing" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@HomepageSpecial" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CategorySpecial" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@InventoryDisplay" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@Keywords" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ManufacturerID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdditionalInfoLink" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@AdditionalInfoLinkLabel" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShippingRuleTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SEOTitle" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SEOKeywords" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SEODescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom1" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom2" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom3" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShipEachItemSeparately" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SKU" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@QuantityOnHand" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AllowBackOrder" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@BackOrderMsg" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@DropShipInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DropShipEmailID" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Specifications" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@AdditionalInformation" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@InStockMsg" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@OutOfStockMsg" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@TrackInventoryInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeProduct]
					(
					[PortalID]
					,[Name]
					,[ShortDescription]
					,[Description]
					,[FeaturesDesc]
					,[ProductNum]
					,[ProductTypeID]
					,[RetailPrice]
					,[WholesalePrice]
					,[SalePrice]
					,[ImageFile]
					,[Weight]
					,[ActiveInd]
					,[DisplayOrder]
					,[CallForPricing]
					,[HomepageSpecial]
					,[CategorySpecial]
					,[InventoryDisplay]
					,[Keywords]
					,[ManufacturerID]
					,[AdditionalInfoLink]
					,[AdditionalInfoLinkLabel]
					,[ShippingRuleTypeID]
					,[SEOTitle]
					,[SEOKeywords]
					,[SEODescription]
					,[Custom1]
					,[Custom2]
					,[Custom3]
					,[ShipEachItemSeparately]
					,[SKU]
					,[QuantityOnHand]
					,[AllowBackOrder]
					,[BackOrderMsg]
					,[DropShipInd]
					,[DropShipEmailID]
					,[Specifications]
					,[AdditionalInformation]
					,[InStockMsg]
					,[OutOfStockMsg]
					,[TrackInventoryInd]
					)
				VALUES
					(
					@PortalID
					,@Name
					,@ShortDescription
					,@Description
					,@FeaturesDesc
					,@ProductNum
					,@ProductTypeID
					,@RetailPrice
					,@WholesalePrice
					,@SalePrice
					,@ImageFile
					,@Weight
					,@ActiveInd
					,@DisplayOrder
					,@CallForPricing
					,@HomepageSpecial
					,@CategorySpecial
					,@InventoryDisplay
					,@Keywords
					,@ManufacturerID
					,@AdditionalInfoLink
					,@AdditionalInfoLinkLabel
					,@ShippingRuleTypeID
					,@SEOTitle
					,@SEOKeywords
					,@SEODescription
					,@Custom1
					,@Custom2
					,@Custom3
					,@ShipEachItemSeparately
					,@SKU
					,@QuantityOnHand
					,@AllowBackOrder
					,@BackOrderMsg
					,@DropShipInd
					,@DropShipEmailID
					,@Specifications
					,@AdditionalInformation
					,@InStockMsg
					,@OutOfStockMsg
					,@TrackInventoryInd
					)
				
				-- Get the identity value
				SET @ProductID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProduct_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeProduct table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShortDescription" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@FeaturesDesc" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductNum" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ProductTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RetailPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@WholesalePrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@SalePrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@ImageFile" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Weight" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CallForPricing" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@HomepageSpecial" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CategorySpecial" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@InventoryDisplay" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@Keywords" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ManufacturerID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AdditionalInfoLink" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@AdditionalInfoLinkLabel" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShippingRuleTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SEOTitle" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SEOKeywords" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SEODescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom1" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom2" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom3" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShipEachItemSeparately" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SKU" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@QuantityOnHand" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AllowBackOrder" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@BackOrderMsg" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@DropShipInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DropShipEmailID" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Specifications" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@AdditionalInformation" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@InStockMsg" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@OutOfStockMsg" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@TrackInventoryInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeProduct]
				SET
					[PortalID] = @PortalID
					,[Name] = @Name
					,[ShortDescription] = @ShortDescription
					,[Description] = @Description
					,[FeaturesDesc] = @FeaturesDesc
					,[ProductNum] = @ProductNum
					,[ProductTypeID] = @ProductTypeID
					,[RetailPrice] = @RetailPrice
					,[WholesalePrice] = @WholesalePrice
					,[SalePrice] = @SalePrice
					,[ImageFile] = @ImageFile
					,[Weight] = @Weight
					,[ActiveInd] = @ActiveInd
					,[DisplayOrder] = @DisplayOrder
					,[CallForPricing] = @CallForPricing
					,[HomepageSpecial] = @HomepageSpecial
					,[CategorySpecial] = @CategorySpecial
					,[InventoryDisplay] = @InventoryDisplay
					,[Keywords] = @Keywords
					,[ManufacturerID] = @ManufacturerID
					,[AdditionalInfoLink] = @AdditionalInfoLink
					,[AdditionalInfoLinkLabel] = @AdditionalInfoLinkLabel
					,[ShippingRuleTypeID] = @ShippingRuleTypeID
					,[SEOTitle] = @SEOTitle
					,[SEOKeywords] = @SEOKeywords
					,[SEODescription] = @SEODescription
					,[Custom1] = @Custom1
					,[Custom2] = @Custom2
					,[Custom3] = @Custom3
					,[ShipEachItemSeparately] = @ShipEachItemSeparately
					,[SKU] = @SKU
					,[QuantityOnHand] = @QuantityOnHand
					,[AllowBackOrder] = @AllowBackOrder
					,[BackOrderMsg] = @BackOrderMsg
					,[DropShipInd] = @DropShipInd
					,[DropShipEmailID] = @DropShipEmailID
					,[Specifications] = @Specifications
					,[AdditionalInformation] = @AdditionalInformation
					,[InStockMsg] = @InStockMsg
					,[OutOfStockMsg] = @OutOfStockMsg
					,[TrackInventoryInd] = @TrackInventoryInd
				WHERE
[ProductID] = @ProductID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProduct_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeProduct table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeProduct] WITH (ROWLOCK) 
				WHERE
					[ProductID] = @ProductID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProduct_GetByManufacturerID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProduct table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ManufacturerID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[PortalID],
					[Name],
					[ShortDescription],
					[Description],
					[FeaturesDesc],
					[ProductNum],
					[ProductTypeID],
					[RetailPrice],
					[WholesalePrice],
					[SalePrice],
					[ImageFile],
					[Weight],
					[ActiveInd],
					[DisplayOrder],
					[CallForPricing],
					[HomepageSpecial],
					[CategorySpecial],
					[InventoryDisplay],
					[Keywords],
					[ManufacturerID],
					[AdditionalInfoLink],
					[AdditionalInfoLinkLabel],
					[ShippingRuleTypeID],
					[SEOTitle],
					[SEOKeywords],
					[SEODescription],
					[Custom1],
					[Custom2],
					[Custom3],
					[ShipEachItemSeparately],
					[SKU],
					[QuantityOnHand],
					[AllowBackOrder],
					[BackOrderMsg],
					[DropShipInd],
					[DropShipEmailID],
					[Specifications],
					[AdditionalInformation],
					[InStockMsg],
					[OutOfStockMsg],
					[TrackInventoryInd]
				FROM
					dbo.[ZNodeProduct]
				WHERE
					[ManufacturerID] = @ManufacturerID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProduct_GetByProductTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProduct table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[PortalID],
					[Name],
					[ShortDescription],
					[Description],
					[FeaturesDesc],
					[ProductNum],
					[ProductTypeID],
					[RetailPrice],
					[WholesalePrice],
					[SalePrice],
					[ImageFile],
					[Weight],
					[ActiveInd],
					[DisplayOrder],
					[CallForPricing],
					[HomepageSpecial],
					[CategorySpecial],
					[InventoryDisplay],
					[Keywords],
					[ManufacturerID],
					[AdditionalInfoLink],
					[AdditionalInfoLinkLabel],
					[ShippingRuleTypeID],
					[SEOTitle],
					[SEOKeywords],
					[SEODescription],
					[Custom1],
					[Custom2],
					[Custom3],
					[ShipEachItemSeparately],
					[SKU],
					[QuantityOnHand],
					[AllowBackOrder],
					[BackOrderMsg],
					[DropShipInd],
					[DropShipEmailID],
					[Specifications],
					[AdditionalInformation],
					[InStockMsg],
					[OutOfStockMsg],
					[TrackInventoryInd]
				FROM
					dbo.[ZNodeProduct]
				WHERE
					[ProductTypeID] = @ProductTypeID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProduct_GetByShippingRuleTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProduct table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingRuleTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProductID],
					[PortalID],
					[Name],
					[ShortDescription],
					[Description],
					[FeaturesDesc],
					[ProductNum],
					[ProductTypeID],
					[RetailPrice],
					[WholesalePrice],
					[SalePrice],
					[ImageFile],
					[Weight],
					[ActiveInd],
					[DisplayOrder],
					[CallForPricing],
					[HomepageSpecial],
					[CategorySpecial],
					[InventoryDisplay],
					[Keywords],
					[ManufacturerID],
					[AdditionalInfoLink],
					[AdditionalInfoLinkLabel],
					[ShippingRuleTypeID],
					[SEOTitle],
					[SEOKeywords],
					[SEODescription],
					[Custom1],
					[Custom2],
					[Custom3],
					[ShipEachItemSeparately],
					[SKU],
					[QuantityOnHand],
					[AllowBackOrder],
					[BackOrderMsg],
					[DropShipInd],
					[DropShipEmailID],
					[Specifications],
					[AdditionalInformation],
					[InStockMsg],
					[OutOfStockMsg],
					[TrackInventoryInd]
				FROM
					dbo.[ZNodeProduct]
				WHERE
					[ShippingRuleTypeID] = @ShippingRuleTypeID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProduct_GetByProductID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProduct table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProductID],
					[PortalID],
					[Name],
					[ShortDescription],
					[Description],
					[FeaturesDesc],
					[ProductNum],
					[ProductTypeID],
					[RetailPrice],
					[WholesalePrice],
					[SalePrice],
					[ImageFile],
					[Weight],
					[ActiveInd],
					[DisplayOrder],
					[CallForPricing],
					[HomepageSpecial],
					[CategorySpecial],
					[InventoryDisplay],
					[Keywords],
					[ManufacturerID],
					[AdditionalInfoLink],
					[AdditionalInfoLinkLabel],
					[ShippingRuleTypeID],
					[SEOTitle],
					[SEOKeywords],
					[SEODescription],
					[Custom1],
					[Custom2],
					[Custom3],
					[ShipEachItemSeparately],
					[SKU],
					[QuantityOnHand],
					[AllowBackOrder],
					[BackOrderMsg],
					[DropShipInd],
					[DropShipEmailID],
					[Specifications],
					[AdditionalInformation],
					[InStockMsg],
					[OutOfStockMsg],
					[TrackInventoryInd]
				FROM
					dbo.[ZNodeProduct]
				WHERE
					[ProductID] = @ProductID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProduct_GetByPortalID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProduct table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProductID],
					[PortalID],
					[Name],
					[ShortDescription],
					[Description],
					[FeaturesDesc],
					[ProductNum],
					[ProductTypeID],
					[RetailPrice],
					[WholesalePrice],
					[SalePrice],
					[ImageFile],
					[Weight],
					[ActiveInd],
					[DisplayOrder],
					[CallForPricing],
					[HomepageSpecial],
					[CategorySpecial],
					[InventoryDisplay],
					[Keywords],
					[ManufacturerID],
					[AdditionalInfoLink],
					[AdditionalInfoLinkLabel],
					[ShippingRuleTypeID],
					[SEOTitle],
					[SEOKeywords],
					[SEODescription],
					[Custom1],
					[Custom2],
					[Custom3],
					[ShipEachItemSeparately],
					[SKU],
					[QuantityOnHand],
					[AllowBackOrder],
					[BackOrderMsg],
					[DropShipInd],
					[DropShipEmailID],
					[Specifications],
					[AdditionalInformation],
					[InStockMsg],
					[OutOfStockMsg],
					[TrackInventoryInd]
				FROM
					dbo.[ZNodeProduct]
				WHERE
					[PortalID] = @PortalID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProduct_GetByHomepageSpecialPortalID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProduct table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@HomepageSpecial" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProductID],
					[PortalID],
					[Name],
					[ShortDescription],
					[Description],
					[FeaturesDesc],
					[ProductNum],
					[ProductTypeID],
					[RetailPrice],
					[WholesalePrice],
					[SalePrice],
					[ImageFile],
					[Weight],
					[ActiveInd],
					[DisplayOrder],
					[CallForPricing],
					[HomepageSpecial],
					[CategorySpecial],
					[InventoryDisplay],
					[Keywords],
					[ManufacturerID],
					[AdditionalInfoLink],
					[AdditionalInfoLinkLabel],
					[ShippingRuleTypeID],
					[SEOTitle],
					[SEOKeywords],
					[SEODescription],
					[Custom1],
					[Custom2],
					[Custom3],
					[ShipEachItemSeparately],
					[SKU],
					[QuantityOnHand],
					[AllowBackOrder],
					[BackOrderMsg],
					[DropShipInd],
					[DropShipEmailID],
					[Specifications],
					[AdditionalInformation],
					[InStockMsg],
					[OutOfStockMsg],
					[TrackInventoryInd]
				FROM
					dbo.[ZNodeProduct]
				WHERE
					[HomepageSpecial] = @HomepageSpecial
					AND [PortalID] = @PortalID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProduct_GetByActiveInd" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProduct table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProductID],
					[PortalID],
					[Name],
					[ShortDescription],
					[Description],
					[FeaturesDesc],
					[ProductNum],
					[ProductTypeID],
					[RetailPrice],
					[WholesalePrice],
					[SalePrice],
					[ImageFile],
					[Weight],
					[ActiveInd],
					[DisplayOrder],
					[CallForPricing],
					[HomepageSpecial],
					[CategorySpecial],
					[InventoryDisplay],
					[Keywords],
					[ManufacturerID],
					[AdditionalInfoLink],
					[AdditionalInfoLinkLabel],
					[ShippingRuleTypeID],
					[SEOTitle],
					[SEOKeywords],
					[SEODescription],
					[Custom1],
					[Custom2],
					[Custom3],
					[ShipEachItemSeparately],
					[SKU],
					[QuantityOnHand],
					[AllowBackOrder],
					[BackOrderMsg],
					[DropShipInd],
					[DropShipEmailID],
					[Specifications],
					[AdditionalInformation],
					[InStockMsg],
					[OutOfStockMsg],
					[TrackInventoryInd]
				FROM
					dbo.[ZNodeProduct]
				WHERE
					[ActiveInd] = @ActiveInd
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProduct_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeProduct table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShortDescription" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@FeaturesDesc" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductNum" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ProductTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RetailPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@WholesalePrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@SalePrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@ImageFile" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Weight" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CallForPricing" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@HomepageSpecial" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CategorySpecial" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@InventoryDisplay" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault="null"/>
				<parameter name="@Keywords" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ManufacturerID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdditionalInfoLink" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@AdditionalInfoLinkLabel" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShippingRuleTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SEOTitle" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SEOKeywords" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SEODescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom1" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom2" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom3" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShipEachItemSeparately" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SKU" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@QuantityOnHand" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AllowBackOrder" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@BackOrderMsg" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@DropShipInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DropShipEmailID" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Specifications" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@AdditionalInformation" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@InStockMsg" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@OutOfStockMsg" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@TrackInventoryInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductID]
	, [PortalID]
	, [Name]
	, [ShortDescription]
	, [Description]
	, [FeaturesDesc]
	, [ProductNum]
	, [ProductTypeID]
	, [RetailPrice]
	, [WholesalePrice]
	, [SalePrice]
	, [ImageFile]
	, [Weight]
	, [ActiveInd]
	, [DisplayOrder]
	, [CallForPricing]
	, [HomepageSpecial]
	, [CategorySpecial]
	, [InventoryDisplay]
	, [Keywords]
	, [ManufacturerID]
	, [AdditionalInfoLink]
	, [AdditionalInfoLinkLabel]
	, [ShippingRuleTypeID]
	, [SEOTitle]
	, [SEOKeywords]
	, [SEODescription]
	, [Custom1]
	, [Custom2]
	, [Custom3]
	, [ShipEachItemSeparately]
	, [SKU]
	, [QuantityOnHand]
	, [AllowBackOrder]
	, [BackOrderMsg]
	, [DropShipInd]
	, [DropShipEmailID]
	, [Specifications]
	, [AdditionalInformation]
	, [InStockMsg]
	, [OutOfStockMsg]
	, [TrackInventoryInd]
    FROM
	dbo.[ZNodeProduct]
    WHERE 
	 ([ProductID] = @ProductID OR @ProductID is null)
	AND ([PortalID] = @PortalID OR @PortalID is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([ProductNum] = @ProductNum OR @ProductNum is null)
	AND ([ProductTypeID] = @ProductTypeID OR @ProductTypeID is null)
	AND ([RetailPrice] = @RetailPrice OR @RetailPrice is null)
	AND ([WholesalePrice] = @WholesalePrice OR @WholesalePrice is null)
	AND ([SalePrice] = @SalePrice OR @SalePrice is null)
	AND ([ImageFile] = @ImageFile OR @ImageFile is null)
	AND ([Weight] = @Weight OR @Weight is null)
	AND ([ActiveInd] = @ActiveInd OR @ActiveInd is null)
	AND ([DisplayOrder] = @DisplayOrder OR @DisplayOrder is null)
	AND ([CallForPricing] = @CallForPricing OR @CallForPricing is null)
	AND ([HomepageSpecial] = @HomepageSpecial OR @HomepageSpecial is null)
	AND ([CategorySpecial] = @CategorySpecial OR @CategorySpecial is null)
	AND ([InventoryDisplay] = @InventoryDisplay OR @InventoryDisplay is null)
	AND ([Keywords] = @Keywords OR @Keywords is null)
	AND ([ManufacturerID] = @ManufacturerID OR @ManufacturerID is null)
	AND ([AdditionalInfoLink] = @AdditionalInfoLink OR @AdditionalInfoLink is null)
	AND ([AdditionalInfoLinkLabel] = @AdditionalInfoLinkLabel OR @AdditionalInfoLinkLabel is null)
	AND ([ShippingRuleTypeID] = @ShippingRuleTypeID OR @ShippingRuleTypeID is null)
	AND ([SEOTitle] = @SEOTitle OR @SEOTitle is null)
	AND ([SEOKeywords] = @SEOKeywords OR @SEOKeywords is null)
	AND ([SEODescription] = @SEODescription OR @SEODescription is null)
	AND ([Custom1] = @Custom1 OR @Custom1 is null)
	AND ([Custom2] = @Custom2 OR @Custom2 is null)
	AND ([Custom3] = @Custom3 OR @Custom3 is null)
	AND ([ShipEachItemSeparately] = @ShipEachItemSeparately OR @ShipEachItemSeparately is null)
	AND ([SKU] = @SKU OR @SKU is null)
	AND ([QuantityOnHand] = @QuantityOnHand OR @QuantityOnHand is null)
	AND ([AllowBackOrder] = @AllowBackOrder OR @AllowBackOrder is null)
	AND ([BackOrderMsg] = @BackOrderMsg OR @BackOrderMsg is null)
	AND ([DropShipInd] = @DropShipInd OR @DropShipInd is null)
	AND ([DropShipEmailID] = @DropShipEmailID OR @DropShipEmailID is null)
	AND ([TrackInventoryInd] = @TrackInventoryInd OR @TrackInventoryInd is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductID]
	, [PortalID]
	, [Name]
	, [ShortDescription]
	, [Description]
	, [FeaturesDesc]
	, [ProductNum]
	, [ProductTypeID]
	, [RetailPrice]
	, [WholesalePrice]
	, [SalePrice]
	, [ImageFile]
	, [Weight]
	, [ActiveInd]
	, [DisplayOrder]
	, [CallForPricing]
	, [HomepageSpecial]
	, [CategorySpecial]
	, [InventoryDisplay]
	, [Keywords]
	, [ManufacturerID]
	, [AdditionalInfoLink]
	, [AdditionalInfoLinkLabel]
	, [ShippingRuleTypeID]
	, [SEOTitle]
	, [SEOKeywords]
	, [SEODescription]
	, [Custom1]
	, [Custom2]
	, [Custom3]
	, [ShipEachItemSeparately]
	, [SKU]
	, [QuantityOnHand]
	, [AllowBackOrder]
	, [BackOrderMsg]
	, [DropShipInd]
	, [DropShipEmailID]
	, [Specifications]
	, [AdditionalInformation]
	, [InStockMsg]
	, [OutOfStockMsg]
	, [TrackInventoryInd]
    FROM
	dbo.[ZNodeProduct]
    WHERE 
	 ([ProductID] = @ProductID AND @ProductID is not null)
	OR ([PortalID] = @PortalID AND @PortalID is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([ProductNum] = @ProductNum AND @ProductNum is not null)
	OR ([ProductTypeID] = @ProductTypeID AND @ProductTypeID is not null)
	OR ([RetailPrice] = @RetailPrice AND @RetailPrice is not null)
	OR ([WholesalePrice] = @WholesalePrice AND @WholesalePrice is not null)
	OR ([SalePrice] = @SalePrice AND @SalePrice is not null)
	OR ([ImageFile] = @ImageFile AND @ImageFile is not null)
	OR ([Weight] = @Weight AND @Weight is not null)
	OR ([ActiveInd] = @ActiveInd AND @ActiveInd is not null)
	OR ([DisplayOrder] = @DisplayOrder AND @DisplayOrder is not null)
	OR ([CallForPricing] = @CallForPricing AND @CallForPricing is not null)
	OR ([HomepageSpecial] = @HomepageSpecial AND @HomepageSpecial is not null)
	OR ([CategorySpecial] = @CategorySpecial AND @CategorySpecial is not null)
	OR ([InventoryDisplay] = @InventoryDisplay AND @InventoryDisplay is not null)
	OR ([Keywords] = @Keywords AND @Keywords is not null)
	OR ([ManufacturerID] = @ManufacturerID AND @ManufacturerID is not null)
	OR ([AdditionalInfoLink] = @AdditionalInfoLink AND @AdditionalInfoLink is not null)
	OR ([AdditionalInfoLinkLabel] = @AdditionalInfoLinkLabel AND @AdditionalInfoLinkLabel is not null)
	OR ([ShippingRuleTypeID] = @ShippingRuleTypeID AND @ShippingRuleTypeID is not null)
	OR ([SEOTitle] = @SEOTitle AND @SEOTitle is not null)
	OR ([SEOKeywords] = @SEOKeywords AND @SEOKeywords is not null)
	OR ([SEODescription] = @SEODescription AND @SEODescription is not null)
	OR ([Custom1] = @Custom1 AND @Custom1 is not null)
	OR ([Custom2] = @Custom2 AND @Custom2 is not null)
	OR ([Custom3] = @Custom3 AND @Custom3 is not null)
	OR ([ShipEachItemSeparately] = @ShipEachItemSeparately AND @ShipEachItemSeparately is not null)
	OR ([SKU] = @SKU AND @SKU is not null)
	OR ([QuantityOnHand] = @QuantityOnHand AND @QuantityOnHand is not null)
	OR ([AllowBackOrder] = @AllowBackOrder AND @AllowBackOrder is not null)
	OR ([BackOrderMsg] = @BackOrderMsg AND @BackOrderMsg is not null)
	OR ([DropShipInd] = @DropShipInd AND @DropShipInd is not null)
	OR ([DropShipEmailID] = @DropShipEmailID AND @DropShipEmailID is not null)
	OR ([TrackInventoryInd] = @TrackInventoryInd AND @TrackInventoryInd is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProduct_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProduct table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ProductID]
					, [PortalID]
					, [Name]
					, [ShortDescription]
					, [Description]
					, [FeaturesDesc]
					, [ProductNum]
					, [ProductTypeID]
					, [RetailPrice]
					, [WholesalePrice]
					, [SalePrice]
					, [ImageFile]
					, [Weight]
					, [ActiveInd]
					, [DisplayOrder]
					, [CallForPricing]
					, [HomepageSpecial]
					, [CategorySpecial]
					, [InventoryDisplay]
					, [Keywords]
					, [ManufacturerID]
					, [AdditionalInfoLink]
					, [AdditionalInfoLinkLabel]
					, [ShippingRuleTypeID]
					, [SEOTitle]
					, [SEOKeywords]
					, [SEODescription]
					, [Custom1]
					, [Custom2]
					, [Custom3]
					, [ShipEachItemSeparately]
					, [SKU]
					, [QuantityOnHand]
					, [AllowBackOrder]
					, [BackOrderMsg]
					, [DropShipInd]
					, [DropShipEmailID]
					, [Specifications]
					, [AdditionalInformation]
					, [InStockMsg]
					, [OutOfStockMsg]
					, [TrackInventoryInd]
					from dbo.[ZNodeProduct] {0}
				)
				select
				       [ProductID],
				       [PortalID],
				       [Name],
				       [ShortDescription],
				       [Description],
				       [FeaturesDesc],
				       [ProductNum],
				       [ProductTypeID],
				       [RetailPrice],
				       [WholesalePrice],
				       [SalePrice],
				       [ImageFile],
				       [Weight],
				       [ActiveInd],
				       [DisplayOrder],
				       [CallForPricing],
				       [HomepageSpecial],
				       [CategorySpecial],
				       [InventoryDisplay],
				       [Keywords],
				       [ManufacturerID],
				       [AdditionalInfoLink],
				       [AdditionalInfoLinkLabel],
				       [ShippingRuleTypeID],
				       [SEOTitle],
				       [SEOKeywords],
				       [SEODescription],
				       [Custom1],
				       [Custom2],
				       [Custom3],
				       [ShipEachItemSeparately],
				       [SKU],
				       [QuantityOnHand],
				       [AllowBackOrder],
				       [BackOrderMsg],
				       [DropShipInd],
				       [DropShipEmailID],
				       [Specifications],
				       [AdditionalInformation],
				       [InStockMsg],
				       [OutOfStockMsg],
				       [TrackInventoryInd]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeProduct] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentSetting_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodePaymentSetting table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[PaymentSettingID],
					[PaymentTypeID],
					[ProfileID],
					[GatewayTypeID],
					[GatewayUsername],
					[GatewayPassword],
					[EnableVisa],
					[EnableMasterCard],
					[EnableAmex],
					[EnableDiscover],
					[TransactionKey],
					[ActiveInd],
					[DisplayOrder],
					[TestMode],
					[OfflineMode],
					[SaveCreditCartInfo]
				FROM
					dbo.[ZNodePaymentSetting]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentSetting_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodePaymentSetting table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[PaymentSettingID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [PaymentSettingID]'
				SET @SQL = @SQL + ', [PaymentTypeID]'
				SET @SQL = @SQL + ', [ProfileID]'
				SET @SQL = @SQL + ', [GatewayTypeID]'
				SET @SQL = @SQL + ', [GatewayUsername]'
				SET @SQL = @SQL + ', [GatewayPassword]'
				SET @SQL = @SQL + ', [EnableVisa]'
				SET @SQL = @SQL + ', [EnableMasterCard]'
				SET @SQL = @SQL + ', [EnableAmex]'
				SET @SQL = @SQL + ', [EnableDiscover]'
				SET @SQL = @SQL + ', [TransactionKey]'
				SET @SQL = @SQL + ', [ActiveInd]'
				SET @SQL = @SQL + ', [DisplayOrder]'
				SET @SQL = @SQL + ', [TestMode]'
				SET @SQL = @SQL + ', [OfflineMode]'
				SET @SQL = @SQL + ', [SaveCreditCartInfo]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodePaymentSetting]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [PaymentSettingID],'
				SET @SQL = @SQL + ' [PaymentTypeID],'
				SET @SQL = @SQL + ' [ProfileID],'
				SET @SQL = @SQL + ' [GatewayTypeID],'
				SET @SQL = @SQL + ' [GatewayUsername],'
				SET @SQL = @SQL + ' [GatewayPassword],'
				SET @SQL = @SQL + ' [EnableVisa],'
				SET @SQL = @SQL + ' [EnableMasterCard],'
				SET @SQL = @SQL + ' [EnableAmex],'
				SET @SQL = @SQL + ' [EnableDiscover],'
				SET @SQL = @SQL + ' [TransactionKey],'
				SET @SQL = @SQL + ' [ActiveInd],'
				SET @SQL = @SQL + ' [DisplayOrder],'
				SET @SQL = @SQL + ' [TestMode],'
				SET @SQL = @SQL + ' [OfflineMode],'
				SET @SQL = @SQL + ' [SaveCreditCartInfo]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodePaymentSetting]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentSetting_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodePaymentSetting table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PaymentSettingID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PaymentTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GatewayTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GatewayUsername" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@GatewayPassword" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@EnableVisa" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@EnableMasterCard" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@EnableAmex" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@EnableDiscover" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@TransactionKey" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@TestMode" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OfflineMode" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SaveCreditCartInfo" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodePaymentSetting]
					(
					[PaymentTypeID]
					,[ProfileID]
					,[GatewayTypeID]
					,[GatewayUsername]
					,[GatewayPassword]
					,[EnableVisa]
					,[EnableMasterCard]
					,[EnableAmex]
					,[EnableDiscover]
					,[TransactionKey]
					,[ActiveInd]
					,[DisplayOrder]
					,[TestMode]
					,[OfflineMode]
					,[SaveCreditCartInfo]
					)
				VALUES
					(
					@PaymentTypeID
					,@ProfileID
					,@GatewayTypeID
					,@GatewayUsername
					,@GatewayPassword
					,@EnableVisa
					,@EnableMasterCard
					,@EnableAmex
					,@EnableDiscover
					,@TransactionKey
					,@ActiveInd
					,@DisplayOrder
					,@TestMode
					,@OfflineMode
					,@SaveCreditCartInfo
					)
				
				-- Get the identity value
				SET @PaymentSettingID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentSetting_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodePaymentSetting table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PaymentSettingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PaymentTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GatewayTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GatewayUsername" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@GatewayPassword" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@EnableVisa" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@EnableMasterCard" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@EnableAmex" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@EnableDiscover" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@TransactionKey" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault=""/>
				<parameter name="@TestMode" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OfflineMode" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SaveCreditCartInfo" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodePaymentSetting]
				SET
					[PaymentTypeID] = @PaymentTypeID
					,[ProfileID] = @ProfileID
					,[GatewayTypeID] = @GatewayTypeID
					,[GatewayUsername] = @GatewayUsername
					,[GatewayPassword] = @GatewayPassword
					,[EnableVisa] = @EnableVisa
					,[EnableMasterCard] = @EnableMasterCard
					,[EnableAmex] = @EnableAmex
					,[EnableDiscover] = @EnableDiscover
					,[TransactionKey] = @TransactionKey
					,[ActiveInd] = @ActiveInd
					,[DisplayOrder] = @DisplayOrder
					,[TestMode] = @TestMode
					,[OfflineMode] = @OfflineMode
					,[SaveCreditCartInfo] = @SaveCreditCartInfo
				WHERE
[PaymentSettingID] = @PaymentSettingID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentSetting_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodePaymentSetting table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PaymentSettingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodePaymentSetting] WITH (ROWLOCK) 
				WHERE
					[PaymentSettingID] = @PaymentSettingID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentSetting_GetByGatewayTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodePaymentSetting table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GatewayTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[PaymentSettingID],
					[PaymentTypeID],
					[ProfileID],
					[GatewayTypeID],
					[GatewayUsername],
					[GatewayPassword],
					[EnableVisa],
					[EnableMasterCard],
					[EnableAmex],
					[EnableDiscover],
					[TransactionKey],
					[ActiveInd],
					[DisplayOrder],
					[TestMode],
					[OfflineMode],
					[SaveCreditCartInfo]
				FROM
					dbo.[ZNodePaymentSetting]
				WHERE
					[GatewayTypeID] = @GatewayTypeID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentSetting_GetByPaymentTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodePaymentSetting table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PaymentTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[PaymentSettingID],
					[PaymentTypeID],
					[ProfileID],
					[GatewayTypeID],
					[GatewayUsername],
					[GatewayPassword],
					[EnableVisa],
					[EnableMasterCard],
					[EnableAmex],
					[EnableDiscover],
					[TransactionKey],
					[ActiveInd],
					[DisplayOrder],
					[TestMode],
					[OfflineMode],
					[SaveCreditCartInfo]
				FROM
					dbo.[ZNodePaymentSetting]
				WHERE
					[PaymentTypeID] = @PaymentTypeID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentSetting_GetByPaymentSettingID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodePaymentSetting table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PaymentSettingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[PaymentSettingID],
					[PaymentTypeID],
					[ProfileID],
					[GatewayTypeID],
					[GatewayUsername],
					[GatewayPassword],
					[EnableVisa],
					[EnableMasterCard],
					[EnableAmex],
					[EnableDiscover],
					[TransactionKey],
					[ActiveInd],
					[DisplayOrder],
					[TestMode],
					[OfflineMode],
					[SaveCreditCartInfo]
				FROM
					dbo.[ZNodePaymentSetting]
				WHERE
					[PaymentSettingID] = @PaymentSettingID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentSetting_GetByProfileIDPaymentTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodePaymentSetting table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PaymentTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[PaymentSettingID],
					[PaymentTypeID],
					[ProfileID],
					[GatewayTypeID],
					[GatewayUsername],
					[GatewayPassword],
					[EnableVisa],
					[EnableMasterCard],
					[EnableAmex],
					[EnableDiscover],
					[TransactionKey],
					[ActiveInd],
					[DisplayOrder],
					[TestMode],
					[OfflineMode],
					[SaveCreditCartInfo]
				FROM
					dbo.[ZNodePaymentSetting]
				WHERE
					[ProfileID] = @ProfileID
					AND [PaymentTypeID] = @PaymentTypeID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentSetting_GetByProfileID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodePaymentSetting table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[PaymentSettingID],
					[PaymentTypeID],
					[ProfileID],
					[GatewayTypeID],
					[GatewayUsername],
					[GatewayPassword],
					[EnableVisa],
					[EnableMasterCard],
					[EnableAmex],
					[EnableDiscover],
					[TransactionKey],
					[ActiveInd],
					[DisplayOrder],
					[TestMode],
					[OfflineMode],
					[SaveCreditCartInfo]
				FROM
					dbo.[ZNodePaymentSetting]
				WHERE
					[ProfileID] = @ProfileID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentSetting_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodePaymentSetting table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PaymentSettingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PaymentTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GatewayTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GatewayUsername" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@GatewayPassword" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@EnableVisa" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnableMasterCard" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnableAmex" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@EnableDiscover" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@TransactionKey" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayOrder" type="tinyint" direction="Input" size="1" precision="3" scale="0" param="" nulldefault="null"/>
				<parameter name="@TestMode" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OfflineMode" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SaveCreditCartInfo" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [PaymentSettingID]
	, [PaymentTypeID]
	, [ProfileID]
	, [GatewayTypeID]
	, [GatewayUsername]
	, [GatewayPassword]
	, [EnableVisa]
	, [EnableMasterCard]
	, [EnableAmex]
	, [EnableDiscover]
	, [TransactionKey]
	, [ActiveInd]
	, [DisplayOrder]
	, [TestMode]
	, [OfflineMode]
	, [SaveCreditCartInfo]
    FROM
	dbo.[ZNodePaymentSetting]
    WHERE 
	 ([PaymentSettingID] = @PaymentSettingID OR @PaymentSettingID is null)
	AND ([PaymentTypeID] = @PaymentTypeID OR @PaymentTypeID is null)
	AND ([ProfileID] = @ProfileID OR @ProfileID is null)
	AND ([GatewayTypeID] = @GatewayTypeID OR @GatewayTypeID is null)
	AND ([GatewayUsername] = @GatewayUsername OR @GatewayUsername is null)
	AND ([GatewayPassword] = @GatewayPassword OR @GatewayPassword is null)
	AND ([EnableVisa] = @EnableVisa OR @EnableVisa is null)
	AND ([EnableMasterCard] = @EnableMasterCard OR @EnableMasterCard is null)
	AND ([EnableAmex] = @EnableAmex OR @EnableAmex is null)
	AND ([EnableDiscover] = @EnableDiscover OR @EnableDiscover is null)
	AND ([TransactionKey] = @TransactionKey OR @TransactionKey is null)
	AND ([ActiveInd] = @ActiveInd OR @ActiveInd is null)
	AND ([DisplayOrder] = @DisplayOrder OR @DisplayOrder is null)
	AND ([TestMode] = @TestMode OR @TestMode is null)
	AND ([OfflineMode] = @OfflineMode OR @OfflineMode is null)
	AND ([SaveCreditCartInfo] = @SaveCreditCartInfo OR @SaveCreditCartInfo is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [PaymentSettingID]
	, [PaymentTypeID]
	, [ProfileID]
	, [GatewayTypeID]
	, [GatewayUsername]
	, [GatewayPassword]
	, [EnableVisa]
	, [EnableMasterCard]
	, [EnableAmex]
	, [EnableDiscover]
	, [TransactionKey]
	, [ActiveInd]
	, [DisplayOrder]
	, [TestMode]
	, [OfflineMode]
	, [SaveCreditCartInfo]
    FROM
	dbo.[ZNodePaymentSetting]
    WHERE 
	 ([PaymentSettingID] = @PaymentSettingID AND @PaymentSettingID is not null)
	OR ([PaymentTypeID] = @PaymentTypeID AND @PaymentTypeID is not null)
	OR ([ProfileID] = @ProfileID AND @ProfileID is not null)
	OR ([GatewayTypeID] = @GatewayTypeID AND @GatewayTypeID is not null)
	OR ([GatewayUsername] = @GatewayUsername AND @GatewayUsername is not null)
	OR ([GatewayPassword] = @GatewayPassword AND @GatewayPassword is not null)
	OR ([EnableVisa] = @EnableVisa AND @EnableVisa is not null)
	OR ([EnableMasterCard] = @EnableMasterCard AND @EnableMasterCard is not null)
	OR ([EnableAmex] = @EnableAmex AND @EnableAmex is not null)
	OR ([EnableDiscover] = @EnableDiscover AND @EnableDiscover is not null)
	OR ([TransactionKey] = @TransactionKey AND @TransactionKey is not null)
	OR ([ActiveInd] = @ActiveInd AND @ActiveInd is not null)
	OR ([DisplayOrder] = @DisplayOrder AND @DisplayOrder is not null)
	OR ([TestMode] = @TestMode AND @TestMode is not null)
	OR ([OfflineMode] = @OfflineMode AND @OfflineMode is not null)
	OR ([SaveCreditCartInfo] = @SaveCreditCartInfo AND @SaveCreditCartInfo is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodePaymentSetting_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodePaymentSetting table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [PaymentSettingID]
					, [PaymentTypeID]
					, [ProfileID]
					, [GatewayTypeID]
					, [GatewayUsername]
					, [GatewayPassword]
					, [EnableVisa]
					, [EnableMasterCard]
					, [EnableAmex]
					, [EnableDiscover]
					, [TransactionKey]
					, [ActiveInd]
					, [DisplayOrder]
					, [TestMode]
					, [OfflineMode]
					, [SaveCreditCartInfo]
					from dbo.[ZNodePaymentSetting] {0}
				)
				select
				       [PaymentSettingID],
				       [PaymentTypeID],
				       [ProfileID],
				       [GatewayTypeID],
				       [GatewayUsername],
				       [GatewayPassword],
				       [EnableVisa],
				       [EnableMasterCard],
				       [EnableAmex],
				       [EnableDiscover],
				       [TransactionKey],
				       [ActiveInd],
				       [DisplayOrder],
				       [TestMode],
				       [OfflineMode],
				       [SaveCreditCartInfo]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodePaymentSetting] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAddOn_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeProductAddOn table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ProductAddOnID],
					[ProductID],
					[AddOnID]
				FROM
					dbo.[ZNodeProductAddOn]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAddOn_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductAddOn table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductAddOnID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductAddOnID]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [AddOnID]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductAddOn]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductAddOnID],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [AddOnID]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductAddOn]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAddOn_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeProductAddOn table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductAddOnID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeProductAddOn]
					(
					[ProductID]
					,[AddOnID]
					)
				VALUES
					(
					@ProductID
					,@AddOnID
					)
				
				-- Get the identity value
				SET @ProductAddOnID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAddOn_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeProductAddOn table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductAddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeProductAddOn]
				SET
					[ProductID] = @ProductID
					,[AddOnID] = @AddOnID
				WHERE
[ProductAddOnID] = @ProductAddOnID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAddOn_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeProductAddOn table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductAddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeProductAddOn] WITH (ROWLOCK) 
				WHERE
					[ProductAddOnID] = @ProductAddOnID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAddOn_GetByProductID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductAddOn table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProductAddOnID],
					[ProductID],
					[AddOnID]
				FROM
					dbo.[ZNodeProductAddOn]
				WHERE
					[ProductID] = @ProductID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAddOn_GetByAddOnID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductAddOn table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProductAddOnID],
					[ProductID],
					[AddOnID]
				FROM
					dbo.[ZNodeProductAddOn]
				WHERE
					[AddOnID] = @AddOnID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAddOn_GetByProductAddOnID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductAddOn table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductAddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProductAddOnID],
					[ProductID],
					[AddOnID]
				FROM
					dbo.[ZNodeProductAddOn]
				WHERE
					[ProductAddOnID] = @ProductAddOnID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAddOn_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeProductAddOn table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductAddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductAddOnID]
	, [ProductID]
	, [AddOnID]
    FROM
	dbo.[ZNodeProductAddOn]
    WHERE 
	 ([ProductAddOnID] = @ProductAddOnID OR @ProductAddOnID is null)
	AND ([ProductID] = @ProductID OR @ProductID is null)
	AND ([AddOnID] = @AddOnID OR @AddOnID is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductAddOnID]
	, [ProductID]
	, [AddOnID]
    FROM
	dbo.[ZNodeProductAddOn]
    WHERE 
	 ([ProductAddOnID] = @ProductAddOnID AND @ProductAddOnID is not null)
	OR ([ProductID] = @ProductID AND @ProductID is not null)
	OR ([AddOnID] = @AddOnID AND @AddOnID is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAddOn_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductAddOn table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ProductAddOnID]
					, [ProductID]
					, [AddOnID]
					from dbo.[ZNodeProductAddOn] {0}
				)
				select
				       [ProductAddOnID],
				       [ProductID],
				       [AddOnID]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeProductAddOn] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCategory_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeProductCategory table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ProductCategoryID],
					[ProductID],
					[CategoryID]
				FROM
					dbo.[ZNodeProductCategory]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCategory_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductCategory table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProductCategoryID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProductCategoryID]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [CategoryID]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductCategory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProductCategoryID],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [CategoryID]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductCategory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCategory_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeProductCategory table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductCategoryID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeProductCategory]
					(
					[ProductID]
					,[CategoryID]
					)
				VALUES
					(
					@ProductID
					,@CategoryID
					)
				
				-- Get the identity value
				SET @ProductCategoryID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCategory_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeProductCategory table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductCategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeProductCategory]
				SET
					[ProductID] = @ProductID
					,[CategoryID] = @CategoryID
				WHERE
[ProductCategoryID] = @ProductCategoryID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCategory_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeProductCategory table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductCategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeProductCategory] WITH (ROWLOCK) 
				WHERE
					[ProductCategoryID] = @ProductCategoryID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCategory_GetByCategoryID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductCategory table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProductCategoryID],
					[ProductID],
					[CategoryID]
				FROM
					dbo.[ZNodeProductCategory]
				WHERE
					[CategoryID] = @CategoryID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCategory_GetByProductID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductCategory table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProductCategoryID],
					[ProductID],
					[CategoryID]
				FROM
					dbo.[ZNodeProductCategory]
				WHERE
					[ProductID] = @ProductID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCategory_GetByProductCategoryID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductCategory table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductCategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProductCategoryID],
					[ProductID],
					[CategoryID]
				FROM
					dbo.[ZNodeProductCategory]
				WHERE
					[ProductCategoryID] = @ProductCategoryID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCategory_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeProductCategory table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductCategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProductCategoryID]
	, [ProductID]
	, [CategoryID]
    FROM
	dbo.[ZNodeProductCategory]
    WHERE 
	 ([ProductCategoryID] = @ProductCategoryID OR @ProductCategoryID is null)
	AND ([ProductID] = @ProductID OR @ProductID is null)
	AND ([CategoryID] = @CategoryID OR @CategoryID is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProductCategoryID]
	, [ProductID]
	, [CategoryID]
    FROM
	dbo.[ZNodeProductCategory]
    WHERE 
	 ([ProductCategoryID] = @ProductCategoryID AND @ProductCategoryID is not null)
	OR ([ProductID] = @ProductID AND @ProductID is not null)
	OR ([CategoryID] = @CategoryID AND @CategoryID is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductCategory_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductCategory table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ProductCategoryID]
					, [ProductID]
					, [CategoryID]
					from dbo.[ZNodeProductCategory] {0}
				)
				select
				       [ProductCategoryID],
				       [ProductID],
				       [CategoryID]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeProductCategory] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAttribute_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeProductAttribute table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AttributeId],
					[AttributeTypeId],
					[Name],
					[ExternalId],
					[DisplayOrder],
					[IsActive],
					[OldAttributeId]
				FROM
					dbo.[ZNodeProductAttribute]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAttribute_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductAttribute table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[AttributeId]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [AttributeId]'
				SET @SQL = @SQL + ', [AttributeTypeId]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [ExternalId]'
				SET @SQL = @SQL + ', [DisplayOrder]'
				SET @SQL = @SQL + ', [IsActive]'
				SET @SQL = @SQL + ', [OldAttributeId]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductAttribute]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [AttributeId],'
				SET @SQL = @SQL + ' [AttributeTypeId],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [ExternalId],'
				SET @SQL = @SQL + ' [DisplayOrder],'
				SET @SQL = @SQL + ' [IsActive],'
				SET @SQL = @SQL + ' [OldAttributeId]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProductAttribute]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAttribute_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeProductAttribute table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AttributeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AttributeTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ExternalId" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IsActive" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OldAttributeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeProductAttribute]
					(
					[AttributeTypeId]
					,[Name]
					,[ExternalId]
					,[DisplayOrder]
					,[IsActive]
					,[OldAttributeId]
					)
				VALUES
					(
					@AttributeTypeId
					,@Name
					,@ExternalId
					,@DisplayOrder
					,@IsActive
					,@OldAttributeId
					)
				
				-- Get the identity value
				SET @AttributeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAttribute_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeProductAttribute table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AttributeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AttributeTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ExternalId" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IsActive" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@OldAttributeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeProductAttribute]
				SET
					[AttributeTypeId] = @AttributeTypeId
					,[Name] = @Name
					,[ExternalId] = @ExternalId
					,[DisplayOrder] = @DisplayOrder
					,[IsActive] = @IsActive
					,[OldAttributeId] = @OldAttributeId
				WHERE
[AttributeId] = @AttributeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAttribute_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeProductAttribute table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AttributeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeProductAttribute] WITH (ROWLOCK) 
				WHERE
					[AttributeId] = @AttributeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAttribute_GetByAttributeId" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductAttribute table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AttributeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AttributeId],
					[AttributeTypeId],
					[Name],
					[ExternalId],
					[DisplayOrder],
					[IsActive],
					[OldAttributeId]
				FROM
					dbo.[ZNodeProductAttribute]
				WHERE
					[AttributeId] = @AttributeId
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAttribute_GetByAttributeTypeId" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProductAttribute table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AttributeTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AttributeId],
					[AttributeTypeId],
					[Name],
					[ExternalId],
					[DisplayOrder],
					[IsActive],
					[OldAttributeId]
				FROM
					dbo.[ZNodeProductAttribute]
				WHERE
					[AttributeTypeId] = @AttributeTypeId
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAttribute_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeProductAttribute table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AttributeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AttributeTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ExternalId" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsActive" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OldAttributeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AttributeId]
	, [AttributeTypeId]
	, [Name]
	, [ExternalId]
	, [DisplayOrder]
	, [IsActive]
	, [OldAttributeId]
    FROM
	dbo.[ZNodeProductAttribute]
    WHERE 
	 ([AttributeId] = @AttributeId OR @AttributeId is null)
	AND ([AttributeTypeId] = @AttributeTypeId OR @AttributeTypeId is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([ExternalId] = @ExternalId OR @ExternalId is null)
	AND ([DisplayOrder] = @DisplayOrder OR @DisplayOrder is null)
	AND ([IsActive] = @IsActive OR @IsActive is null)
	AND ([OldAttributeId] = @OldAttributeId OR @OldAttributeId is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AttributeId]
	, [AttributeTypeId]
	, [Name]
	, [ExternalId]
	, [DisplayOrder]
	, [IsActive]
	, [OldAttributeId]
    FROM
	dbo.[ZNodeProductAttribute]
    WHERE 
	 ([AttributeId] = @AttributeId AND @AttributeId is not null)
	OR ([AttributeTypeId] = @AttributeTypeId AND @AttributeTypeId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([ExternalId] = @ExternalId AND @ExternalId is not null)
	OR ([DisplayOrder] = @DisplayOrder AND @DisplayOrder is not null)
	OR ([IsActive] = @IsActive AND @IsActive is not null)
	OR ([OldAttributeId] = @OldAttributeId AND @OldAttributeId is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProductAttribute_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProductAttribute table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [AttributeId]
					, [AttributeTypeId]
					, [Name]
					, [ExternalId]
					, [DisplayOrder]
					, [IsActive]
					, [OldAttributeId]
					from dbo.[ZNodeProductAttribute] {0}
				)
				select
				       [AttributeId],
				       [AttributeTypeId],
				       [Name],
				       [ExternalId],
				       [DisplayOrder],
				       [IsActive],
				       [OldAttributeId]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeProductAttribute] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProfile_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeProfile table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ProfileID],
					[PortalID],
					[Name],
					[IsDefault]
				FROM
					dbo.[ZNodeProfile]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProfile_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProfile table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ProfileID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ProfileID]'
				SET @SQL = @SQL + ', [PortalID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [IsDefault]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProfile]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ProfileID],'
				SET @SQL = @SQL + ' [PortalID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [IsDefault]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeProfile]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProfile_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeProfile table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfileID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@IsDefault" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeProfile]
					(
					[PortalID]
					,[Name]
					,[IsDefault]
					)
				VALUES
					(
					@PortalID
					,@Name
					,@IsDefault
					)
				
				-- Get the identity value
				SET @ProfileID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProfile_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeProfile table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@IsDefault" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeProfile]
				SET
					[PortalID] = @PortalID
					,[Name] = @Name
					,[IsDefault] = @IsDefault
				WHERE
[ProfileID] = @ProfileID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProfile_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeProfile table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeProfile] WITH (ROWLOCK) 
				WHERE
					[ProfileID] = @ProfileID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProfile_GetByPortalID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProfile table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ProfileID],
					[PortalID],
					[Name],
					[IsDefault]
				FROM
					dbo.[ZNodeProfile]
				WHERE
					[PortalID] = @PortalID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProfile_GetByProfileID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProfile table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProfileID],
					[PortalID],
					[Name],
					[IsDefault]
				FROM
					dbo.[ZNodeProfile]
				WHERE
					[ProfileID] = @ProfileID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProfile_GetByName" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProfile table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProfileID],
					[PortalID],
					[Name],
					[IsDefault]
				FROM
					dbo.[ZNodeProfile]
				WHERE
					[Name] = @Name
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProfile_GetByIsDefault" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeProfile table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@IsDefault" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ProfileID],
					[PortalID],
					[Name],
					[IsDefault]
				FROM
					dbo.[ZNodeProfile]
				WHERE
					[IsDefault] = @IsDefault
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProfile_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeProfile table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@IsDefault" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ProfileID]
	, [PortalID]
	, [Name]
	, [IsDefault]
    FROM
	dbo.[ZNodeProfile]
    WHERE 
	 ([ProfileID] = @ProfileID OR @ProfileID is null)
	AND ([PortalID] = @PortalID OR @PortalID is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([IsDefault] = @IsDefault OR @IsDefault is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ProfileID]
	, [PortalID]
	, [Name]
	, [IsDefault]
    FROM
	dbo.[ZNodeProfile]
    WHERE 
	 ([ProfileID] = @ProfileID AND @ProfileID is not null)
	OR ([PortalID] = @PortalID AND @PortalID is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([IsDefault] = @IsDefault AND @IsDefault is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeProfile_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeProfile table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ProfileID]
					, [PortalID]
					, [Name]
					, [IsDefault]
					from dbo.[ZNodeProfile] {0}
				)
				select
				       [ProfileID],
				       [PortalID],
				       [Name],
				       [IsDefault]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeProfile] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeState_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeState table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[Code],
					[CountryCode],
					[Name]
				FROM
					dbo.[ZNodeState]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeState_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeState table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[Code]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [Code]'
				SET @SQL = @SQL + ', [CountryCode]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeState]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [Code],'
				SET @SQL = @SQL + ' [CountryCode],'
				SET @SQL = @SQL + ' [Name]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeState]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeState_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeState table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Code" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@CountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeState]
					(
					[Code]
					,[CountryCode]
					,[Name]
					)
				VALUES
					(
					@Code
					,@CountryCode
					,@Name
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeState_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeState table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Code" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@OriginalCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@CountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeState]
				SET
					[Code] = @Code
					,[CountryCode] = @CountryCode
					,[Name] = @Name
				WHERE
[Code] = @OriginalCode 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeState_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeState table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Code" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeState] WITH (ROWLOCK) 
				WHERE
					[Code] = @Code
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeState_GetByCode" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeState table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Code" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Code],
					[CountryCode],
					[Name]
				FROM
					dbo.[ZNodeState]
				WHERE
					[Code] = @Code
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeState_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeState table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Code" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@CountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [Code]
	, [CountryCode]
	, [Name]
    FROM
	dbo.[ZNodeState]
    WHERE 
	 ([Code] = @Code OR @Code is null)
	AND ([CountryCode] = @CountryCode OR @CountryCode is null)
	AND ([Name] = @Name OR @Name is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [Code]
	, [CountryCode]
	, [Name]
    FROM
	dbo.[ZNodeState]
    WHERE 
	 ([Code] = @Code AND @Code is not null)
	OR ([CountryCode] = @CountryCode AND @CountryCode is not null)
	OR ([Name] = @Name AND @Name is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeState_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeState table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [Code]
					, [CountryCode]
					, [Name]
					from dbo.[ZNodeState] {0}
				)
				select
				       [Code],
				       [CountryCode],
				       [Name]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeState] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKUAttribute_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeSKUAttribute table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SKUAttributeID],
					[SKUID],
					[AttributeId]
				FROM
					dbo.[ZNodeSKUAttribute]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKUAttribute_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeSKUAttribute table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SKUAttributeID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SKUAttributeID]'
				SET @SQL = @SQL + ', [SKUID]'
				SET @SQL = @SQL + ', [AttributeId]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeSKUAttribute]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SKUAttributeID],'
				SET @SQL = @SQL + ' [SKUID],'
				SET @SQL = @SQL + ' [AttributeId]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeSKUAttribute]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKUAttribute_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeSKUAttribute table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SKUAttributeID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SKUID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AttributeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeSKUAttribute]
					(
					[SKUID]
					,[AttributeId]
					)
				VALUES
					(
					@SKUID
					,@AttributeId
					)
				
				-- Get the identity value
				SET @SKUAttributeID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKUAttribute_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeSKUAttribute table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SKUAttributeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SKUID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AttributeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeSKUAttribute]
				SET
					[SKUID] = @SKUID
					,[AttributeId] = @AttributeId
				WHERE
[SKUAttributeID] = @SKUAttributeID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKUAttribute_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeSKUAttribute table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SKUAttributeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeSKUAttribute] WITH (ROWLOCK) 
				WHERE
					[SKUAttributeID] = @SKUAttributeID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKUAttribute_GetByAttributeId" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeSKUAttribute table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AttributeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SKUAttributeID],
					[SKUID],
					[AttributeId]
				FROM
					dbo.[ZNodeSKUAttribute]
				WHERE
					[AttributeId] = @AttributeId
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKUAttribute_GetBySKUID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeSKUAttribute table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SKUID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[SKUAttributeID],
					[SKUID],
					[AttributeId]
				FROM
					dbo.[ZNodeSKUAttribute]
				WHERE
					[SKUID] = @SKUID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKUAttribute_GetBySKUAttributeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeSKUAttribute table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SKUAttributeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SKUAttributeID],
					[SKUID],
					[AttributeId]
				FROM
					dbo.[ZNodeSKUAttribute]
				WHERE
					[SKUAttributeID] = @SKUAttributeID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKUAttribute_GetByAttributeIdSKUID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeSKUAttribute table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AttributeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SKUID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SKUAttributeID],
					[SKUID],
					[AttributeId]
				FROM
					dbo.[ZNodeSKUAttribute]
				WHERE
					[AttributeId] = @AttributeId
					AND [SKUID] = @SKUID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKUAttribute_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeSKUAttribute table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SKUAttributeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SKUID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AttributeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SKUAttributeID]
	, [SKUID]
	, [AttributeId]
    FROM
	dbo.[ZNodeSKUAttribute]
    WHERE 
	 ([SKUAttributeID] = @SKUAttributeID OR @SKUAttributeID is null)
	AND ([SKUID] = @SKUID OR @SKUID is null)
	AND ([AttributeId] = @AttributeId OR @AttributeId is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SKUAttributeID]
	, [SKUID]
	, [AttributeId]
    FROM
	dbo.[ZNodeSKUAttribute]
    WHERE 
	 ([SKUAttributeID] = @SKUAttributeID AND @SKUAttributeID is not null)
	OR ([SKUID] = @SKUID AND @SKUID is not null)
	OR ([AttributeId] = @AttributeId AND @AttributeId is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKUAttribute_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeSKUAttribute table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [SKUAttributeID]
					, [SKUID]
					, [AttributeId]
					from dbo.[ZNodeSKUAttribute] {0}
				)
				select
				       [SKUAttributeID],
				       [SKUID],
				       [AttributeId]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeSKUAttribute] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingType_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeShippingType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ShippingTypeID],
					[Name],
					[Description]
				FROM
					dbo.[ZNodeShippingType]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingType_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeShippingType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ShippingTypeID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ShippingTypeID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeShippingType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ShippingTypeID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Description]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeShippingType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeShippingType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeShippingType]
					(
					[ShippingTypeID]
					,[Name]
					,[Description]
					)
				VALUES
					(
					@ShippingTypeID
					,@Name
					,@Description
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeShippingType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalShippingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeShippingType]
				SET
					[ShippingTypeID] = @ShippingTypeID
					,[Name] = @Name
					,[Description] = @Description
				WHERE
[ShippingTypeID] = @OriginalShippingTypeID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeShippingType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeShippingType] WITH (ROWLOCK) 
				WHERE
					[ShippingTypeID] = @ShippingTypeID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingType_GetByShippingTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeShippingType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ShippingTypeID],
					[Name],
					[Description]
				FROM
					dbo.[ZNodeShippingType]
				WHERE
					[ShippingTypeID] = @ShippingTypeID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingType_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeShippingType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShippingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ShippingTypeID]
	, [Name]
	, [Description]
    FROM
	dbo.[ZNodeShippingType]
    WHERE 
	 ([ShippingTypeID] = @ShippingTypeID OR @ShippingTypeID is null)
	AND ([Name] = @Name OR @Name is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ShippingTypeID]
	, [Name]
	, [Description]
    FROM
	dbo.[ZNodeShippingType]
    WHERE 
	 ([ShippingTypeID] = @ShippingTypeID AND @ShippingTypeID is not null)
	OR ([Name] = @Name AND @Name is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingType_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeShippingType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ShippingTypeID]
					, [Name]
					, [Description]
					from dbo.[ZNodeShippingType] {0}
				)
				select
				       [ShippingTypeID],
				       [Name],
				       [Description]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeShippingType] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeTaxRule_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeTaxRule table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[TaxRuleID],
					[PortalID],
					[TaxRate],
					[DestinationCountryCode],
					[DestinationStateCode],
					[Precedence]
				FROM
					dbo.[ZNodeTaxRule]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeTaxRule_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeTaxRule table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[TaxRuleID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [TaxRuleID]'
				SET @SQL = @SQL + ', [PortalID]'
				SET @SQL = @SQL + ', [TaxRate]'
				SET @SQL = @SQL + ', [DestinationCountryCode]'
				SET @SQL = @SQL + ', [DestinationStateCode]'
				SET @SQL = @SQL + ', [Precedence]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeTaxRule]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [TaxRuleID],'
				SET @SQL = @SQL + ' [PortalID],'
				SET @SQL = @SQL + ' [TaxRate],'
				SET @SQL = @SQL + ' [DestinationCountryCode],'
				SET @SQL = @SQL + ' [DestinationStateCode],'
				SET @SQL = @SQL + ' [Precedence]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeTaxRule]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeTaxRule_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeTaxRule table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@TaxRuleID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TaxRate" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@DestinationCountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@DestinationStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@Precedence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeTaxRule]
					(
					[PortalID]
					,[TaxRate]
					,[DestinationCountryCode]
					,[DestinationStateCode]
					,[Precedence]
					)
				VALUES
					(
					@PortalID
					,@TaxRate
					,@DestinationCountryCode
					,@DestinationStateCode
					,@Precedence
					)
				
				-- Get the identity value
				SET @TaxRuleID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeTaxRule_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeTaxRule table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@TaxRuleID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@TaxRate" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@DestinationCountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@DestinationStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@Precedence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeTaxRule]
				SET
					[PortalID] = @PortalID
					,[TaxRate] = @TaxRate
					,[DestinationCountryCode] = @DestinationCountryCode
					,[DestinationStateCode] = @DestinationStateCode
					,[Precedence] = @Precedence
				WHERE
[TaxRuleID] = @TaxRuleID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeTaxRule_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeTaxRule table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@TaxRuleID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeTaxRule] WITH (ROWLOCK) 
				WHERE
					[TaxRuleID] = @TaxRuleID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeTaxRule_GetByPortalID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeTaxRule table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[TaxRuleID],
					[PortalID],
					[TaxRate],
					[DestinationCountryCode],
					[DestinationStateCode],
					[Precedence]
				FROM
					dbo.[ZNodeTaxRule]
				WHERE
					[PortalID] = @PortalID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeTaxRule_GetByDestinationCountryCode" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeTaxRule table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DestinationCountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[TaxRuleID],
					[PortalID],
					[TaxRate],
					[DestinationCountryCode],
					[DestinationStateCode],
					[Precedence]
				FROM
					dbo.[ZNodeTaxRule]
				WHERE
					[DestinationCountryCode] = @DestinationCountryCode
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeTaxRule_GetByTaxRuleID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeTaxRule table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@TaxRuleID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[TaxRuleID],
					[PortalID],
					[TaxRate],
					[DestinationCountryCode],
					[DestinationStateCode],
					[Precedence]
				FROM
					dbo.[ZNodeTaxRule]
				WHERE
					[TaxRuleID] = @TaxRuleID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeTaxRule_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeTaxRule table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@TaxRuleID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@TaxRate" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@DestinationCountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@DestinationStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@Precedence" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [TaxRuleID]
	, [PortalID]
	, [TaxRate]
	, [DestinationCountryCode]
	, [DestinationStateCode]
	, [Precedence]
    FROM
	dbo.[ZNodeTaxRule]
    WHERE 
	 ([TaxRuleID] = @TaxRuleID OR @TaxRuleID is null)
	AND ([PortalID] = @PortalID OR @PortalID is null)
	AND ([TaxRate] = @TaxRate OR @TaxRate is null)
	AND ([DestinationCountryCode] = @DestinationCountryCode OR @DestinationCountryCode is null)
	AND ([DestinationStateCode] = @DestinationStateCode OR @DestinationStateCode is null)
	AND ([Precedence] = @Precedence OR @Precedence is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [TaxRuleID]
	, [PortalID]
	, [TaxRate]
	, [DestinationCountryCode]
	, [DestinationStateCode]
	, [Precedence]
    FROM
	dbo.[ZNodeTaxRule]
    WHERE 
	 ([TaxRuleID] = @TaxRuleID AND @TaxRuleID is not null)
	OR ([PortalID] = @PortalID AND @PortalID is not null)
	OR ([TaxRate] = @TaxRate AND @TaxRate is not null)
	OR ([DestinationCountryCode] = @DestinationCountryCode AND @DestinationCountryCode is not null)
	OR ([DestinationStateCode] = @DestinationStateCode AND @DestinationStateCode is not null)
	OR ([Precedence] = @Precedence AND @Precedence is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeTaxRule_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeTaxRule table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [TaxRuleID]
					, [PortalID]
					, [TaxRate]
					, [DestinationCountryCode]
					, [DestinationStateCode]
					, [Precedence]
					from dbo.[ZNodeTaxRule] {0}
				)
				select
				       [TaxRuleID],
				       [PortalID],
				       [TaxRate],
				       [DestinationCountryCode],
				       [DestinationStateCode],
				       [Precedence]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeTaxRule] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccountType_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeAccountType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AccountTypeID],
					[AccountTypeNme]
				FROM
					dbo.[ZNodeAccountType]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccountType_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeAccountType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[AccountTypeID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [AccountTypeID]'
				SET @SQL = @SQL + ', [AccountTypeNme]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeAccountType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [AccountTypeID],'
				SET @SQL = @SQL + ' [AccountTypeNme]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeAccountType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccountType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeAccountType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AccountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccountTypeNme" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeAccountType]
					(
					[AccountTypeID]
					,[AccountTypeNme]
					)
				VALUES
					(
					@AccountTypeID
					,@AccountTypeNme
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccountType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeAccountType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AccountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalAccountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccountTypeNme" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeAccountType]
				SET
					[AccountTypeID] = @AccountTypeID
					,[AccountTypeNme] = @AccountTypeNme
				WHERE
[AccountTypeID] = @OriginalAccountTypeID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccountType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeAccountType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AccountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeAccountType] WITH (ROWLOCK) 
				WHERE
					[AccountTypeID] = @AccountTypeID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccountType_GetByAccountTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeAccountType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AccountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AccountTypeID],
					[AccountTypeNme]
				FROM
					dbo.[ZNodeAccountType]
				WHERE
					[AccountTypeID] = @AccountTypeID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccountType_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeAccountType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccountTypeNme" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AccountTypeID]
	, [AccountTypeNme]
    FROM
	dbo.[ZNodeAccountType]
    WHERE 
	 ([AccountTypeID] = @AccountTypeID OR @AccountTypeID is null)
	AND ([AccountTypeNme] = @AccountTypeNme OR @AccountTypeNme is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AccountTypeID]
	, [AccountTypeNme]
    FROM
	dbo.[ZNodeAccountType]
    WHERE 
	 ([AccountTypeID] = @AccountTypeID AND @AccountTypeID is not null)
	OR ([AccountTypeNme] = @AccountTypeNme AND @AccountTypeNme is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccountType_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeAccountType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [AccountTypeID]
					, [AccountTypeNme]
					from dbo.[ZNodeAccountType] {0}
				)
				select
				       [AccountTypeID],
				       [AccountTypeNme]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeAccountType] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeStore_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeStore table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[StoreID],
					[Name],
					[Address1],
					[Address2],
					[Address3],
					[City],
					[State],
					[Zip],
					[Phone],
					[Fax],
					[ContactName],
					[ContactAddress1],
					[ContactAddress2],
					[ContactCity],
					[ContactState],
					[ContactZip],
					[ContactPhone],
					[IsDealer],
					[p1]
				FROM
					dbo.[ZNodeStore]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeStore_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeStore table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[StoreID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [StoreID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Address1]'
				SET @SQL = @SQL + ', [Address2]'
				SET @SQL = @SQL + ', [Address3]'
				SET @SQL = @SQL + ', [City]'
				SET @SQL = @SQL + ', [State]'
				SET @SQL = @SQL + ', [Zip]'
				SET @SQL = @SQL + ', [Phone]'
				SET @SQL = @SQL + ', [Fax]'
				SET @SQL = @SQL + ', [ContactName]'
				SET @SQL = @SQL + ', [ContactAddress1]'
				SET @SQL = @SQL + ', [ContactAddress2]'
				SET @SQL = @SQL + ', [ContactCity]'
				SET @SQL = @SQL + ', [ContactState]'
				SET @SQL = @SQL + ', [ContactZip]'
				SET @SQL = @SQL + ', [ContactPhone]'
				SET @SQL = @SQL + ', [IsDealer]'
				SET @SQL = @SQL + ', [p1]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeStore]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [StoreID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Address1],'
				SET @SQL = @SQL + ' [Address2],'
				SET @SQL = @SQL + ' [Address3],'
				SET @SQL = @SQL + ' [City],'
				SET @SQL = @SQL + ' [State],'
				SET @SQL = @SQL + ' [Zip],'
				SET @SQL = @SQL + ' [Phone],'
				SET @SQL = @SQL + ' [Fax],'
				SET @SQL = @SQL + ' [ContactName],'
				SET @SQL = @SQL + ' [ContactAddress1],'
				SET @SQL = @SQL + ' [ContactAddress2],'
				SET @SQL = @SQL + ' [ContactCity],'
				SET @SQL = @SQL + ' [ContactState],'
				SET @SQL = @SQL + ' [ContactZip],'
				SET @SQL = @SQL + ' [ContactPhone],'
				SET @SQL = @SQL + ' [IsDealer],'
				SET @SQL = @SQL + ' [p1]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeStore]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeStore_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeStore table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@StoreID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Address1" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Address2" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Address3" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@City" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@State" type="char" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@Zip" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Phone" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Fax" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@ContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ContactAddress1" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ContactAddress2" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ContactCity" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ContactState" type="char" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@ContactZip" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@ContactPhone" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@IsDealer" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@P1" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeStore]
					(
					[StoreID]
					,[Name]
					,[Address1]
					,[Address2]
					,[Address3]
					,[City]
					,[State]
					,[Zip]
					,[Phone]
					,[Fax]
					,[ContactName]
					,[ContactAddress1]
					,[ContactAddress2]
					,[ContactCity]
					,[ContactState]
					,[ContactZip]
					,[ContactPhone]
					,[IsDealer]
					,[p1]
					)
				VALUES
					(
					@StoreID
					,@Name
					,@Address1
					,@Address2
					,@Address3
					,@City
					,@State
					,@Zip
					,@Phone
					,@Fax
					,@ContactName
					,@ContactAddress1
					,@ContactAddress2
					,@ContactCity
					,@ContactState
					,@ContactZip
					,@ContactPhone
					,@IsDealer
					,@P1
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeStore_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeStore table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@StoreID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalStoreID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Address1" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Address2" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Address3" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@City" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@State" type="char" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@Zip" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Phone" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Fax" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@ContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ContactAddress1" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ContactAddress2" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ContactCity" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@ContactState" type="char" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@ContactZip" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@ContactPhone" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@IsDealer" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault=""/>
				<parameter name="@P1" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeStore]
				SET
					[StoreID] = @StoreID
					,[Name] = @Name
					,[Address1] = @Address1
					,[Address2] = @Address2
					,[Address3] = @Address3
					,[City] = @City
					,[State] = @State
					,[Zip] = @Zip
					,[Phone] = @Phone
					,[Fax] = @Fax
					,[ContactName] = @ContactName
					,[ContactAddress1] = @ContactAddress1
					,[ContactAddress2] = @ContactAddress2
					,[ContactCity] = @ContactCity
					,[ContactState] = @ContactState
					,[ContactZip] = @ContactZip
					,[ContactPhone] = @ContactPhone
					,[IsDealer] = @IsDealer
					,[p1] = @P1
				WHERE
[StoreID] = @OriginalStoreID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeStore_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeStore table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@StoreID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeStore] WITH (ROWLOCK) 
				WHERE
					[StoreID] = @StoreID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeStore_GetByStoreID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeStore table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@StoreID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[StoreID],
					[Name],
					[Address1],
					[Address2],
					[Address3],
					[City],
					[State],
					[Zip],
					[Phone],
					[Fax],
					[ContactName],
					[ContactAddress1],
					[ContactAddress2],
					[ContactCity],
					[ContactState],
					[ContactZip],
					[ContactPhone],
					[IsDealer],
					[p1]
				FROM
					dbo.[ZNodeStore]
				WHERE
					[StoreID] = @StoreID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeStore_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeStore table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@StoreID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Address1" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Address2" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Address3" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@City" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@State" type="char" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@Zip" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Phone" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@Fax" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@ContactName" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ContactAddress1" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ContactAddress2" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ContactCity" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@ContactState" type="char" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@ContactZip" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@ContactPhone" type="varchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@IsDealer" type="char" direction="Input" size="1" precision="0" scale="0" param="(1)" nulldefault="null"/>
				<parameter name="@P1" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [StoreID]
	, [Name]
	, [Address1]
	, [Address2]
	, [Address3]
	, [City]
	, [State]
	, [Zip]
	, [Phone]
	, [Fax]
	, [ContactName]
	, [ContactAddress1]
	, [ContactAddress2]
	, [ContactCity]
	, [ContactState]
	, [ContactZip]
	, [ContactPhone]
	, [IsDealer]
	, [p1]
    FROM
	dbo.[ZNodeStore]
    WHERE 
	 ([StoreID] = @StoreID OR @StoreID is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([Address1] = @Address1 OR @Address1 is null)
	AND ([Address2] = @Address2 OR @Address2 is null)
	AND ([Address3] = @Address3 OR @Address3 is null)
	AND ([City] = @City OR @City is null)
	AND ([State] = @State OR @State is null)
	AND ([Zip] = @Zip OR @Zip is null)
	AND ([Phone] = @Phone OR @Phone is null)
	AND ([Fax] = @Fax OR @Fax is null)
	AND ([ContactName] = @ContactName OR @ContactName is null)
	AND ([ContactAddress1] = @ContactAddress1 OR @ContactAddress1 is null)
	AND ([ContactAddress2] = @ContactAddress2 OR @ContactAddress2 is null)
	AND ([ContactCity] = @ContactCity OR @ContactCity is null)
	AND ([ContactState] = @ContactState OR @ContactState is null)
	AND ([ContactZip] = @ContactZip OR @ContactZip is null)
	AND ([ContactPhone] = @ContactPhone OR @ContactPhone is null)
	AND ([IsDealer] = @IsDealer OR @IsDealer is null)
	AND ([p1] = @P1 OR @P1 is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [StoreID]
	, [Name]
	, [Address1]
	, [Address2]
	, [Address3]
	, [City]
	, [State]
	, [Zip]
	, [Phone]
	, [Fax]
	, [ContactName]
	, [ContactAddress1]
	, [ContactAddress2]
	, [ContactCity]
	, [ContactState]
	, [ContactZip]
	, [ContactPhone]
	, [IsDealer]
	, [p1]
    FROM
	dbo.[ZNodeStore]
    WHERE 
	 ([StoreID] = @StoreID AND @StoreID is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([Address1] = @Address1 AND @Address1 is not null)
	OR ([Address2] = @Address2 AND @Address2 is not null)
	OR ([Address3] = @Address3 AND @Address3 is not null)
	OR ([City] = @City AND @City is not null)
	OR ([State] = @State AND @State is not null)
	OR ([Zip] = @Zip AND @Zip is not null)
	OR ([Phone] = @Phone AND @Phone is not null)
	OR ([Fax] = @Fax AND @Fax is not null)
	OR ([ContactName] = @ContactName AND @ContactName is not null)
	OR ([ContactAddress1] = @ContactAddress1 AND @ContactAddress1 is not null)
	OR ([ContactAddress2] = @ContactAddress2 AND @ContactAddress2 is not null)
	OR ([ContactCity] = @ContactCity AND @ContactCity is not null)
	OR ([ContactState] = @ContactState AND @ContactState is not null)
	OR ([ContactZip] = @ContactZip AND @ContactZip is not null)
	OR ([ContactPhone] = @ContactPhone AND @ContactPhone is not null)
	OR ([IsDealer] = @IsDealer AND @IsDealer is not null)
	OR ([p1] = @P1 AND @P1 is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeStore_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeStore table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [StoreID]
					, [Name]
					, [Address1]
					, [Address2]
					, [Address3]
					, [City]
					, [State]
					, [Zip]
					, [Phone]
					, [Fax]
					, [ContactName]
					, [ContactAddress1]
					, [ContactAddress2]
					, [ContactCity]
					, [ContactState]
					, [ContactZip]
					, [ContactPhone]
					, [IsDealer]
					, [p1]
					from dbo.[ZNodeStore] {0}
				)
				select
				       [StoreID],
				       [Name],
				       [Address1],
				       [Address2],
				       [Address3],
				       [City],
				       [State],
				       [Zip],
				       [Phone],
				       [Fax],
				       [ContactName],
				       [ContactAddress1],
				       [ContactAddress2],
				       [ContactCity],
				       [ContactState],
				       [ContactZip],
				       [ContactPhone],
				       [IsDealer],
				       [p1]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeStore] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKU_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeSKU table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[SKUID],
					[ProductID],
					[SKU],
					[WarehouseNo],
					[Note],
					[QuantityOnHand],
					[ReorderLevel],
					[WeightAdditional],
					[SKUPicturePath],
					[DisplayOrder],
					[RetailPriceAdditional],
					[WholesalePriceAdditional],
					[ActiveInd],
					[Custom1],
					[Custom2],
					[Custom3]
				FROM
					dbo.[ZNodeSKU]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKU_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeSKU table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[SKUID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [SKUID]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [SKU]'
				SET @SQL = @SQL + ', [WarehouseNo]'
				SET @SQL = @SQL + ', [Note]'
				SET @SQL = @SQL + ', [QuantityOnHand]'
				SET @SQL = @SQL + ', [ReorderLevel]'
				SET @SQL = @SQL + ', [WeightAdditional]'
				SET @SQL = @SQL + ', [SKUPicturePath]'
				SET @SQL = @SQL + ', [DisplayOrder]'
				SET @SQL = @SQL + ', [RetailPriceAdditional]'
				SET @SQL = @SQL + ', [WholesalePriceAdditional]'
				SET @SQL = @SQL + ', [ActiveInd]'
				SET @SQL = @SQL + ', [Custom1]'
				SET @SQL = @SQL + ', [Custom2]'
				SET @SQL = @SQL + ', [Custom3]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeSKU]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [SKUID],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [SKU],'
				SET @SQL = @SQL + ' [WarehouseNo],'
				SET @SQL = @SQL + ' [Note],'
				SET @SQL = @SQL + ' [QuantityOnHand],'
				SET @SQL = @SQL + ' [ReorderLevel],'
				SET @SQL = @SQL + ' [WeightAdditional],'
				SET @SQL = @SQL + ' [SKUPicturePath],'
				SET @SQL = @SQL + ' [DisplayOrder],'
				SET @SQL = @SQL + ' [RetailPriceAdditional],'
				SET @SQL = @SQL + ' [WholesalePriceAdditional],'
				SET @SQL = @SQL + ' [ActiveInd],'
				SET @SQL = @SQL + ' [Custom1],'
				SET @SQL = @SQL + ' [Custom2],'
				SET @SQL = @SQL + ' [Custom3]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeSKU]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKU_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeSKU table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SKUID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SKU" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@WarehouseNo" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Note" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@QuantityOnHand" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ReorderLevel" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WeightAdditional" type="decimal" direction="Input" size="9" precision="10" scale="2" param="(10, 2)" nulldefault=""/>
				<parameter name="@SKUPicturePath" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RetailPriceAdditional" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@WholesalePriceAdditional" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Custom1" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom2" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom3" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeSKU]
					(
					[ProductID]
					,[SKU]
					,[WarehouseNo]
					,[Note]
					,[QuantityOnHand]
					,[ReorderLevel]
					,[WeightAdditional]
					,[SKUPicturePath]
					,[DisplayOrder]
					,[RetailPriceAdditional]
					,[WholesalePriceAdditional]
					,[ActiveInd]
					,[Custom1]
					,[Custom2]
					,[Custom3]
					)
				VALUES
					(
					@ProductID
					,@SKU
					,@WarehouseNo
					,@Note
					,@QuantityOnHand
					,@ReorderLevel
					,@WeightAdditional
					,@SKUPicturePath
					,@DisplayOrder
					,@RetailPriceAdditional
					,@WholesalePriceAdditional
					,@ActiveInd
					,@Custom1
					,@Custom2
					,@Custom3
					)
				
				-- Get the identity value
				SET @SKUID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKU_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeSKU table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SKUID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@SKU" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@WarehouseNo" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Note" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@QuantityOnHand" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ReorderLevel" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@WeightAdditional" type="decimal" direction="Input" size="9" precision="10" scale="2" param="(10, 2)" nulldefault=""/>
				<parameter name="@SKUPicturePath" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@RetailPriceAdditional" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@WholesalePriceAdditional" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Custom1" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom2" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom3" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeSKU]
				SET
					[ProductID] = @ProductID
					,[SKU] = @SKU
					,[WarehouseNo] = @WarehouseNo
					,[Note] = @Note
					,[QuantityOnHand] = @QuantityOnHand
					,[ReorderLevel] = @ReorderLevel
					,[WeightAdditional] = @WeightAdditional
					,[SKUPicturePath] = @SKUPicturePath
					,[DisplayOrder] = @DisplayOrder
					,[RetailPriceAdditional] = @RetailPriceAdditional
					,[WholesalePriceAdditional] = @WholesalePriceAdditional
					,[ActiveInd] = @ActiveInd
					,[Custom1] = @Custom1
					,[Custom2] = @Custom2
					,[Custom3] = @Custom3
				WHERE
[SKUID] = @SKUID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKU_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeSKU table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SKUID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeSKU] WITH (ROWLOCK) 
				WHERE
					[SKUID] = @SKUID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKU_GetBySKUID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeSKU table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SKUID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SKUID],
					[ProductID],
					[SKU],
					[WarehouseNo],
					[Note],
					[QuantityOnHand],
					[ReorderLevel],
					[WeightAdditional],
					[SKUPicturePath],
					[DisplayOrder],
					[RetailPriceAdditional],
					[WholesalePriceAdditional],
					[ActiveInd],
					[Custom1],
					[Custom2],
					[Custom3]
				FROM
					dbo.[ZNodeSKU]
				WHERE
					[SKUID] = @SKUID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKU_GetByProductID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeSKU table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[SKUID],
					[ProductID],
					[SKU],
					[WarehouseNo],
					[Note],
					[QuantityOnHand],
					[ReorderLevel],
					[WeightAdditional],
					[SKUPicturePath],
					[DisplayOrder],
					[RetailPriceAdditional],
					[WholesalePriceAdditional],
					[ActiveInd],
					[Custom1],
					[Custom2],
					[Custom3]
				FROM
					dbo.[ZNodeSKU]
				WHERE
					[ProductID] = @ProductID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKU_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeSKU table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SKUID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@SKU" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@WarehouseNo" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Note" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@QuantityOnHand" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ReorderLevel" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@WeightAdditional" type="decimal" direction="Input" size="9" precision="10" scale="2" param="(10, 2)" nulldefault="null"/>
				<parameter name="@SKUPicturePath" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@RetailPriceAdditional" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@WholesalePriceAdditional" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Custom1" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom2" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom3" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [SKUID]
	, [ProductID]
	, [SKU]
	, [WarehouseNo]
	, [Note]
	, [QuantityOnHand]
	, [ReorderLevel]
	, [WeightAdditional]
	, [SKUPicturePath]
	, [DisplayOrder]
	, [RetailPriceAdditional]
	, [WholesalePriceAdditional]
	, [ActiveInd]
	, [Custom1]
	, [Custom2]
	, [Custom3]
    FROM
	dbo.[ZNodeSKU]
    WHERE 
	 ([SKUID] = @SKUID OR @SKUID is null)
	AND ([ProductID] = @ProductID OR @ProductID is null)
	AND ([SKU] = @SKU OR @SKU is null)
	AND ([WarehouseNo] = @WarehouseNo OR @WarehouseNo is null)
	AND ([Note] = @Note OR @Note is null)
	AND ([QuantityOnHand] = @QuantityOnHand OR @QuantityOnHand is null)
	AND ([ReorderLevel] = @ReorderLevel OR @ReorderLevel is null)
	AND ([WeightAdditional] = @WeightAdditional OR @WeightAdditional is null)
	AND ([SKUPicturePath] = @SKUPicturePath OR @SKUPicturePath is null)
	AND ([DisplayOrder] = @DisplayOrder OR @DisplayOrder is null)
	AND ([RetailPriceAdditional] = @RetailPriceAdditional OR @RetailPriceAdditional is null)
	AND ([WholesalePriceAdditional] = @WholesalePriceAdditional OR @WholesalePriceAdditional is null)
	AND ([ActiveInd] = @ActiveInd OR @ActiveInd is null)
	AND ([Custom1] = @Custom1 OR @Custom1 is null)
	AND ([Custom2] = @Custom2 OR @Custom2 is null)
	AND ([Custom3] = @Custom3 OR @Custom3 is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [SKUID]
	, [ProductID]
	, [SKU]
	, [WarehouseNo]
	, [Note]
	, [QuantityOnHand]
	, [ReorderLevel]
	, [WeightAdditional]
	, [SKUPicturePath]
	, [DisplayOrder]
	, [RetailPriceAdditional]
	, [WholesalePriceAdditional]
	, [ActiveInd]
	, [Custom1]
	, [Custom2]
	, [Custom3]
    FROM
	dbo.[ZNodeSKU]
    WHERE 
	 ([SKUID] = @SKUID AND @SKUID is not null)
	OR ([ProductID] = @ProductID AND @ProductID is not null)
	OR ([SKU] = @SKU AND @SKU is not null)
	OR ([WarehouseNo] = @WarehouseNo AND @WarehouseNo is not null)
	OR ([Note] = @Note AND @Note is not null)
	OR ([QuantityOnHand] = @QuantityOnHand AND @QuantityOnHand is not null)
	OR ([ReorderLevel] = @ReorderLevel AND @ReorderLevel is not null)
	OR ([WeightAdditional] = @WeightAdditional AND @WeightAdditional is not null)
	OR ([SKUPicturePath] = @SKUPicturePath AND @SKUPicturePath is not null)
	OR ([DisplayOrder] = @DisplayOrder AND @DisplayOrder is not null)
	OR ([RetailPriceAdditional] = @RetailPriceAdditional AND @RetailPriceAdditional is not null)
	OR ([WholesalePriceAdditional] = @WholesalePriceAdditional AND @WholesalePriceAdditional is not null)
	OR ([ActiveInd] = @ActiveInd AND @ActiveInd is not null)
	OR ([Custom1] = @Custom1 AND @Custom1 is not null)
	OR ([Custom2] = @Custom2 AND @Custom2 is not null)
	OR ([Custom3] = @Custom3 AND @Custom3 is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeSKU_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeSKU table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [SKUID]
					, [ProductID]
					, [SKU]
					, [WarehouseNo]
					, [Note]
					, [QuantityOnHand]
					, [ReorderLevel]
					, [WeightAdditional]
					, [SKUPicturePath]
					, [DisplayOrder]
					, [RetailPriceAdditional]
					, [WholesalePriceAdditional]
					, [ActiveInd]
					, [Custom1]
					, [Custom2]
					, [Custom3]
					from dbo.[ZNodeSKU] {0}
				)
				select
				       [SKUID],
				       [ProductID],
				       [SKU],
				       [WarehouseNo],
				       [Note],
				       [QuantityOnHand],
				       [ReorderLevel],
				       [WeightAdditional],
				       [SKUPicturePath],
				       [DisplayOrder],
				       [RetailPriceAdditional],
				       [WholesalePriceAdditional],
				       [ActiveInd],
				       [Custom1],
				       [Custom2],
				       [Custom3]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeSKU] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContactTemperature_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeContactTemperature table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ContactTemperatureID],
					[Name]
				FROM
					dbo.[ZNodeContactTemperature]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContactTemperature_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeContactTemperature table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ContactTemperatureID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ContactTemperatureID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeContactTemperature]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ContactTemperatureID],'
				SET @SQL = @SQL + ' [Name]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeContactTemperature]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContactTemperature_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeContactTemperature table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ContactTemperatureID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeContactTemperature]
					(
					[ContactTemperatureID]
					,[Name]
					)
				VALUES
					(
					@ContactTemperatureID
					,@Name
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContactTemperature_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeContactTemperature table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ContactTemperatureID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalContactTemperatureID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeContactTemperature]
				SET
					[ContactTemperatureID] = @ContactTemperatureID
					,[Name] = @Name
				WHERE
[ContactTemperatureID] = @OriginalContactTemperatureID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContactTemperature_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeContactTemperature table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ContactTemperatureID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeContactTemperature] WITH (ROWLOCK) 
				WHERE
					[ContactTemperatureID] = @ContactTemperatureID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContactTemperature_GetByContactTemperatureID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeContactTemperature table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ContactTemperatureID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ContactTemperatureID],
					[Name]
				FROM
					dbo.[ZNodeContactTemperature]
				WHERE
					[ContactTemperatureID] = @ContactTemperatureID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContactTemperature_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeContactTemperature table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ContactTemperatureID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ContactTemperatureID]
	, [Name]
    FROM
	dbo.[ZNodeContactTemperature]
    WHERE 
	 ([ContactTemperatureID] = @ContactTemperatureID OR @ContactTemperatureID is null)
	AND ([Name] = @Name OR @Name is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ContactTemperatureID]
	, [Name]
    FROM
	dbo.[ZNodeContactTemperature]
    WHERE 
	 ([ContactTemperatureID] = @ContactTemperatureID AND @ContactTemperatureID is not null)
	OR ([Name] = @Name AND @Name is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContactTemperature_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeContactTemperature table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ContactTemperatureID]
					, [Name]
					from dbo.[ZNodeContactTemperature] {0}
				)
				select
				       [ContactTemperatureID],
				       [Name]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeContactTemperature] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShipping_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeShipping table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ShippingID],
					[ShippingTypeID],
					[ProfileID],
					[ShippingCode],
					[HandlingCharge],
					[DestinationCountryCode],
					[Description],
					[ActiveInd],
					[DisplayOrder]
				FROM
					dbo.[ZNodeShipping]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShipping_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeShipping table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ShippingID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ShippingID]'
				SET @SQL = @SQL + ', [ShippingTypeID]'
				SET @SQL = @SQL + ', [ProfileID]'
				SET @SQL = @SQL + ', [ShippingCode]'
				SET @SQL = @SQL + ', [HandlingCharge]'
				SET @SQL = @SQL + ', [DestinationCountryCode]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [ActiveInd]'
				SET @SQL = @SQL + ', [DisplayOrder]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeShipping]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ShippingID],'
				SET @SQL = @SQL + ' [ShippingTypeID],'
				SET @SQL = @SQL + ' [ProfileID],'
				SET @SQL = @SQL + ' [ShippingCode],'
				SET @SQL = @SQL + ' [HandlingCharge],'
				SET @SQL = @SQL + ' [DestinationCountryCode],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [ActiveInd],'
				SET @SQL = @SQL + ' [DisplayOrder]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeShipping]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShipping_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeShipping table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShippingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShippingCode" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@HandlingCharge" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault=""/>
				<parameter name="@DestinationCountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeShipping]
					(
					[ShippingTypeID]
					,[ProfileID]
					,[ShippingCode]
					,[HandlingCharge]
					,[DestinationCountryCode]
					,[Description]
					,[ActiveInd]
					,[DisplayOrder]
					)
				VALUES
					(
					@ShippingTypeID
					,@ProfileID
					,@ShippingCode
					,@HandlingCharge
					,@DestinationCountryCode
					,@Description
					,@ActiveInd
					,@DisplayOrder
					)
				
				-- Get the identity value
				SET @ShippingID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShipping_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeShipping table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShippingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShippingCode" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@HandlingCharge" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault=""/>
				<parameter name="@DestinationCountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeShipping]
				SET
					[ShippingTypeID] = @ShippingTypeID
					,[ProfileID] = @ProfileID
					,[ShippingCode] = @ShippingCode
					,[HandlingCharge] = @HandlingCharge
					,[DestinationCountryCode] = @DestinationCountryCode
					,[Description] = @Description
					,[ActiveInd] = @ActiveInd
					,[DisplayOrder] = @DisplayOrder
				WHERE
[ShippingID] = @ShippingID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShipping_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeShipping table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeShipping] WITH (ROWLOCK) 
				WHERE
					[ShippingID] = @ShippingID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShipping_GetByDestinationCountryCode" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeShipping table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DestinationCountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ShippingID],
					[ShippingTypeID],
					[ProfileID],
					[ShippingCode],
					[HandlingCharge],
					[DestinationCountryCode],
					[Description],
					[ActiveInd],
					[DisplayOrder]
				FROM
					dbo.[ZNodeShipping]
				WHERE
					[DestinationCountryCode] = @DestinationCountryCode
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShipping_GetByShippingID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeShipping table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ShippingID],
					[ShippingTypeID],
					[ProfileID],
					[ShippingCode],
					[HandlingCharge],
					[DestinationCountryCode],
					[Description],
					[ActiveInd],
					[DisplayOrder]
				FROM
					dbo.[ZNodeShipping]
				WHERE
					[ShippingID] = @ShippingID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShipping_GetByShippingTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeShipping table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ShippingID],
					[ShippingTypeID],
					[ProfileID],
					[ShippingCode],
					[HandlingCharge],
					[DestinationCountryCode],
					[Description],
					[ActiveInd],
					[DisplayOrder]
				FROM
					dbo.[ZNodeShipping]
				WHERE
					[ShippingTypeID] = @ShippingTypeID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShipping_GetByProfileID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeShipping table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ShippingID],
					[ShippingTypeID],
					[ProfileID],
					[ShippingCode],
					[HandlingCharge],
					[DestinationCountryCode],
					[Description],
					[ActiveInd],
					[DisplayOrder]
				FROM
					dbo.[ZNodeShipping]
				WHERE
					[ProfileID] = @ProfileID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShipping_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeShipping table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShippingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShippingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShippingCode" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@HandlingCharge" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault="null"/>
				<parameter name="@DestinationCountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ShippingID]
	, [ShippingTypeID]
	, [ProfileID]
	, [ShippingCode]
	, [HandlingCharge]
	, [DestinationCountryCode]
	, [Description]
	, [ActiveInd]
	, [DisplayOrder]
    FROM
	dbo.[ZNodeShipping]
    WHERE 
	 ([ShippingID] = @ShippingID OR @ShippingID is null)
	AND ([ShippingTypeID] = @ShippingTypeID OR @ShippingTypeID is null)
	AND ([ProfileID] = @ProfileID OR @ProfileID is null)
	AND ([ShippingCode] = @ShippingCode OR @ShippingCode is null)
	AND ([HandlingCharge] = @HandlingCharge OR @HandlingCharge is null)
	AND ([DestinationCountryCode] = @DestinationCountryCode OR @DestinationCountryCode is null)
	AND ([Description] = @Description OR @Description is null)
	AND ([ActiveInd] = @ActiveInd OR @ActiveInd is null)
	AND ([DisplayOrder] = @DisplayOrder OR @DisplayOrder is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ShippingID]
	, [ShippingTypeID]
	, [ProfileID]
	, [ShippingCode]
	, [HandlingCharge]
	, [DestinationCountryCode]
	, [Description]
	, [ActiveInd]
	, [DisplayOrder]
    FROM
	dbo.[ZNodeShipping]
    WHERE 
	 ([ShippingID] = @ShippingID AND @ShippingID is not null)
	OR ([ShippingTypeID] = @ShippingTypeID AND @ShippingTypeID is not null)
	OR ([ProfileID] = @ProfileID AND @ProfileID is not null)
	OR ([ShippingCode] = @ShippingCode AND @ShippingCode is not null)
	OR ([HandlingCharge] = @HandlingCharge AND @HandlingCharge is not null)
	OR ([DestinationCountryCode] = @DestinationCountryCode AND @DestinationCountryCode is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([ActiveInd] = @ActiveInd AND @ActiveInd is not null)
	OR ([DisplayOrder] = @DisplayOrder AND @DisplayOrder is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShipping_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeShipping table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ShippingID]
					, [ShippingTypeID]
					, [ProfileID]
					, [ShippingCode]
					, [HandlingCharge]
					, [DestinationCountryCode]
					, [Description]
					, [ActiveInd]
					, [DisplayOrder]
					from dbo.[ZNodeShipping] {0}
				)
				select
				       [ShippingID],
				       [ShippingTypeID],
				       [ProfileID],
				       [ShippingCode],
				       [HandlingCharge],
				       [DestinationCountryCode],
				       [Description],
				       [ActiveInd],
				       [DisplayOrder]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeShipping] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRule_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeShippingRule table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ShippingRuleID],
					[ShippingID],
					[ShippingRuleTypeID],
					[LowerLimit],
					[UpperLimit],
					[BaseCost],
					[PerItemCost]
				FROM
					dbo.[ZNodeShippingRule]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRule_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeShippingRule table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ShippingRuleID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ShippingRuleID]'
				SET @SQL = @SQL + ', [ShippingID]'
				SET @SQL = @SQL + ', [ShippingRuleTypeID]'
				SET @SQL = @SQL + ', [LowerLimit]'
				SET @SQL = @SQL + ', [UpperLimit]'
				SET @SQL = @SQL + ', [BaseCost]'
				SET @SQL = @SQL + ', [PerItemCost]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeShippingRule]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ShippingRuleID],'
				SET @SQL = @SQL + ' [ShippingID],'
				SET @SQL = @SQL + ' [ShippingRuleTypeID],'
				SET @SQL = @SQL + ' [LowerLimit],'
				SET @SQL = @SQL + ' [UpperLimit],'
				SET @SQL = @SQL + ' [BaseCost],'
				SET @SQL = @SQL + ' [PerItemCost]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeShippingRule]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRule_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeShippingRule table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingRuleID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShippingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShippingRuleTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LowerLimit" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@UpperLimit" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@BaseCost" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault=""/>
				<parameter name="@PerItemCost" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeShippingRule]
					(
					[ShippingID]
					,[ShippingRuleTypeID]
					,[LowerLimit]
					,[UpperLimit]
					,[BaseCost]
					,[PerItemCost]
					)
				VALUES
					(
					@ShippingID
					,@ShippingRuleTypeID
					,@LowerLimit
					,@UpperLimit
					,@BaseCost
					,@PerItemCost
					)
				
				-- Get the identity value
				SET @ShippingRuleID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRule_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeShippingRule table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingRuleID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShippingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShippingRuleTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@LowerLimit" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@UpperLimit" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@BaseCost" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault=""/>
				<parameter name="@PerItemCost" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeShippingRule]
				SET
					[ShippingID] = @ShippingID
					,[ShippingRuleTypeID] = @ShippingRuleTypeID
					,[LowerLimit] = @LowerLimit
					,[UpperLimit] = @UpperLimit
					,[BaseCost] = @BaseCost
					,[PerItemCost] = @PerItemCost
				WHERE
[ShippingRuleID] = @ShippingRuleID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRule_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeShippingRule table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingRuleID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeShippingRule] WITH (ROWLOCK) 
				WHERE
					[ShippingRuleID] = @ShippingRuleID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRule_GetByShippingRuleTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeShippingRule table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingRuleTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ShippingRuleID],
					[ShippingID],
					[ShippingRuleTypeID],
					[LowerLimit],
					[UpperLimit],
					[BaseCost],
					[PerItemCost]
				FROM
					dbo.[ZNodeShippingRule]
				WHERE
					[ShippingRuleTypeID] = @ShippingRuleTypeID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRule_GetByShippingRuleID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeShippingRule table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingRuleID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ShippingRuleID],
					[ShippingID],
					[ShippingRuleTypeID],
					[LowerLimit],
					[UpperLimit],
					[BaseCost],
					[PerItemCost]
				FROM
					dbo.[ZNodeShippingRule]
				WHERE
					[ShippingRuleID] = @ShippingRuleID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRule_GetByShippingID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeShippingRule table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ShippingRuleID],
					[ShippingID],
					[ShippingRuleTypeID],
					[LowerLimit],
					[UpperLimit],
					[BaseCost],
					[PerItemCost]
				FROM
					dbo.[ZNodeShippingRule]
				WHERE
					[ShippingID] = @ShippingID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRule_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeShippingRule table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShippingRuleID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShippingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShippingRuleTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@LowerLimit" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@UpperLimit" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@BaseCost" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault="null"/>
				<parameter name="@PerItemCost" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ShippingRuleID]
	, [ShippingID]
	, [ShippingRuleTypeID]
	, [LowerLimit]
	, [UpperLimit]
	, [BaseCost]
	, [PerItemCost]
    FROM
	dbo.[ZNodeShippingRule]
    WHERE 
	 ([ShippingRuleID] = @ShippingRuleID OR @ShippingRuleID is null)
	AND ([ShippingID] = @ShippingID OR @ShippingID is null)
	AND ([ShippingRuleTypeID] = @ShippingRuleTypeID OR @ShippingRuleTypeID is null)
	AND ([LowerLimit] = @LowerLimit OR @LowerLimit is null)
	AND ([UpperLimit] = @UpperLimit OR @UpperLimit is null)
	AND ([BaseCost] = @BaseCost OR @BaseCost is null)
	AND ([PerItemCost] = @PerItemCost OR @PerItemCost is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ShippingRuleID]
	, [ShippingID]
	, [ShippingRuleTypeID]
	, [LowerLimit]
	, [UpperLimit]
	, [BaseCost]
	, [PerItemCost]
    FROM
	dbo.[ZNodeShippingRule]
    WHERE 
	 ([ShippingRuleID] = @ShippingRuleID AND @ShippingRuleID is not null)
	OR ([ShippingID] = @ShippingID AND @ShippingID is not null)
	OR ([ShippingRuleTypeID] = @ShippingRuleTypeID AND @ShippingRuleTypeID is not null)
	OR ([LowerLimit] = @LowerLimit AND @LowerLimit is not null)
	OR ([UpperLimit] = @UpperLimit AND @UpperLimit is not null)
	OR ([BaseCost] = @BaseCost AND @BaseCost is not null)
	OR ([PerItemCost] = @PerItemCost AND @PerItemCost is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRule_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeShippingRule table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ShippingRuleID]
					, [ShippingID]
					, [ShippingRuleTypeID]
					, [LowerLimit]
					, [UpperLimit]
					, [BaseCost]
					, [PerItemCost]
					from dbo.[ZNodeShippingRule] {0}
				)
				select
				       [ShippingRuleID],
				       [ShippingID],
				       [ShippingRuleTypeID],
				       [LowerLimit],
				       [UpperLimit],
				       [BaseCost],
				       [PerItemCost]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeShippingRule] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingServiceCode_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeShippingServiceCode table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ShippingServiceCodeID],
					[ShippingTypeID],
					[Code],
					[Description],
					[DisplayOrder],
					[ActiveInd]
				FROM
					dbo.[ZNodeShippingServiceCode]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingServiceCode_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeShippingServiceCode table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ShippingServiceCodeID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ShippingServiceCodeID]'
				SET @SQL = @SQL + ', [ShippingTypeID]'
				SET @SQL = @SQL + ', [Code]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [DisplayOrder]'
				SET @SQL = @SQL + ', [ActiveInd]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeShippingServiceCode]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ShippingServiceCodeID],'
				SET @SQL = @SQL + ' [ShippingTypeID],'
				SET @SQL = @SQL + ' [Code],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [DisplayOrder],'
				SET @SQL = @SQL + ' [ActiveInd]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeShippingServiceCode]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingServiceCode_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeShippingServiceCode table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingServiceCodeID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShippingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Code" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Description" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeShippingServiceCode]
					(
					[ShippingTypeID]
					,[Code]
					,[Description]
					,[DisplayOrder]
					,[ActiveInd]
					)
				VALUES
					(
					@ShippingTypeID
					,@Code
					,@Description
					,@DisplayOrder
					,@ActiveInd
					)
				
				-- Get the identity value
				SET @ShippingServiceCodeID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingServiceCode_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeShippingServiceCode table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingServiceCodeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShippingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Code" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Description" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeShippingServiceCode]
				SET
					[ShippingTypeID] = @ShippingTypeID
					,[Code] = @Code
					,[Description] = @Description
					,[DisplayOrder] = @DisplayOrder
					,[ActiveInd] = @ActiveInd
				WHERE
[ShippingServiceCodeID] = @ShippingServiceCodeID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingServiceCode_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeShippingServiceCode table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingServiceCodeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeShippingServiceCode] WITH (ROWLOCK) 
				WHERE
					[ShippingServiceCodeID] = @ShippingServiceCodeID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingServiceCode_GetByShippingTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeShippingServiceCode table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ShippingServiceCodeID],
					[ShippingTypeID],
					[Code],
					[Description],
					[DisplayOrder],
					[ActiveInd]
				FROM
					dbo.[ZNodeShippingServiceCode]
				WHERE
					[ShippingTypeID] = @ShippingTypeID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingServiceCode_GetByShippingServiceCodeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeShippingServiceCode table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingServiceCodeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ShippingServiceCodeID],
					[ShippingTypeID],
					[Code],
					[Description],
					[DisplayOrder],
					[ActiveInd]
				FROM
					dbo.[ZNodeShippingServiceCode]
				WHERE
					[ShippingServiceCodeID] = @ShippingServiceCodeID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingServiceCode_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeShippingServiceCode table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShippingServiceCodeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShippingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Code" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Description" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ShippingServiceCodeID]
	, [ShippingTypeID]
	, [Code]
	, [Description]
	, [DisplayOrder]
	, [ActiveInd]
    FROM
	dbo.[ZNodeShippingServiceCode]
    WHERE 
	 ([ShippingServiceCodeID] = @ShippingServiceCodeID OR @ShippingServiceCodeID is null)
	AND ([ShippingTypeID] = @ShippingTypeID OR @ShippingTypeID is null)
	AND ([Code] = @Code OR @Code is null)
	AND ([Description] = @Description OR @Description is null)
	AND ([DisplayOrder] = @DisplayOrder OR @DisplayOrder is null)
	AND ([ActiveInd] = @ActiveInd OR @ActiveInd is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ShippingServiceCodeID]
	, [ShippingTypeID]
	, [Code]
	, [Description]
	, [DisplayOrder]
	, [ActiveInd]
    FROM
	dbo.[ZNodeShippingServiceCode]
    WHERE 
	 ([ShippingServiceCodeID] = @ShippingServiceCodeID AND @ShippingServiceCodeID is not null)
	OR ([ShippingTypeID] = @ShippingTypeID AND @ShippingTypeID is not null)
	OR ([Code] = @Code AND @Code is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([DisplayOrder] = @DisplayOrder AND @DisplayOrder is not null)
	OR ([ActiveInd] = @ActiveInd AND @ActiveInd is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingServiceCode_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeShippingServiceCode table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ShippingServiceCodeID]
					, [ShippingTypeID]
					, [Code]
					, [Description]
					, [DisplayOrder]
					, [ActiveInd]
					from dbo.[ZNodeShippingServiceCode] {0}
				)
				select
				       [ShippingServiceCodeID],
				       [ShippingTypeID],
				       [Code],
				       [Description],
				       [DisplayOrder],
				       [ActiveInd]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeShippingServiceCode] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRuleType_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeShippingRuleType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ShippingRuleTypeID],
					[Name],
					[Description]
				FROM
					dbo.[ZNodeShippingRuleType]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRuleType_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeShippingRuleType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ShippingRuleTypeID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ShippingRuleTypeID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeShippingRuleType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ShippingRuleTypeID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Description]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeShippingRuleType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRuleType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeShippingRuleType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingRuleTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Description" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeShippingRuleType]
					(
					[ShippingRuleTypeID]
					,[Name]
					,[Description]
					)
				VALUES
					(
					@ShippingRuleTypeID
					,@Name
					,@Description
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRuleType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeShippingRuleType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingRuleTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalShippingRuleTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Description" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeShippingRuleType]
				SET
					[ShippingRuleTypeID] = @ShippingRuleTypeID
					,[Name] = @Name
					,[Description] = @Description
				WHERE
[ShippingRuleTypeID] = @OriginalShippingRuleTypeID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRuleType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeShippingRuleType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingRuleTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeShippingRuleType] WITH (ROWLOCK) 
				WHERE
					[ShippingRuleTypeID] = @ShippingRuleTypeID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRuleType_GetByShippingRuleTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeShippingRuleType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingRuleTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ShippingRuleTypeID],
					[Name],
					[Description]
				FROM
					dbo.[ZNodeShippingRuleType]
				WHERE
					[ShippingRuleTypeID] = @ShippingRuleTypeID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRuleType_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeShippingRuleType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShippingRuleTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Description" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ShippingRuleTypeID]
	, [Name]
	, [Description]
    FROM
	dbo.[ZNodeShippingRuleType]
    WHERE 
	 ([ShippingRuleTypeID] = @ShippingRuleTypeID OR @ShippingRuleTypeID is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([Description] = @Description OR @Description is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ShippingRuleTypeID]
	, [Name]
	, [Description]
    FROM
	dbo.[ZNodeShippingRuleType]
    WHERE 
	 ([ShippingRuleTypeID] = @ShippingRuleTypeID AND @ShippingRuleTypeID is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([Description] = @Description AND @Description is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeShippingRuleType_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeShippingRuleType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ShippingRuleTypeID]
					, [Name]
					, [Description]
					from dbo.[ZNodeShippingRuleType] {0}
				)
				select
				       [ShippingRuleTypeID],
				       [Name],
				       [Description]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeShippingRuleType] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseType_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeCaseType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CaseTypeID],
					[CaseTypeNme]
				FROM
					dbo.[ZNodeCaseType]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseType_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeCaseType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CaseTypeID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CaseTypeID]'
				SET @SQL = @SQL + ', [CaseTypeNme]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeCaseType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CaseTypeID],'
				SET @SQL = @SQL + ' [CaseTypeNme]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeCaseType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeCaseType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CaseTypeNme" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeCaseType]
					(
					[CaseTypeID]
					,[CaseTypeNme]
					)
				VALUES
					(
					@CaseTypeID
					,@CaseTypeNme
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeCaseType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalCaseTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CaseTypeNme" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeCaseType]
				SET
					[CaseTypeID] = @CaseTypeID
					,[CaseTypeNme] = @CaseTypeNme
				WHERE
[CaseTypeID] = @OriginalCaseTypeID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeCaseType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeCaseType] WITH (ROWLOCK) 
				WHERE
					[CaseTypeID] = @CaseTypeID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseType_GetByCaseTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCaseType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CaseTypeID],
					[CaseTypeNme]
				FROM
					dbo.[ZNodeCaseType]
				WHERE
					[CaseTypeID] = @CaseTypeID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseType_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeCaseType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CaseTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CaseTypeNme" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CaseTypeID]
	, [CaseTypeNme]
    FROM
	dbo.[ZNodeCaseType]
    WHERE 
	 ([CaseTypeID] = @CaseTypeID OR @CaseTypeID is null)
	AND ([CaseTypeNme] = @CaseTypeNme OR @CaseTypeNme is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CaseTypeID]
	, [CaseTypeNme]
    FROM
	dbo.[ZNodeCaseType]
    WHERE 
	 ([CaseTypeID] = @CaseTypeID AND @CaseTypeID is not null)
	OR ([CaseTypeNme] = @CaseTypeNme AND @CaseTypeNme is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseType_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeCaseType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [CaseTypeID]
					, [CaseTypeNme]
					from dbo.[ZNodeCaseType] {0}
				)
				select
				       [CaseTypeID],
				       [CaseTypeNme]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeCaseType] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPage_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeContentPage table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ContentPageID],
					[Name],
					[PortalID],
					[Title],
					[SEOTitle],
					[SEOMetaKeywords],
					[SEOMetaDescription],
					[AllowDelete],
					[TemplateName],
					[ActiveInd],
					[AnalyticsCode],
					[Custom1],
					[Custom2],
					[Custom3]
				FROM
					dbo.[ZNodeContentPage]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPage_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeContentPage table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ContentPageID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ContentPageID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [PortalID]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [SEOTitle]'
				SET @SQL = @SQL + ', [SEOMetaKeywords]'
				SET @SQL = @SQL + ', [SEOMetaDescription]'
				SET @SQL = @SQL + ', [AllowDelete]'
				SET @SQL = @SQL + ', [TemplateName]'
				SET @SQL = @SQL + ', [ActiveInd]'
				SET @SQL = @SQL + ', [AnalyticsCode]'
				SET @SQL = @SQL + ', [Custom1]'
				SET @SQL = @SQL + ', [Custom2]'
				SET @SQL = @SQL + ', [Custom3]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeContentPage]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ContentPageID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [PortalID],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [SEOTitle],'
				SET @SQL = @SQL + ' [SEOMetaKeywords],'
				SET @SQL = @SQL + ' [SEOMetaDescription],'
				SET @SQL = @SQL + ' [AllowDelete],'
				SET @SQL = @SQL + ' [TemplateName],'
				SET @SQL = @SQL + ' [ActiveInd],'
				SET @SQL = @SQL + ' [AnalyticsCode],'
				SET @SQL = @SQL + ' [Custom1],'
				SET @SQL = @SQL + ' [Custom2],'
				SET @SQL = @SQL + ' [Custom3]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeContentPage]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPage_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeContentPage table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ContentPageID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SEOTitle" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SEOMetaKeywords" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SEOMetaDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@AllowDelete" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@TemplateName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AnalyticsCode" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom1" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom2" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom3" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeContentPage]
					(
					[Name]
					,[PortalID]
					,[Title]
					,[SEOTitle]
					,[SEOMetaKeywords]
					,[SEOMetaDescription]
					,[AllowDelete]
					,[TemplateName]
					,[ActiveInd]
					,[AnalyticsCode]
					,[Custom1]
					,[Custom2]
					,[Custom3]
					)
				VALUES
					(
					@Name
					,@PortalID
					,@Title
					,@SEOTitle
					,@SEOMetaKeywords
					,@SEOMetaDescription
					,@AllowDelete
					,@TemplateName
					,@ActiveInd
					,@AnalyticsCode
					,@Custom1
					,@Custom2
					,@Custom3
					)
				
				-- Get the identity value
				SET @ContentPageID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPage_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeContentPage table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ContentPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SEOTitle" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SEOMetaKeywords" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SEOMetaDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@AllowDelete" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@TemplateName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AnalyticsCode" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom1" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom2" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom3" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeContentPage]
				SET
					[Name] = @Name
					,[PortalID] = @PortalID
					,[Title] = @Title
					,[SEOTitle] = @SEOTitle
					,[SEOMetaKeywords] = @SEOMetaKeywords
					,[SEOMetaDescription] = @SEOMetaDescription
					,[AllowDelete] = @AllowDelete
					,[TemplateName] = @TemplateName
					,[ActiveInd] = @ActiveInd
					,[AnalyticsCode] = @AnalyticsCode
					,[Custom1] = @Custom1
					,[Custom2] = @Custom2
					,[Custom3] = @Custom3
				WHERE
[ContentPageID] = @ContentPageID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPage_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeContentPage table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ContentPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeContentPage] WITH (ROWLOCK) 
				WHERE
					[ContentPageID] = @ContentPageID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPage_GetByPortalID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeContentPage table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ContentPageID],
					[Name],
					[PortalID],
					[Title],
					[SEOTitle],
					[SEOMetaKeywords],
					[SEOMetaDescription],
					[AllowDelete],
					[TemplateName],
					[ActiveInd],
					[AnalyticsCode],
					[Custom1],
					[Custom2],
					[Custom3]
				FROM
					dbo.[ZNodeContentPage]
				WHERE
					[PortalID] = @PortalID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPage_GetByContentPageID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeContentPage table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ContentPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ContentPageID],
					[Name],
					[PortalID],
					[Title],
					[SEOTitle],
					[SEOMetaKeywords],
					[SEOMetaDescription],
					[AllowDelete],
					[TemplateName],
					[ActiveInd],
					[AnalyticsCode],
					[Custom1],
					[Custom2],
					[Custom3]
				FROM
					dbo.[ZNodeContentPage]
				WHERE
					[ContentPageID] = @ContentPageID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPage_GetByName" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeContentPage table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ContentPageID],
					[Name],
					[PortalID],
					[Title],
					[SEOTitle],
					[SEOMetaKeywords],
					[SEOMetaDescription],
					[AllowDelete],
					[TemplateName],
					[ActiveInd],
					[AnalyticsCode],
					[Custom1],
					[Custom2],
					[Custom3]
				FROM
					dbo.[ZNodeContentPage]
				WHERE
					[Name] = @Name
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPage_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeContentPage table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ContentPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SEOTitle" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SEOMetaKeywords" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SEOMetaDescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@AllowDelete" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@TemplateName" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AnalyticsCode" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom1" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom2" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom3" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ContentPageID]
	, [Name]
	, [PortalID]
	, [Title]
	, [SEOTitle]
	, [SEOMetaKeywords]
	, [SEOMetaDescription]
	, [AllowDelete]
	, [TemplateName]
	, [ActiveInd]
	, [AnalyticsCode]
	, [Custom1]
	, [Custom2]
	, [Custom3]
    FROM
	dbo.[ZNodeContentPage]
    WHERE 
	 ([ContentPageID] = @ContentPageID OR @ContentPageID is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([PortalID] = @PortalID OR @PortalID is null)
	AND ([Title] = @Title OR @Title is null)
	AND ([SEOTitle] = @SEOTitle OR @SEOTitle is null)
	AND ([SEOMetaKeywords] = @SEOMetaKeywords OR @SEOMetaKeywords is null)
	AND ([SEOMetaDescription] = @SEOMetaDescription OR @SEOMetaDescription is null)
	AND ([AllowDelete] = @AllowDelete OR @AllowDelete is null)
	AND ([TemplateName] = @TemplateName OR @TemplateName is null)
	AND ([ActiveInd] = @ActiveInd OR @ActiveInd is null)
	AND ([AnalyticsCode] = @AnalyticsCode OR @AnalyticsCode is null)
	AND ([Custom1] = @Custom1 OR @Custom1 is null)
	AND ([Custom2] = @Custom2 OR @Custom2 is null)
	AND ([Custom3] = @Custom3 OR @Custom3 is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ContentPageID]
	, [Name]
	, [PortalID]
	, [Title]
	, [SEOTitle]
	, [SEOMetaKeywords]
	, [SEOMetaDescription]
	, [AllowDelete]
	, [TemplateName]
	, [ActiveInd]
	, [AnalyticsCode]
	, [Custom1]
	, [Custom2]
	, [Custom3]
    FROM
	dbo.[ZNodeContentPage]
    WHERE 
	 ([ContentPageID] = @ContentPageID AND @ContentPageID is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([PortalID] = @PortalID AND @PortalID is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([SEOTitle] = @SEOTitle AND @SEOTitle is not null)
	OR ([SEOMetaKeywords] = @SEOMetaKeywords AND @SEOMetaKeywords is not null)
	OR ([SEOMetaDescription] = @SEOMetaDescription AND @SEOMetaDescription is not null)
	OR ([AllowDelete] = @AllowDelete AND @AllowDelete is not null)
	OR ([TemplateName] = @TemplateName AND @TemplateName is not null)
	OR ([ActiveInd] = @ActiveInd AND @ActiveInd is not null)
	OR ([AnalyticsCode] = @AnalyticsCode AND @AnalyticsCode is not null)
	OR ([Custom1] = @Custom1 AND @Custom1 is not null)
	OR ([Custom2] = @Custom2 AND @Custom2 is not null)
	OR ([Custom3] = @Custom3 AND @Custom3 is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPage_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeContentPage table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ContentPageID]
					, [Name]
					, [PortalID]
					, [Title]
					, [SEOTitle]
					, [SEOMetaKeywords]
					, [SEOMetaDescription]
					, [AllowDelete]
					, [TemplateName]
					, [ActiveInd]
					, [AnalyticsCode]
					, [Custom1]
					, [Custom2]
					, [Custom3]
					from dbo.[ZNodeContentPage] {0}
				)
				select
				       [ContentPageID],
				       [Name],
				       [PortalID],
				       [Title],
				       [SEOTitle],
				       [SEOMetaKeywords],
				       [SEOMetaDescription],
				       [AllowDelete],
				       [TemplateName],
				       [ActiveInd],
				       [AnalyticsCode],
				       [Custom1],
				       [Custom2],
				       [Custom3]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeContentPage] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseStatus_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeCaseStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CaseStatusID],
					[CaseStatusNme],
					[ViewOrder]
				FROM
					dbo.[ZNodeCaseStatus]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseStatus_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeCaseStatus table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CaseStatusID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CaseStatusID]'
				SET @SQL = @SQL + ', [CaseStatusNme]'
				SET @SQL = @SQL + ', [ViewOrder]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeCaseStatus]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CaseStatusID],'
				SET @SQL = @SQL + ' [CaseStatusNme],'
				SET @SQL = @SQL + ' [ViewOrder]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeCaseStatus]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseStatus_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeCaseStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseStatusID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CaseStatusNme" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ViewOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeCaseStatus]
					(
					[CaseStatusID]
					,[CaseStatusNme]
					,[ViewOrder]
					)
				VALUES
					(
					@CaseStatusID
					,@CaseStatusNme
					,@ViewOrder
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseStatus_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeCaseStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseStatusID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalCaseStatusID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CaseStatusNme" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ViewOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeCaseStatus]
				SET
					[CaseStatusID] = @CaseStatusID
					,[CaseStatusNme] = @CaseStatusNme
					,[ViewOrder] = @ViewOrder
				WHERE
[CaseStatusID] = @OriginalCaseStatusID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseStatus_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeCaseStatus table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseStatusID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeCaseStatus] WITH (ROWLOCK) 
				WHERE
					[CaseStatusID] = @CaseStatusID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseStatus_GetByCaseStatusID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCaseStatus table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseStatusID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CaseStatusID],
					[CaseStatusNme],
					[ViewOrder]
				FROM
					dbo.[ZNodeCaseStatus]
				WHERE
					[CaseStatusID] = @CaseStatusID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseStatus_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeCaseStatus table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CaseStatusID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CaseStatusNme" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ViewOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CaseStatusID]
	, [CaseStatusNme]
	, [ViewOrder]
    FROM
	dbo.[ZNodeCaseStatus]
    WHERE 
	 ([CaseStatusID] = @CaseStatusID OR @CaseStatusID is null)
	AND ([CaseStatusNme] = @CaseStatusNme OR @CaseStatusNme is null)
	AND ([ViewOrder] = @ViewOrder OR @ViewOrder is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CaseStatusID]
	, [CaseStatusNme]
	, [ViewOrder]
    FROM
	dbo.[ZNodeCaseStatus]
    WHERE 
	 ([CaseStatusID] = @CaseStatusID AND @CaseStatusID is not null)
	OR ([CaseStatusNme] = @CaseStatusNme AND @CaseStatusNme is not null)
	OR ([ViewOrder] = @ViewOrder AND @ViewOrder is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCaseStatus_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeCaseStatus table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [CaseStatusID]
					, [CaseStatusNme]
					, [ViewOrder]
					from dbo.[ZNodeCaseStatus] {0}
				)
				select
				       [CaseStatusID],
				       [CaseStatusNme],
				       [ViewOrder]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeCaseStatus] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPageRevision_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeContentPageRevision table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[RevisionID],
					[ContentPageID],
					[UpdateDate],
					[UpdateUser],
					[Description],
					[HtmlText]
				FROM
					dbo.[ZNodeContentPageRevision]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPageRevision_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeContentPageRevision table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[RevisionID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [RevisionID]'
				SET @SQL = @SQL + ', [ContentPageID]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [UpdateUser]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [HtmlText]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeContentPageRevision]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [RevisionID],'
				SET @SQL = @SQL + ' [ContentPageID],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [UpdateUser],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [HtmlText]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeContentPageRevision]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPageRevision_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeContentPageRevision table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RevisionID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ContentPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUser" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@HtmlText" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeContentPageRevision]
					(
					[ContentPageID]
					,[UpdateDate]
					,[UpdateUser]
					,[Description]
					,[HtmlText]
					)
				VALUES
					(
					@ContentPageID
					,@UpdateDate
					,@UpdateUser
					,@Description
					,@HtmlText
					)
				
				-- Get the identity value
				SET @RevisionID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPageRevision_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeContentPageRevision table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RevisionID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ContentPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUser" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@HtmlText" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeContentPageRevision]
				SET
					[ContentPageID] = @ContentPageID
					,[UpdateDate] = @UpdateDate
					,[UpdateUser] = @UpdateUser
					,[Description] = @Description
					,[HtmlText] = @HtmlText
				WHERE
[RevisionID] = @RevisionID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPageRevision_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeContentPageRevision table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RevisionID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeContentPageRevision] WITH (ROWLOCK) 
				WHERE
					[RevisionID] = @RevisionID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPageRevision_GetByContentPageID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeContentPageRevision table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ContentPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[RevisionID],
					[ContentPageID],
					[UpdateDate],
					[UpdateUser],
					[Description],
					[HtmlText]
				FROM
					dbo.[ZNodeContentPageRevision]
				WHERE
					[ContentPageID] = @ContentPageID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPageRevision_GetByRevisionID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeContentPageRevision table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RevisionID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[RevisionID],
					[ContentPageID],
					[UpdateDate],
					[UpdateUser],
					[Description],
					[HtmlText]
				FROM
					dbo.[ZNodeContentPageRevision]
				WHERE
					[RevisionID] = @RevisionID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPageRevision_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeContentPageRevision table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@RevisionID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ContentPageID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUser" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@HtmlText" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [RevisionID]
	, [ContentPageID]
	, [UpdateDate]
	, [UpdateUser]
	, [Description]
	, [HtmlText]
    FROM
	dbo.[ZNodeContentPageRevision]
    WHERE 
	 ([RevisionID] = @RevisionID OR @RevisionID is null)
	AND ([ContentPageID] = @ContentPageID OR @ContentPageID is null)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate is null)
	AND ([UpdateUser] = @UpdateUser OR @UpdateUser is null)
	AND ([Description] = @Description OR @Description is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [RevisionID]
	, [ContentPageID]
	, [UpdateDate]
	, [UpdateUser]
	, [Description]
	, [HtmlText]
    FROM
	dbo.[ZNodeContentPageRevision]
    WHERE 
	 ([RevisionID] = @RevisionID AND @RevisionID is not null)
	OR ([ContentPageID] = @ContentPageID AND @ContentPageID is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([UpdateUser] = @UpdateUser AND @UpdateUser is not null)
	OR ([Description] = @Description AND @Description is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeContentPageRevision_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeContentPageRevision table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [RevisionID]
					, [ContentPageID]
					, [UpdateDate]
					, [UpdateUser]
					, [Description]
					, [HtmlText]
					from dbo.[ZNodeContentPageRevision] {0}
				)
				select
				       [RevisionID],
				       [ContentPageID],
				       [UpdateDate],
				       [UpdateUser],
				       [Description],
				       [HtmlText]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeContentPageRevision] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCategory_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeCategory table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CategoryID],
					[PortalID],
					[Name],
					[Title],
					[ShortDescription],
					[Description],
					[ParentCategoryID],
					[DisplayOrder],
					[ImageFile],
					[VisibleInd],
					[SubCategoryGridVisibleInd],
					[SEOTitle],
					[SEOKeywords],
					[SEODescription]
				FROM
					dbo.[ZNodeCategory]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCategory_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeCategory table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CategoryID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CategoryID]'
				SET @SQL = @SQL + ', [PortalID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [ShortDescription]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [ParentCategoryID]'
				SET @SQL = @SQL + ', [DisplayOrder]'
				SET @SQL = @SQL + ', [ImageFile]'
				SET @SQL = @SQL + ', [VisibleInd]'
				SET @SQL = @SQL + ', [SubCategoryGridVisibleInd]'
				SET @SQL = @SQL + ', [SEOTitle]'
				SET @SQL = @SQL + ', [SEOKeywords]'
				SET @SQL = @SQL + ', [SEODescription]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeCategory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CategoryID],'
				SET @SQL = @SQL + ' [PortalID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [ShortDescription],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [ParentCategoryID],'
				SET @SQL = @SQL + ' [DisplayOrder],'
				SET @SQL = @SQL + ' [ImageFile],'
				SET @SQL = @SQL + ' [VisibleInd],'
				SET @SQL = @SQL + ' [SubCategoryGridVisibleInd],'
				SET @SQL = @SQL + ' [SEOTitle],'
				SET @SQL = @SQL + ' [SEOKeywords],'
				SET @SQL = @SQL + ' [SEODescription]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeCategory]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCategory_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeCategory table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CategoryID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShortDescription" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentCategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageFile" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@VisibleInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SubCategoryGridVisibleInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SEOTitle" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SEOKeywords" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SEODescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeCategory]
					(
					[PortalID]
					,[Name]
					,[Title]
					,[ShortDescription]
					,[Description]
					,[ParentCategoryID]
					,[DisplayOrder]
					,[ImageFile]
					,[VisibleInd]
					,[SubCategoryGridVisibleInd]
					,[SEOTitle]
					,[SEOKeywords]
					,[SEODescription]
					)
				VALUES
					(
					@PortalID
					,@Name
					,@Title
					,@ShortDescription
					,@Description
					,@ParentCategoryID
					,@DisplayOrder
					,@ImageFile
					,@VisibleInd
					,@SubCategoryGridVisibleInd
					,@SEOTitle
					,@SEOKeywords
					,@SEODescription
					)
				
				-- Get the identity value
				SET @CategoryID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCategory_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeCategory table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ShortDescription" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentCategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageFile" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@VisibleInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SubCategoryGridVisibleInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@SEOTitle" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SEOKeywords" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SEODescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeCategory]
				SET
					[PortalID] = @PortalID
					,[Name] = @Name
					,[Title] = @Title
					,[ShortDescription] = @ShortDescription
					,[Description] = @Description
					,[ParentCategoryID] = @ParentCategoryID
					,[DisplayOrder] = @DisplayOrder
					,[ImageFile] = @ImageFile
					,[VisibleInd] = @VisibleInd
					,[SubCategoryGridVisibleInd] = @SubCategoryGridVisibleInd
					,[SEOTitle] = @SEOTitle
					,[SEOKeywords] = @SEOKeywords
					,[SEODescription] = @SEODescription
				WHERE
[CategoryID] = @CategoryID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCategory_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeCategory table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeCategory] WITH (ROWLOCK) 
				WHERE
					[CategoryID] = @CategoryID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCategory_GetByPortalID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCategory table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[CategoryID],
					[PortalID],
					[Name],
					[Title],
					[ShortDescription],
					[Description],
					[ParentCategoryID],
					[DisplayOrder],
					[ImageFile],
					[VisibleInd],
					[SubCategoryGridVisibleInd],
					[SEOTitle],
					[SEOKeywords],
					[SEODescription]
				FROM
					dbo.[ZNodeCategory]
				WHERE
					[PortalID] = @PortalID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCategory_GetByParentCategoryID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCategory table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ParentCategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[CategoryID],
					[PortalID],
					[Name],
					[Title],
					[ShortDescription],
					[Description],
					[ParentCategoryID],
					[DisplayOrder],
					[ImageFile],
					[VisibleInd],
					[SubCategoryGridVisibleInd],
					[SEOTitle],
					[SEOKeywords],
					[SEODescription]
				FROM
					dbo.[ZNodeCategory]
				WHERE
					[ParentCategoryID] = @ParentCategoryID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCategory_GetByCategoryID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCategory table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CategoryID],
					[PortalID],
					[Name],
					[Title],
					[ShortDescription],
					[Description],
					[ParentCategoryID],
					[DisplayOrder],
					[ImageFile],
					[VisibleInd],
					[SubCategoryGridVisibleInd],
					[SEOTitle],
					[SEOKeywords],
					[SEODescription]
				FROM
					dbo.[ZNodeCategory]
				WHERE
					[CategoryID] = @CategoryID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCategory_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeCategory table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ShortDescription" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentCategoryID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageFile" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@VisibleInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SubCategoryGridVisibleInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@SEOTitle" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SEOKeywords" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SEODescription" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CategoryID]
	, [PortalID]
	, [Name]
	, [Title]
	, [ShortDescription]
	, [Description]
	, [ParentCategoryID]
	, [DisplayOrder]
	, [ImageFile]
	, [VisibleInd]
	, [SubCategoryGridVisibleInd]
	, [SEOTitle]
	, [SEOKeywords]
	, [SEODescription]
    FROM
	dbo.[ZNodeCategory]
    WHERE 
	 ([CategoryID] = @CategoryID OR @CategoryID is null)
	AND ([PortalID] = @PortalID OR @PortalID is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([Title] = @Title OR @Title is null)
	AND ([ParentCategoryID] = @ParentCategoryID OR @ParentCategoryID is null)
	AND ([DisplayOrder] = @DisplayOrder OR @DisplayOrder is null)
	AND ([ImageFile] = @ImageFile OR @ImageFile is null)
	AND ([VisibleInd] = @VisibleInd OR @VisibleInd is null)
	AND ([SubCategoryGridVisibleInd] = @SubCategoryGridVisibleInd OR @SubCategoryGridVisibleInd is null)
	AND ([SEOTitle] = @SEOTitle OR @SEOTitle is null)
	AND ([SEOKeywords] = @SEOKeywords OR @SEOKeywords is null)
	AND ([SEODescription] = @SEODescription OR @SEODescription is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CategoryID]
	, [PortalID]
	, [Name]
	, [Title]
	, [ShortDescription]
	, [Description]
	, [ParentCategoryID]
	, [DisplayOrder]
	, [ImageFile]
	, [VisibleInd]
	, [SubCategoryGridVisibleInd]
	, [SEOTitle]
	, [SEOKeywords]
	, [SEODescription]
    FROM
	dbo.[ZNodeCategory]
    WHERE 
	 ([CategoryID] = @CategoryID AND @CategoryID is not null)
	OR ([PortalID] = @PortalID AND @PortalID is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([ParentCategoryID] = @ParentCategoryID AND @ParentCategoryID is not null)
	OR ([DisplayOrder] = @DisplayOrder AND @DisplayOrder is not null)
	OR ([ImageFile] = @ImageFile AND @ImageFile is not null)
	OR ([VisibleInd] = @VisibleInd AND @VisibleInd is not null)
	OR ([SubCategoryGridVisibleInd] = @SubCategoryGridVisibleInd AND @SubCategoryGridVisibleInd is not null)
	OR ([SEOTitle] = @SEOTitle AND @SEOTitle is not null)
	OR ([SEOKeywords] = @SEOKeywords AND @SEOKeywords is not null)
	OR ([SEODescription] = @SEODescription AND @SEODescription is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCategory_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeCategory table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [CategoryID]
					, [PortalID]
					, [Name]
					, [Title]
					, [ShortDescription]
					, [Description]
					, [ParentCategoryID]
					, [DisplayOrder]
					, [ImageFile]
					, [VisibleInd]
					, [SubCategoryGridVisibleInd]
					, [SEOTitle]
					, [SEOKeywords]
					, [SEODescription]
					from dbo.[ZNodeCategory] {0}
				)
				select
				       [CategoryID],
				       [PortalID],
				       [Name],
				       [Title],
				       [ShortDescription],
				       [Description],
				       [ParentCategoryID],
				       [DisplayOrder],
				       [ImageFile],
				       [VisibleInd],
				       [SubCategoryGridVisibleInd],
				       [SEOTitle],
				       [SEOKeywords],
				       [SEODescription]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeCategory] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCasePriority_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeCasePriority table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CasePriorityID],
					[CasePriorityNme],
					[ViewOrder]
				FROM
					dbo.[ZNodeCasePriority]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCasePriority_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeCasePriority table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CasePriorityID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CasePriorityID]'
				SET @SQL = @SQL + ', [CasePriorityNme]'
				SET @SQL = @SQL + ', [ViewOrder]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeCasePriority]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CasePriorityID],'
				SET @SQL = @SQL + ' [CasePriorityNme],'
				SET @SQL = @SQL + ' [ViewOrder]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeCasePriority]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCasePriority_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeCasePriority table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CasePriorityID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CasePriorityNme" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ViewOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeCasePriority]
					(
					[CasePriorityID]
					,[CasePriorityNme]
					,[ViewOrder]
					)
				VALUES
					(
					@CasePriorityID
					,@CasePriorityNme
					,@ViewOrder
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCasePriority_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeCasePriority table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CasePriorityID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalCasePriorityID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CasePriorityNme" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ViewOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeCasePriority]
				SET
					[CasePriorityID] = @CasePriorityID
					,[CasePriorityNme] = @CasePriorityNme
					,[ViewOrder] = @ViewOrder
				WHERE
[CasePriorityID] = @OriginalCasePriorityID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCasePriority_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeCasePriority table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CasePriorityID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeCasePriority] WITH (ROWLOCK) 
				WHERE
					[CasePriorityID] = @CasePriorityID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCasePriority_GetByCasePriorityID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCasePriority table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CasePriorityID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CasePriorityID],
					[CasePriorityNme],
					[ViewOrder]
				FROM
					dbo.[ZNodeCasePriority]
				WHERE
					[CasePriorityID] = @CasePriorityID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCasePriority_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeCasePriority table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CasePriorityID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CasePriorityNme" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ViewOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CasePriorityID]
	, [CasePriorityNme]
	, [ViewOrder]
    FROM
	dbo.[ZNodeCasePriority]
    WHERE 
	 ([CasePriorityID] = @CasePriorityID OR @CasePriorityID is null)
	AND ([CasePriorityNme] = @CasePriorityNme OR @CasePriorityNme is null)
	AND ([ViewOrder] = @ViewOrder OR @ViewOrder is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CasePriorityID]
	, [CasePriorityNme]
	, [ViewOrder]
    FROM
	dbo.[ZNodeCasePriority]
    WHERE 
	 ([CasePriorityID] = @CasePriorityID AND @CasePriorityID is not null)
	OR ([CasePriorityNme] = @CasePriorityNme AND @CasePriorityNme is not null)
	OR ([ViewOrder] = @ViewOrder AND @ViewOrder is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCasePriority_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeCasePriority table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [CasePriorityID]
					, [CasePriorityNme]
					, [ViewOrder]
					from dbo.[ZNodeCasePriority] {0}
				)
				select
				       [CasePriorityID],
				       [CasePriorityNme],
				       [ViewOrder]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeCasePriority] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOn_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeAddOn table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AddOnID],
					[ProductID],
					[Title],
					[Name],
					[Description],
					[DisplayOrder],
					[DisplayType],
					[OptionalInd],
					[AllowBackOrder],
					[InStockMsg],
					[OutOfStockMsg],
					[BackOrderMsg],
					[PromptMsg],
					[TrackInventoryInd]
				FROM
					dbo.[ZNodeAddOn]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOn_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeAddOn table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[AddOnID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [AddOnID]'
				SET @SQL = @SQL + ', [ProductID]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [DisplayOrder]'
				SET @SQL = @SQL + ', [DisplayType]'
				SET @SQL = @SQL + ', [OptionalInd]'
				SET @SQL = @SQL + ', [AllowBackOrder]'
				SET @SQL = @SQL + ', [InStockMsg]'
				SET @SQL = @SQL + ', [OutOfStockMsg]'
				SET @SQL = @SQL + ', [BackOrderMsg]'
				SET @SQL = @SQL + ', [PromptMsg]'
				SET @SQL = @SQL + ', [TrackInventoryInd]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeAddOn]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [AddOnID],'
				SET @SQL = @SQL + ' [ProductID],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [DisplayOrder],'
				SET @SQL = @SQL + ' [DisplayType],'
				SET @SQL = @SQL + ' [OptionalInd],'
				SET @SQL = @SQL + ' [AllowBackOrder],'
				SET @SQL = @SQL + ' [InStockMsg],'
				SET @SQL = @SQL + ' [OutOfStockMsg],'
				SET @SQL = @SQL + ' [BackOrderMsg],'
				SET @SQL = @SQL + ' [PromptMsg],'
				SET @SQL = @SQL + ' [TrackInventoryInd]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeAddOn]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOn_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeAddOn table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddOnID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@OptionalInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AllowBackOrder" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@InStockMsg" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@OutOfStockMsg" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@BackOrderMsg" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@PromptMsg" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@TrackInventoryInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeAddOn]
					(
					[ProductID]
					,[Title]
					,[Name]
					,[Description]
					,[DisplayOrder]
					,[DisplayType]
					,[OptionalInd]
					,[AllowBackOrder]
					,[InStockMsg]
					,[OutOfStockMsg]
					,[BackOrderMsg]
					,[PromptMsg]
					,[TrackInventoryInd]
					)
				VALUES
					(
					@ProductID
					,@Title
					,@Name
					,@Description
					,@DisplayOrder
					,@DisplayType
					,@OptionalInd
					,@AllowBackOrder
					,@InStockMsg
					,@OutOfStockMsg
					,@BackOrderMsg
					,@PromptMsg
					,@TrackInventoryInd
					)
				
				-- Get the identity value
				SET @AddOnID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOn_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeAddOn table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@OptionalInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@AllowBackOrder" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@InStockMsg" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@OutOfStockMsg" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@BackOrderMsg" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@PromptMsg" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@TrackInventoryInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeAddOn]
				SET
					[ProductID] = @ProductID
					,[Title] = @Title
					,[Name] = @Name
					,[Description] = @Description
					,[DisplayOrder] = @DisplayOrder
					,[DisplayType] = @DisplayType
					,[OptionalInd] = @OptionalInd
					,[AllowBackOrder] = @AllowBackOrder
					,[InStockMsg] = @InStockMsg
					,[OutOfStockMsg] = @OutOfStockMsg
					,[BackOrderMsg] = @BackOrderMsg
					,[PromptMsg] = @PromptMsg
					,[TrackInventoryInd] = @TrackInventoryInd
				WHERE
[AddOnID] = @AddOnID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOn_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeAddOn table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeAddOn] WITH (ROWLOCK) 
				WHERE
					[AddOnID] = @AddOnID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOn_GetByAddOnID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeAddOn table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AddOnID],
					[ProductID],
					[Title],
					[Name],
					[Description],
					[DisplayOrder],
					[DisplayType],
					[OptionalInd],
					[AllowBackOrder],
					[InStockMsg],
					[OutOfStockMsg],
					[BackOrderMsg],
					[PromptMsg],
					[TrackInventoryInd]
				FROM
					dbo.[ZNodeAddOn]
				WHERE
					[AddOnID] = @AddOnID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOn_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeAddOn table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Title" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@OptionalInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AllowBackOrder" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@InStockMsg" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@OutOfStockMsg" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@BackOrderMsg" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@PromptMsg" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@TrackInventoryInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AddOnID]
	, [ProductID]
	, [Title]
	, [Name]
	, [Description]
	, [DisplayOrder]
	, [DisplayType]
	, [OptionalInd]
	, [AllowBackOrder]
	, [InStockMsg]
	, [OutOfStockMsg]
	, [BackOrderMsg]
	, [PromptMsg]
	, [TrackInventoryInd]
    FROM
	dbo.[ZNodeAddOn]
    WHERE 
	 ([AddOnID] = @AddOnID OR @AddOnID is null)
	AND ([ProductID] = @ProductID OR @ProductID is null)
	AND ([Title] = @Title OR @Title is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([DisplayOrder] = @DisplayOrder OR @DisplayOrder is null)
	AND ([DisplayType] = @DisplayType OR @DisplayType is null)
	AND ([OptionalInd] = @OptionalInd OR @OptionalInd is null)
	AND ([AllowBackOrder] = @AllowBackOrder OR @AllowBackOrder is null)
	AND ([InStockMsg] = @InStockMsg OR @InStockMsg is null)
	AND ([OutOfStockMsg] = @OutOfStockMsg OR @OutOfStockMsg is null)
	AND ([BackOrderMsg] = @BackOrderMsg OR @BackOrderMsg is null)
	AND ([TrackInventoryInd] = @TrackInventoryInd OR @TrackInventoryInd is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AddOnID]
	, [ProductID]
	, [Title]
	, [Name]
	, [Description]
	, [DisplayOrder]
	, [DisplayType]
	, [OptionalInd]
	, [AllowBackOrder]
	, [InStockMsg]
	, [OutOfStockMsg]
	, [BackOrderMsg]
	, [PromptMsg]
	, [TrackInventoryInd]
    FROM
	dbo.[ZNodeAddOn]
    WHERE 
	 ([AddOnID] = @AddOnID AND @AddOnID is not null)
	OR ([ProductID] = @ProductID AND @ProductID is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([DisplayOrder] = @DisplayOrder AND @DisplayOrder is not null)
	OR ([DisplayType] = @DisplayType AND @DisplayType is not null)
	OR ([OptionalInd] = @OptionalInd AND @OptionalInd is not null)
	OR ([AllowBackOrder] = @AllowBackOrder AND @AllowBackOrder is not null)
	OR ([InStockMsg] = @InStockMsg AND @InStockMsg is not null)
	OR ([OutOfStockMsg] = @OutOfStockMsg AND @OutOfStockMsg is not null)
	OR ([BackOrderMsg] = @BackOrderMsg AND @BackOrderMsg is not null)
	OR ([TrackInventoryInd] = @TrackInventoryInd AND @TrackInventoryInd is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOn_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeAddOn table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [AddOnID]
					, [ProductID]
					, [Title]
					, [Name]
					, [Description]
					, [DisplayOrder]
					, [DisplayType]
					, [OptionalInd]
					, [AllowBackOrder]
					, [InStockMsg]
					, [OutOfStockMsg]
					, [BackOrderMsg]
					, [PromptMsg]
					, [TrackInventoryInd]
					from dbo.[ZNodeAddOn] {0}
				)
				select
				       [AddOnID],
				       [ProductID],
				       [Title],
				       [Name],
				       [Description],
				       [DisplayOrder],
				       [DisplayType],
				       [OptionalInd],
				       [AllowBackOrder],
				       [InStockMsg],
				       [OutOfStockMsg],
				       [BackOrderMsg],
				       [PromptMsg],
				       [TrackInventoryInd]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeAddOn] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AccountID],
					[ParentAccountID],
					[PortalID],
					[UserID],
					[ExternalAccountNo],
					[CompanyName],
					[AccountTypeID],
					[ProfileID],
					[AccountProfileCode],
					[SubAccountLimit],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountryCode],
					[BillingPhoneNumber],
					[BillingEmailID],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountryCode],
					[ShipEmailID],
					[ShipPhoneNumber],
					[Description],
					[CreateUser],
					[CreateDte],
					[UpdateUser],
					[UpdateDte],
					[ActiveInd],
					[Website],
					[Source],
					[ReferredBy],
					[Custom1],
					[Custom2],
					[Custom3],
					[ContactTemperatureID]
				FROM
					dbo.[ZNodeAccount]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeAccount table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[AccountID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [AccountID]'
				SET @SQL = @SQL + ', [ParentAccountID]'
				SET @SQL = @SQL + ', [PortalID]'
				SET @SQL = @SQL + ', [UserID]'
				SET @SQL = @SQL + ', [ExternalAccountNo]'
				SET @SQL = @SQL + ', [CompanyName]'
				SET @SQL = @SQL + ', [AccountTypeID]'
				SET @SQL = @SQL + ', [ProfileID]'
				SET @SQL = @SQL + ', [AccountProfileCode]'
				SET @SQL = @SQL + ', [SubAccountLimit]'
				SET @SQL = @SQL + ', [BillingFirstName]'
				SET @SQL = @SQL + ', [BillingLastName]'
				SET @SQL = @SQL + ', [BillingCompanyName]'
				SET @SQL = @SQL + ', [BillingStreet]'
				SET @SQL = @SQL + ', [BillingStreet1]'
				SET @SQL = @SQL + ', [BillingCity]'
				SET @SQL = @SQL + ', [BillingStateCode]'
				SET @SQL = @SQL + ', [BillingPostalCode]'
				SET @SQL = @SQL + ', [BillingCountryCode]'
				SET @SQL = @SQL + ', [BillingPhoneNumber]'
				SET @SQL = @SQL + ', [BillingEmailID]'
				SET @SQL = @SQL + ', [ShipFirstName]'
				SET @SQL = @SQL + ', [ShipLastName]'
				SET @SQL = @SQL + ', [ShipCompanyName]'
				SET @SQL = @SQL + ', [ShipStreet]'
				SET @SQL = @SQL + ', [ShipStreet1]'
				SET @SQL = @SQL + ', [ShipCity]'
				SET @SQL = @SQL + ', [ShipStateCode]'
				SET @SQL = @SQL + ', [ShipPostalCode]'
				SET @SQL = @SQL + ', [ShipCountryCode]'
				SET @SQL = @SQL + ', [ShipEmailID]'
				SET @SQL = @SQL + ', [ShipPhoneNumber]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [CreateUser]'
				SET @SQL = @SQL + ', [CreateDte]'
				SET @SQL = @SQL + ', [UpdateUser]'
				SET @SQL = @SQL + ', [UpdateDte]'
				SET @SQL = @SQL + ', [ActiveInd]'
				SET @SQL = @SQL + ', [Website]'
				SET @SQL = @SQL + ', [Source]'
				SET @SQL = @SQL + ', [ReferredBy]'
				SET @SQL = @SQL + ', [Custom1]'
				SET @SQL = @SQL + ', [Custom2]'
				SET @SQL = @SQL + ', [Custom3]'
				SET @SQL = @SQL + ', [ContactTemperatureID]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeAccount]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [AccountID],'
				SET @SQL = @SQL + ' [ParentAccountID],'
				SET @SQL = @SQL + ' [PortalID],'
				SET @SQL = @SQL + ' [UserID],'
				SET @SQL = @SQL + ' [ExternalAccountNo],'
				SET @SQL = @SQL + ' [CompanyName],'
				SET @SQL = @SQL + ' [AccountTypeID],'
				SET @SQL = @SQL + ' [ProfileID],'
				SET @SQL = @SQL + ' [AccountProfileCode],'
				SET @SQL = @SQL + ' [SubAccountLimit],'
				SET @SQL = @SQL + ' [BillingFirstName],'
				SET @SQL = @SQL + ' [BillingLastName],'
				SET @SQL = @SQL + ' [BillingCompanyName],'
				SET @SQL = @SQL + ' [BillingStreet],'
				SET @SQL = @SQL + ' [BillingStreet1],'
				SET @SQL = @SQL + ' [BillingCity],'
				SET @SQL = @SQL + ' [BillingStateCode],'
				SET @SQL = @SQL + ' [BillingPostalCode],'
				SET @SQL = @SQL + ' [BillingCountryCode],'
				SET @SQL = @SQL + ' [BillingPhoneNumber],'
				SET @SQL = @SQL + ' [BillingEmailID],'
				SET @SQL = @SQL + ' [ShipFirstName],'
				SET @SQL = @SQL + ' [ShipLastName],'
				SET @SQL = @SQL + ' [ShipCompanyName],'
				SET @SQL = @SQL + ' [ShipStreet],'
				SET @SQL = @SQL + ' [ShipStreet1],'
				SET @SQL = @SQL + ' [ShipCity],'
				SET @SQL = @SQL + ' [ShipStateCode],'
				SET @SQL = @SQL + ' [ShipPostalCode],'
				SET @SQL = @SQL + ' [ShipCountryCode],'
				SET @SQL = @SQL + ' [ShipEmailID],'
				SET @SQL = @SQL + ' [ShipPhoneNumber],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [CreateUser],'
				SET @SQL = @SQL + ' [CreateDte],'
				SET @SQL = @SQL + ' [UpdateUser],'
				SET @SQL = @SQL + ' [UpdateDte],'
				SET @SQL = @SQL + ' [ActiveInd],'
				SET @SQL = @SQL + ' [Website],'
				SET @SQL = @SQL + ' [Source],'
				SET @SQL = @SQL + ' [ReferredBy],'
				SET @SQL = @SQL + ' [Custom1],'
				SET @SQL = @SQL + ' [Custom2],'
				SET @SQL = @SQL + ' [Custom3],'
				SET @SQL = @SQL + ' [ContactTemperatureID]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeAccount]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AccountID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentAccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UserID" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ExternalAccountNo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@AccountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccountProfileCode" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@SubAccountLimit" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@BillingFirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingLastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingCompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingStreet" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingStreet1" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingCity" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@BillingPostalCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@BillingCountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@BillingPhoneNumber" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingEmailID" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipFirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipLastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipCompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipStreet" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipStreet1" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipCity" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@ShipPostalCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@ShipCountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@ShipEmailID" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipPhoneNumber" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateUser" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CreateDte" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUser" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@UpdateDte" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Website" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@Source" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ReferredBy" type="varbinary" direction="Input" size="100" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Custom1" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom2" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom3" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ContactTemperatureID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeAccount]
					(
					[ParentAccountID]
					,[PortalID]
					,[UserID]
					,[ExternalAccountNo]
					,[CompanyName]
					,[AccountTypeID]
					,[ProfileID]
					,[AccountProfileCode]
					,[SubAccountLimit]
					,[BillingFirstName]
					,[BillingLastName]
					,[BillingCompanyName]
					,[BillingStreet]
					,[BillingStreet1]
					,[BillingCity]
					,[BillingStateCode]
					,[BillingPostalCode]
					,[BillingCountryCode]
					,[BillingPhoneNumber]
					,[BillingEmailID]
					,[ShipFirstName]
					,[ShipLastName]
					,[ShipCompanyName]
					,[ShipStreet]
					,[ShipStreet1]
					,[ShipCity]
					,[ShipStateCode]
					,[ShipPostalCode]
					,[ShipCountryCode]
					,[ShipEmailID]
					,[ShipPhoneNumber]
					,[Description]
					,[CreateUser]
					,[CreateDte]
					,[UpdateUser]
					,[UpdateDte]
					,[ActiveInd]
					,[Website]
					,[Source]
					,[ReferredBy]
					,[Custom1]
					,[Custom2]
					,[Custom3]
					,[ContactTemperatureID]
					)
				VALUES
					(
					@ParentAccountID
					,@PortalID
					,@UserID
					,@ExternalAccountNo
					,@CompanyName
					,@AccountTypeID
					,@ProfileID
					,@AccountProfileCode
					,@SubAccountLimit
					,@BillingFirstName
					,@BillingLastName
					,@BillingCompanyName
					,@BillingStreet
					,@BillingStreet1
					,@BillingCity
					,@BillingStateCode
					,@BillingPostalCode
					,@BillingCountryCode
					,@BillingPhoneNumber
					,@BillingEmailID
					,@ShipFirstName
					,@ShipLastName
					,@ShipCompanyName
					,@ShipStreet
					,@ShipStreet1
					,@ShipCity
					,@ShipStateCode
					,@ShipPostalCode
					,@ShipCountryCode
					,@ShipEmailID
					,@ShipPhoneNumber
					,@Description
					,@CreateUser
					,@CreateDte
					,@UpdateUser
					,@UpdateDte
					,@ActiveInd
					,@Website
					,@Source
					,@ReferredBy
					,@Custom1
					,@Custom2
					,@Custom3
					,@ContactTemperatureID
					)
				
				-- Get the identity value
				SET @AccountID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ParentAccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@UserID" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ExternalAccountNo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@AccountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccountProfileCode" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@SubAccountLimit" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@BillingFirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingLastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingCompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingStreet" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingStreet1" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingCity" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@BillingPostalCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@BillingCountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@BillingPhoneNumber" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingEmailID" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipFirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipLastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipCompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipStreet" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipStreet1" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipCity" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@ShipPostalCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@ShipCountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@ShipEmailID" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipPhoneNumber" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateUser" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CreateDte" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@UpdateUser" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@UpdateDte" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Website" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@Source" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ReferredBy" type="varbinary" direction="Input" size="100" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@Custom1" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom2" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom3" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ContactTemperatureID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeAccount]
				SET
					[ParentAccountID] = @ParentAccountID
					,[PortalID] = @PortalID
					,[UserID] = @UserID
					,[ExternalAccountNo] = @ExternalAccountNo
					,[CompanyName] = @CompanyName
					,[AccountTypeID] = @AccountTypeID
					,[ProfileID] = @ProfileID
					,[AccountProfileCode] = @AccountProfileCode
					,[SubAccountLimit] = @SubAccountLimit
					,[BillingFirstName] = @BillingFirstName
					,[BillingLastName] = @BillingLastName
					,[BillingCompanyName] = @BillingCompanyName
					,[BillingStreet] = @BillingStreet
					,[BillingStreet1] = @BillingStreet1
					,[BillingCity] = @BillingCity
					,[BillingStateCode] = @BillingStateCode
					,[BillingPostalCode] = @BillingPostalCode
					,[BillingCountryCode] = @BillingCountryCode
					,[BillingPhoneNumber] = @BillingPhoneNumber
					,[BillingEmailID] = @BillingEmailID
					,[ShipFirstName] = @ShipFirstName
					,[ShipLastName] = @ShipLastName
					,[ShipCompanyName] = @ShipCompanyName
					,[ShipStreet] = @ShipStreet
					,[ShipStreet1] = @ShipStreet1
					,[ShipCity] = @ShipCity
					,[ShipStateCode] = @ShipStateCode
					,[ShipPostalCode] = @ShipPostalCode
					,[ShipCountryCode] = @ShipCountryCode
					,[ShipEmailID] = @ShipEmailID
					,[ShipPhoneNumber] = @ShipPhoneNumber
					,[Description] = @Description
					,[CreateUser] = @CreateUser
					,[CreateDte] = @CreateDte
					,[UpdateUser] = @UpdateUser
					,[UpdateDte] = @UpdateDte
					,[ActiveInd] = @ActiveInd
					,[Website] = @Website
					,[Source] = @Source
					,[ReferredBy] = @ReferredBy
					,[Custom1] = @Custom1
					,[Custom2] = @Custom2
					,[Custom3] = @Custom3
					,[ContactTemperatureID] = @ContactTemperatureID
				WHERE
[AccountID] = @AccountID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeAccount table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeAccount] WITH (ROWLOCK) 
				WHERE
					[AccountID] = @AccountID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_GetByPortalID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeAccount table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AccountID],
					[ParentAccountID],
					[PortalID],
					[UserID],
					[ExternalAccountNo],
					[CompanyName],
					[AccountTypeID],
					[ProfileID],
					[AccountProfileCode],
					[SubAccountLimit],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountryCode],
					[BillingPhoneNumber],
					[BillingEmailID],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountryCode],
					[ShipEmailID],
					[ShipPhoneNumber],
					[Description],
					[CreateUser],
					[CreateDte],
					[UpdateUser],
					[UpdateDte],
					[ActiveInd],
					[Website],
					[Source],
					[ReferredBy],
					[Custom1],
					[Custom2],
					[Custom3],
					[ContactTemperatureID]
				FROM
					dbo.[ZNodeAccount]
				WHERE
					[PortalID] = @PortalID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_GetByParentAccountID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeAccount table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ParentAccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AccountID],
					[ParentAccountID],
					[PortalID],
					[UserID],
					[ExternalAccountNo],
					[CompanyName],
					[AccountTypeID],
					[ProfileID],
					[AccountProfileCode],
					[SubAccountLimit],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountryCode],
					[BillingPhoneNumber],
					[BillingEmailID],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountryCode],
					[ShipEmailID],
					[ShipPhoneNumber],
					[Description],
					[CreateUser],
					[CreateDte],
					[UpdateUser],
					[UpdateDte],
					[ActiveInd],
					[Website],
					[Source],
					[ReferredBy],
					[Custom1],
					[Custom2],
					[Custom3],
					[ContactTemperatureID]
				FROM
					dbo.[ZNodeAccount]
				WHERE
					[ParentAccountID] = @ParentAccountID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_GetByAccountTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeAccount table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AccountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AccountID],
					[ParentAccountID],
					[PortalID],
					[UserID],
					[ExternalAccountNo],
					[CompanyName],
					[AccountTypeID],
					[ProfileID],
					[AccountProfileCode],
					[SubAccountLimit],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountryCode],
					[BillingPhoneNumber],
					[BillingEmailID],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountryCode],
					[ShipEmailID],
					[ShipPhoneNumber],
					[Description],
					[CreateUser],
					[CreateDte],
					[UpdateUser],
					[UpdateDte],
					[ActiveInd],
					[Website],
					[Source],
					[ReferredBy],
					[Custom1],
					[Custom2],
					[Custom3],
					[ContactTemperatureID]
				FROM
					dbo.[ZNodeAccount]
				WHERE
					[AccountTypeID] = @AccountTypeID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_GetByUserID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeAccount table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@UserID" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AccountID],
					[ParentAccountID],
					[PortalID],
					[UserID],
					[ExternalAccountNo],
					[CompanyName],
					[AccountTypeID],
					[ProfileID],
					[AccountProfileCode],
					[SubAccountLimit],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountryCode],
					[BillingPhoneNumber],
					[BillingEmailID],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountryCode],
					[ShipEmailID],
					[ShipPhoneNumber],
					[Description],
					[CreateUser],
					[CreateDte],
					[UpdateUser],
					[UpdateDte],
					[ActiveInd],
					[Website],
					[Source],
					[ReferredBy],
					[Custom1],
					[Custom2],
					[Custom3],
					[ContactTemperatureID]
				FROM
					dbo.[ZNodeAccount]
				WHERE
					[UserID] = @UserID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_GetByProfileID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeAccount table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AccountID],
					[ParentAccountID],
					[PortalID],
					[UserID],
					[ExternalAccountNo],
					[CompanyName],
					[AccountTypeID],
					[ProfileID],
					[AccountProfileCode],
					[SubAccountLimit],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountryCode],
					[BillingPhoneNumber],
					[BillingEmailID],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountryCode],
					[ShipEmailID],
					[ShipPhoneNumber],
					[Description],
					[CreateUser],
					[CreateDte],
					[UpdateUser],
					[UpdateDte],
					[ActiveInd],
					[Website],
					[Source],
					[ReferredBy],
					[Custom1],
					[Custom2],
					[Custom3],
					[ContactTemperatureID]
				FROM
					dbo.[ZNodeAccount]
				WHERE
					[ProfileID] = @ProfileID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_GetByContactTemperatureID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeAccount table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ContactTemperatureID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AccountID],
					[ParentAccountID],
					[PortalID],
					[UserID],
					[ExternalAccountNo],
					[CompanyName],
					[AccountTypeID],
					[ProfileID],
					[AccountProfileCode],
					[SubAccountLimit],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountryCode],
					[BillingPhoneNumber],
					[BillingEmailID],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountryCode],
					[ShipEmailID],
					[ShipPhoneNumber],
					[Description],
					[CreateUser],
					[CreateDte],
					[UpdateUser],
					[UpdateDte],
					[ActiveInd],
					[Website],
					[Source],
					[ReferredBy],
					[Custom1],
					[Custom2],
					[Custom3],
					[ContactTemperatureID]
				FROM
					dbo.[ZNodeAccount]
				WHERE
					[ContactTemperatureID] = @ContactTemperatureID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_GetByAccountID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeAccount table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AccountID],
					[ParentAccountID],
					[PortalID],
					[UserID],
					[ExternalAccountNo],
					[CompanyName],
					[AccountTypeID],
					[ProfileID],
					[AccountProfileCode],
					[SubAccountLimit],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountryCode],
					[BillingPhoneNumber],
					[BillingEmailID],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountryCode],
					[ShipEmailID],
					[ShipPhoneNumber],
					[Description],
					[CreateUser],
					[CreateDte],
					[UpdateUser],
					[UpdateDte],
					[ActiveInd],
					[Website],
					[Source],
					[ReferredBy],
					[Custom1],
					[Custom2],
					[Custom3],
					[ContactTemperatureID]
				FROM
					dbo.[ZNodeAccount]
				WHERE
					[AccountID] = @AccountID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_GetByCompanyName" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeAccount table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AccountID],
					[ParentAccountID],
					[PortalID],
					[UserID],
					[ExternalAccountNo],
					[CompanyName],
					[AccountTypeID],
					[ProfileID],
					[AccountProfileCode],
					[SubAccountLimit],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountryCode],
					[BillingPhoneNumber],
					[BillingEmailID],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountryCode],
					[ShipEmailID],
					[ShipPhoneNumber],
					[Description],
					[CreateUser],
					[CreateDte],
					[UpdateUser],
					[UpdateDte],
					[ActiveInd],
					[Website],
					[Source],
					[ReferredBy],
					[Custom1],
					[Custom2],
					[Custom3],
					[ContactTemperatureID]
				FROM
					dbo.[ZNodeAccount]
				WHERE
					[CompanyName] = @CompanyName
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeAccount table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ParentAccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@UserID" type="uniqueidentifier" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExternalAccountNo" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@AccountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProfileID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccountProfileCode" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@SubAccountLimit" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@BillingFirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BillingLastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BillingCompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BillingStreet" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BillingStreet1" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BillingCity" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BillingStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@BillingPostalCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@BillingCountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@BillingPhoneNumber" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BillingEmailID" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipFirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipLastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipCompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipStreet" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipStreet1" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipCity" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@ShipPostalCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@ShipCountryCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@ShipEmailID" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipPhoneNumber" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateUser" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CreateDte" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@UpdateUser" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@UpdateDte" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Website" type="varchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@Source" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ReferredBy" type="varbinary" direction="Input" size="100" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@Custom1" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom2" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom3" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ContactTemperatureID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AccountID]
	, [ParentAccountID]
	, [PortalID]
	, [UserID]
	, [ExternalAccountNo]
	, [CompanyName]
	, [AccountTypeID]
	, [ProfileID]
	, [AccountProfileCode]
	, [SubAccountLimit]
	, [BillingFirstName]
	, [BillingLastName]
	, [BillingCompanyName]
	, [BillingStreet]
	, [BillingStreet1]
	, [BillingCity]
	, [BillingStateCode]
	, [BillingPostalCode]
	, [BillingCountryCode]
	, [BillingPhoneNumber]
	, [BillingEmailID]
	, [ShipFirstName]
	, [ShipLastName]
	, [ShipCompanyName]
	, [ShipStreet]
	, [ShipStreet1]
	, [ShipCity]
	, [ShipStateCode]
	, [ShipPostalCode]
	, [ShipCountryCode]
	, [ShipEmailID]
	, [ShipPhoneNumber]
	, [Description]
	, [CreateUser]
	, [CreateDte]
	, [UpdateUser]
	, [UpdateDte]
	, [ActiveInd]
	, [Website]
	, [Source]
	, [ReferredBy]
	, [Custom1]
	, [Custom2]
	, [Custom3]
	, [ContactTemperatureID]
    FROM
	dbo.[ZNodeAccount]
    WHERE 
	 ([AccountID] = @AccountID OR @AccountID is null)
	AND ([ParentAccountID] = @ParentAccountID OR @ParentAccountID is null)
	AND ([PortalID] = @PortalID OR @PortalID is null)
	AND ([UserID] = @UserID OR @UserID is null)
	AND ([ExternalAccountNo] = @ExternalAccountNo OR @ExternalAccountNo is null)
	AND ([CompanyName] = @CompanyName OR @CompanyName is null)
	AND ([AccountTypeID] = @AccountTypeID OR @AccountTypeID is null)
	AND ([ProfileID] = @ProfileID OR @ProfileID is null)
	AND ([AccountProfileCode] = @AccountProfileCode OR @AccountProfileCode is null)
	AND ([SubAccountLimit] = @SubAccountLimit OR @SubAccountLimit is null)
	AND ([BillingFirstName] = @BillingFirstName OR @BillingFirstName is null)
	AND ([BillingLastName] = @BillingLastName OR @BillingLastName is null)
	AND ([BillingCompanyName] = @BillingCompanyName OR @BillingCompanyName is null)
	AND ([BillingStreet] = @BillingStreet OR @BillingStreet is null)
	AND ([BillingStreet1] = @BillingStreet1 OR @BillingStreet1 is null)
	AND ([BillingCity] = @BillingCity OR @BillingCity is null)
	AND ([BillingStateCode] = @BillingStateCode OR @BillingStateCode is null)
	AND ([BillingPostalCode] = @BillingPostalCode OR @BillingPostalCode is null)
	AND ([BillingCountryCode] = @BillingCountryCode OR @BillingCountryCode is null)
	AND ([BillingPhoneNumber] = @BillingPhoneNumber OR @BillingPhoneNumber is null)
	AND ([BillingEmailID] = @BillingEmailID OR @BillingEmailID is null)
	AND ([ShipFirstName] = @ShipFirstName OR @ShipFirstName is null)
	AND ([ShipLastName] = @ShipLastName OR @ShipLastName is null)
	AND ([ShipCompanyName] = @ShipCompanyName OR @ShipCompanyName is null)
	AND ([ShipStreet] = @ShipStreet OR @ShipStreet is null)
	AND ([ShipStreet1] = @ShipStreet1 OR @ShipStreet1 is null)
	AND ([ShipCity] = @ShipCity OR @ShipCity is null)
	AND ([ShipStateCode] = @ShipStateCode OR @ShipStateCode is null)
	AND ([ShipPostalCode] = @ShipPostalCode OR @ShipPostalCode is null)
	AND ([ShipCountryCode] = @ShipCountryCode OR @ShipCountryCode is null)
	AND ([ShipEmailID] = @ShipEmailID OR @ShipEmailID is null)
	AND ([ShipPhoneNumber] = @ShipPhoneNumber OR @ShipPhoneNumber is null)
	AND ([CreateUser] = @CreateUser OR @CreateUser is null)
	AND ([CreateDte] = @CreateDte OR @CreateDte is null)
	AND ([UpdateUser] = @UpdateUser OR @UpdateUser is null)
	AND ([UpdateDte] = @UpdateDte OR @UpdateDte is null)
	AND ([ActiveInd] = @ActiveInd OR @ActiveInd is null)
	AND ([Website] = @Website OR @Website is null)
	AND ([Source] = @Source OR @Source is null)
	AND ([Custom1] = @Custom1 OR @Custom1 is null)
	AND ([Custom2] = @Custom2 OR @Custom2 is null)
	AND ([Custom3] = @Custom3 OR @Custom3 is null)
	AND ([ContactTemperatureID] = @ContactTemperatureID OR @ContactTemperatureID is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AccountID]
	, [ParentAccountID]
	, [PortalID]
	, [UserID]
	, [ExternalAccountNo]
	, [CompanyName]
	, [AccountTypeID]
	, [ProfileID]
	, [AccountProfileCode]
	, [SubAccountLimit]
	, [BillingFirstName]
	, [BillingLastName]
	, [BillingCompanyName]
	, [BillingStreet]
	, [BillingStreet1]
	, [BillingCity]
	, [BillingStateCode]
	, [BillingPostalCode]
	, [BillingCountryCode]
	, [BillingPhoneNumber]
	, [BillingEmailID]
	, [ShipFirstName]
	, [ShipLastName]
	, [ShipCompanyName]
	, [ShipStreet]
	, [ShipStreet1]
	, [ShipCity]
	, [ShipStateCode]
	, [ShipPostalCode]
	, [ShipCountryCode]
	, [ShipEmailID]
	, [ShipPhoneNumber]
	, [Description]
	, [CreateUser]
	, [CreateDte]
	, [UpdateUser]
	, [UpdateDte]
	, [ActiveInd]
	, [Website]
	, [Source]
	, [ReferredBy]
	, [Custom1]
	, [Custom2]
	, [Custom3]
	, [ContactTemperatureID]
    FROM
	dbo.[ZNodeAccount]
    WHERE 
	 ([AccountID] = @AccountID AND @AccountID is not null)
	OR ([ParentAccountID] = @ParentAccountID AND @ParentAccountID is not null)
	OR ([PortalID] = @PortalID AND @PortalID is not null)
	OR ([UserID] = @UserID AND @UserID is not null)
	OR ([ExternalAccountNo] = @ExternalAccountNo AND @ExternalAccountNo is not null)
	OR ([CompanyName] = @CompanyName AND @CompanyName is not null)
	OR ([AccountTypeID] = @AccountTypeID AND @AccountTypeID is not null)
	OR ([ProfileID] = @ProfileID AND @ProfileID is not null)
	OR ([AccountProfileCode] = @AccountProfileCode AND @AccountProfileCode is not null)
	OR ([SubAccountLimit] = @SubAccountLimit AND @SubAccountLimit is not null)
	OR ([BillingFirstName] = @BillingFirstName AND @BillingFirstName is not null)
	OR ([BillingLastName] = @BillingLastName AND @BillingLastName is not null)
	OR ([BillingCompanyName] = @BillingCompanyName AND @BillingCompanyName is not null)
	OR ([BillingStreet] = @BillingStreet AND @BillingStreet is not null)
	OR ([BillingStreet1] = @BillingStreet1 AND @BillingStreet1 is not null)
	OR ([BillingCity] = @BillingCity AND @BillingCity is not null)
	OR ([BillingStateCode] = @BillingStateCode AND @BillingStateCode is not null)
	OR ([BillingPostalCode] = @BillingPostalCode AND @BillingPostalCode is not null)
	OR ([BillingCountryCode] = @BillingCountryCode AND @BillingCountryCode is not null)
	OR ([BillingPhoneNumber] = @BillingPhoneNumber AND @BillingPhoneNumber is not null)
	OR ([BillingEmailID] = @BillingEmailID AND @BillingEmailID is not null)
	OR ([ShipFirstName] = @ShipFirstName AND @ShipFirstName is not null)
	OR ([ShipLastName] = @ShipLastName AND @ShipLastName is not null)
	OR ([ShipCompanyName] = @ShipCompanyName AND @ShipCompanyName is not null)
	OR ([ShipStreet] = @ShipStreet AND @ShipStreet is not null)
	OR ([ShipStreet1] = @ShipStreet1 AND @ShipStreet1 is not null)
	OR ([ShipCity] = @ShipCity AND @ShipCity is not null)
	OR ([ShipStateCode] = @ShipStateCode AND @ShipStateCode is not null)
	OR ([ShipPostalCode] = @ShipPostalCode AND @ShipPostalCode is not null)
	OR ([ShipCountryCode] = @ShipCountryCode AND @ShipCountryCode is not null)
	OR ([ShipEmailID] = @ShipEmailID AND @ShipEmailID is not null)
	OR ([ShipPhoneNumber] = @ShipPhoneNumber AND @ShipPhoneNumber is not null)
	OR ([CreateUser] = @CreateUser AND @CreateUser is not null)
	OR ([CreateDte] = @CreateDte AND @CreateDte is not null)
	OR ([UpdateUser] = @UpdateUser AND @UpdateUser is not null)
	OR ([UpdateDte] = @UpdateDte AND @UpdateDte is not null)
	OR ([ActiveInd] = @ActiveInd AND @ActiveInd is not null)
	OR ([Website] = @Website AND @Website is not null)
	OR ([Source] = @Source AND @Source is not null)
	OR ([Custom1] = @Custom1 AND @Custom1 is not null)
	OR ([Custom2] = @Custom2 AND @Custom2 is not null)
	OR ([Custom3] = @Custom3 AND @Custom3 is not null)
	OR ([ContactTemperatureID] = @ContactTemperatureID AND @ContactTemperatureID is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAccount_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeAccount table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [AccountID]
					, [ParentAccountID]
					, [PortalID]
					, [UserID]
					, [ExternalAccountNo]
					, [CompanyName]
					, [AccountTypeID]
					, [ProfileID]
					, [AccountProfileCode]
					, [SubAccountLimit]
					, [BillingFirstName]
					, [BillingLastName]
					, [BillingCompanyName]
					, [BillingStreet]
					, [BillingStreet1]
					, [BillingCity]
					, [BillingStateCode]
					, [BillingPostalCode]
					, [BillingCountryCode]
					, [BillingPhoneNumber]
					, [BillingEmailID]
					, [ShipFirstName]
					, [ShipLastName]
					, [ShipCompanyName]
					, [ShipStreet]
					, [ShipStreet1]
					, [ShipCity]
					, [ShipStateCode]
					, [ShipPostalCode]
					, [ShipCountryCode]
					, [ShipEmailID]
					, [ShipPhoneNumber]
					, [Description]
					, [CreateUser]
					, [CreateDte]
					, [UpdateUser]
					, [UpdateDte]
					, [ActiveInd]
					, [Website]
					, [Source]
					, [ReferredBy]
					, [Custom1]
					, [Custom2]
					, [Custom3]
					, [ContactTemperatureID]
					from dbo.[ZNodeAccount] {0}
				)
				select
				       [AccountID],
				       [ParentAccountID],
				       [PortalID],
				       [UserID],
				       [ExternalAccountNo],
				       [CompanyName],
				       [AccountTypeID],
				       [ProfileID],
				       [AccountProfileCode],
				       [SubAccountLimit],
				       [BillingFirstName],
				       [BillingLastName],
				       [BillingCompanyName],
				       [BillingStreet],
				       [BillingStreet1],
				       [BillingCity],
				       [BillingStateCode],
				       [BillingPostalCode],
				       [BillingCountryCode],
				       [BillingPhoneNumber],
				       [BillingEmailID],
				       [ShipFirstName],
				       [ShipLastName],
				       [ShipCompanyName],
				       [ShipStreet],
				       [ShipStreet1],
				       [ShipCity],
				       [ShipStateCode],
				       [ShipPostalCode],
				       [ShipCountryCode],
				       [ShipEmailID],
				       [ShipPhoneNumber],
				       [Description],
				       [CreateUser],
				       [CreateDte],
				       [UpdateUser],
				       [UpdateDte],
				       [ActiveInd],
				       [Website],
				       [Source],
				       [ReferredBy],
				       [Custom1],
				       [Custom2],
				       [Custom3],
				       [ContactTemperatureID]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeAccount] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOnValue_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeAddOnValue table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AddOnValueID],
					[AddOnID],
					[Name],
					[Description],
					[SKU],
					[QuantityOnHand],
					[DefaultInd],
					[DisplayOrder],
					[ImageFile],
					[Price],
					[Weight]
				FROM
					dbo.[ZNodeAddOnValue]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOnValue_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeAddOnValue table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[AddOnValueID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [AddOnValueID]'
				SET @SQL = @SQL + ', [AddOnID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [SKU]'
				SET @SQL = @SQL + ', [QuantityOnHand]'
				SET @SQL = @SQL + ', [DefaultInd]'
				SET @SQL = @SQL + ', [DisplayOrder]'
				SET @SQL = @SQL + ', [ImageFile]'
				SET @SQL = @SQL + ', [Price]'
				SET @SQL = @SQL + ', [Weight]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeAddOnValue]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [AddOnValueID],'
				SET @SQL = @SQL + ' [AddOnID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [SKU],'
				SET @SQL = @SQL + ' [QuantityOnHand],'
				SET @SQL = @SQL + ' [DefaultInd],'
				SET @SQL = @SQL + ' [DisplayOrder],'
				SET @SQL = @SQL + ' [ImageFile],'
				SET @SQL = @SQL + ' [Price],'
				SET @SQL = @SQL + ' [Weight]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeAddOnValue]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOnValue_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeAddOnValue table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddOnValueID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@SKU" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@QuantityOnHand" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DefaultInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageFile" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Price" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@Weight" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeAddOnValue]
					(
					[AddOnID]
					,[Name]
					,[Description]
					,[SKU]
					,[QuantityOnHand]
					,[DefaultInd]
					,[DisplayOrder]
					,[ImageFile]
					,[Price]
					,[Weight]
					)
				VALUES
					(
					@AddOnID
					,@Name
					,@Description
					,@SKU
					,@QuantityOnHand
					,@DefaultInd
					,@DisplayOrder
					,@ImageFile
					,@Price
					,@Weight
					)
				
				-- Get the identity value
				SET @AddOnValueID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOnValue_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeAddOnValue table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddOnValueID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@SKU" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@QuantityOnHand" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DefaultInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageFile" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Price" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@Weight" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeAddOnValue]
				SET
					[AddOnID] = @AddOnID
					,[Name] = @Name
					,[Description] = @Description
					,[SKU] = @SKU
					,[QuantityOnHand] = @QuantityOnHand
					,[DefaultInd] = @DefaultInd
					,[DisplayOrder] = @DisplayOrder
					,[ImageFile] = @ImageFile
					,[Price] = @Price
					,[Weight] = @Weight
				WHERE
[AddOnValueID] = @AddOnValueID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOnValue_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeAddOnValue table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddOnValueID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeAddOnValue] WITH (ROWLOCK) 
				WHERE
					[AddOnValueID] = @AddOnValueID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOnValue_GetByAddOnID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeAddOnValue table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[AddOnValueID],
					[AddOnID],
					[Name],
					[Description],
					[SKU],
					[QuantityOnHand],
					[DefaultInd],
					[DisplayOrder],
					[ImageFile],
					[Price],
					[Weight]
				FROM
					dbo.[ZNodeAddOnValue]
				WHERE
					[AddOnID] = @AddOnID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOnValue_GetByAddOnValueID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeAddOnValue table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AddOnValueID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AddOnValueID],
					[AddOnID],
					[Name],
					[Description],
					[SKU],
					[QuantityOnHand],
					[DefaultInd],
					[DisplayOrder],
					[ImageFile],
					[Price],
					[Weight]
				FROM
					dbo.[ZNodeAddOnValue]
				WHERE
					[AddOnValueID] = @AddOnValueID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOnValue_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeAddOnValue table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddOnValueID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AddOnID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@SKU" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@QuantityOnHand" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DefaultInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageFile" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Price" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@Weight" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AddOnValueID]
	, [AddOnID]
	, [Name]
	, [Description]
	, [SKU]
	, [QuantityOnHand]
	, [DefaultInd]
	, [DisplayOrder]
	, [ImageFile]
	, [Price]
	, [Weight]
    FROM
	dbo.[ZNodeAddOnValue]
    WHERE 
	 ([AddOnValueID] = @AddOnValueID OR @AddOnValueID is null)
	AND ([AddOnID] = @AddOnID OR @AddOnID is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([SKU] = @SKU OR @SKU is null)
	AND ([QuantityOnHand] = @QuantityOnHand OR @QuantityOnHand is null)
	AND ([DefaultInd] = @DefaultInd OR @DefaultInd is null)
	AND ([DisplayOrder] = @DisplayOrder OR @DisplayOrder is null)
	AND ([ImageFile] = @ImageFile OR @ImageFile is null)
	AND ([Price] = @Price OR @Price is null)
	AND ([Weight] = @Weight OR @Weight is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AddOnValueID]
	, [AddOnID]
	, [Name]
	, [Description]
	, [SKU]
	, [QuantityOnHand]
	, [DefaultInd]
	, [DisplayOrder]
	, [ImageFile]
	, [Price]
	, [Weight]
    FROM
	dbo.[ZNodeAddOnValue]
    WHERE 
	 ([AddOnValueID] = @AddOnValueID AND @AddOnValueID is not null)
	OR ([AddOnID] = @AddOnID AND @AddOnID is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([SKU] = @SKU AND @SKU is not null)
	OR ([QuantityOnHand] = @QuantityOnHand AND @QuantityOnHand is not null)
	OR ([DefaultInd] = @DefaultInd AND @DefaultInd is not null)
	OR ([DisplayOrder] = @DisplayOrder AND @DisplayOrder is not null)
	OR ([ImageFile] = @ImageFile AND @ImageFile is not null)
	OR ([Price] = @Price AND @Price is not null)
	OR ([Weight] = @Weight AND @Weight is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAddOnValue_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeAddOnValue table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [AddOnValueID]
					, [AddOnID]
					, [Name]
					, [Description]
					, [SKU]
					, [QuantityOnHand]
					, [DefaultInd]
					, [DisplayOrder]
					, [ImageFile]
					, [Price]
					, [Weight]
					from dbo.[ZNodeAddOnValue] {0}
				)
				select
				       [AddOnValueID],
				       [AddOnID],
				       [Name],
				       [Description],
				       [SKU],
				       [QuantityOnHand],
				       [DefaultInd],
				       [DisplayOrder],
				       [ImageFile],
				       [Price],
				       [Weight]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeAddOnValue] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeCase table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CaseID],
					[PortalID],
					[AccountID],
					[OwnerAccountID],
					[CaseStatusID],
					[CasePriorityID],
					[CaseTypeID],
					[CaseOrigin],
					[Title],
					[Description],
					[FirstName],
					[LastName],
					[CompanyName],
					[EmailID],
					[PhoneNumber],
					[CreateDte],
					[CreateUser]
				FROM
					dbo.[ZNodeCase]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeCase table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CaseID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CaseID]'
				SET @SQL = @SQL + ', [PortalID]'
				SET @SQL = @SQL + ', [AccountID]'
				SET @SQL = @SQL + ', [OwnerAccountID]'
				SET @SQL = @SQL + ', [CaseStatusID]'
				SET @SQL = @SQL + ', [CasePriorityID]'
				SET @SQL = @SQL + ', [CaseTypeID]'
				SET @SQL = @SQL + ', [CaseOrigin]'
				SET @SQL = @SQL + ', [Title]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [FirstName]'
				SET @SQL = @SQL + ', [LastName]'
				SET @SQL = @SQL + ', [CompanyName]'
				SET @SQL = @SQL + ', [EmailID]'
				SET @SQL = @SQL + ', [PhoneNumber]'
				SET @SQL = @SQL + ', [CreateDte]'
				SET @SQL = @SQL + ', [CreateUser]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeCase]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CaseID],'
				SET @SQL = @SQL + ' [PortalID],'
				SET @SQL = @SQL + ' [AccountID],'
				SET @SQL = @SQL + ' [OwnerAccountID],'
				SET @SQL = @SQL + ' [CaseStatusID],'
				SET @SQL = @SQL + ' [CasePriorityID],'
				SET @SQL = @SQL + ' [CaseTypeID],'
				SET @SQL = @SQL + ' [CaseOrigin],'
				SET @SQL = @SQL + ' [Title],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [FirstName],'
				SET @SQL = @SQL + ' [LastName],'
				SET @SQL = @SQL + ' [CompanyName],'
				SET @SQL = @SQL + ' [EmailID],'
				SET @SQL = @SQL + ' [PhoneNumber],'
				SET @SQL = @SQL + ' [CreateDte],'
				SET @SQL = @SQL + ' [CreateUser]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeCase]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeCase table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OwnerAccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CaseStatusID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CasePriorityID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CaseTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CaseOrigin" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Title" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@FirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@LastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@EmailID" type="varchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@PhoneNumber" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@CreateDte" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateUser" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeCase]
					(
					[PortalID]
					,[AccountID]
					,[OwnerAccountID]
					,[CaseStatusID]
					,[CasePriorityID]
					,[CaseTypeID]
					,[CaseOrigin]
					,[Title]
					,[Description]
					,[FirstName]
					,[LastName]
					,[CompanyName]
					,[EmailID]
					,[PhoneNumber]
					,[CreateDte]
					,[CreateUser]
					)
				VALUES
					(
					@PortalID
					,@AccountID
					,@OwnerAccountID
					,@CaseStatusID
					,@CasePriorityID
					,@CaseTypeID
					,@CaseOrigin
					,@Title
					,@Description
					,@FirstName
					,@LastName
					,@CompanyName
					,@EmailID
					,@PhoneNumber
					,@CreateDte
					,@CreateUser
					)
				
				-- Get the identity value
				SET @CaseID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeCase table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OwnerAccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CaseStatusID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CasePriorityID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CaseTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CaseOrigin" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Title" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@FirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@LastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@EmailID" type="varchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@PhoneNumber" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@CreateDte" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateUser" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeCase]
				SET
					[PortalID] = @PortalID
					,[AccountID] = @AccountID
					,[OwnerAccountID] = @OwnerAccountID
					,[CaseStatusID] = @CaseStatusID
					,[CasePriorityID] = @CasePriorityID
					,[CaseTypeID] = @CaseTypeID
					,[CaseOrigin] = @CaseOrigin
					,[Title] = @Title
					,[Description] = @Description
					,[FirstName] = @FirstName
					,[LastName] = @LastName
					,[CompanyName] = @CompanyName
					,[EmailID] = @EmailID
					,[PhoneNumber] = @PhoneNumber
					,[CreateDte] = @CreateDte
					,[CreateUser] = @CreateUser
				WHERE
[CaseID] = @CaseID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeCase table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeCase] WITH (ROWLOCK) 
				WHERE
					[CaseID] = @CaseID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_GetByPortalID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCase table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[CaseID],
					[PortalID],
					[AccountID],
					[OwnerAccountID],
					[CaseStatusID],
					[CasePriorityID],
					[CaseTypeID],
					[CaseOrigin],
					[Title],
					[Description],
					[FirstName],
					[LastName],
					[CompanyName],
					[EmailID],
					[PhoneNumber],
					[CreateDte],
					[CreateUser]
				FROM
					dbo.[ZNodeCase]
				WHERE
					[PortalID] = @PortalID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_GetByAccountID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCase table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[CaseID],
					[PortalID],
					[AccountID],
					[OwnerAccountID],
					[CaseStatusID],
					[CasePriorityID],
					[CaseTypeID],
					[CaseOrigin],
					[Title],
					[Description],
					[FirstName],
					[LastName],
					[CompanyName],
					[EmailID],
					[PhoneNumber],
					[CreateDte],
					[CreateUser]
				FROM
					dbo.[ZNodeCase]
				WHERE
					[AccountID] = @AccountID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_GetByCaseTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCase table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[CaseID],
					[PortalID],
					[AccountID],
					[OwnerAccountID],
					[CaseStatusID],
					[CasePriorityID],
					[CaseTypeID],
					[CaseOrigin],
					[Title],
					[Description],
					[FirstName],
					[LastName],
					[CompanyName],
					[EmailID],
					[PhoneNumber],
					[CreateDte],
					[CreateUser]
				FROM
					dbo.[ZNodeCase]
				WHERE
					[CaseTypeID] = @CaseTypeID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_GetByCasePriorityID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCase table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CasePriorityID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[CaseID],
					[PortalID],
					[AccountID],
					[OwnerAccountID],
					[CaseStatusID],
					[CasePriorityID],
					[CaseTypeID],
					[CaseOrigin],
					[Title],
					[Description],
					[FirstName],
					[LastName],
					[CompanyName],
					[EmailID],
					[PhoneNumber],
					[CreateDte],
					[CreateUser]
				FROM
					dbo.[ZNodeCase]
				WHERE
					[CasePriorityID] = @CasePriorityID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_GetByCaseID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCase table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CaseID],
					[PortalID],
					[AccountID],
					[OwnerAccountID],
					[CaseStatusID],
					[CasePriorityID],
					[CaseTypeID],
					[CaseOrigin],
					[Title],
					[Description],
					[FirstName],
					[LastName],
					[CompanyName],
					[EmailID],
					[PhoneNumber],
					[CreateDte],
					[CreateUser]
				FROM
					dbo.[ZNodeCase]
				WHERE
					[CaseID] = @CaseID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_GetByAccountIDCaseTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCase table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CaseTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CaseID],
					[PortalID],
					[AccountID],
					[OwnerAccountID],
					[CaseStatusID],
					[CasePriorityID],
					[CaseTypeID],
					[CaseOrigin],
					[Title],
					[Description],
					[FirstName],
					[LastName],
					[CompanyName],
					[EmailID],
					[PhoneNumber],
					[CreateDte],
					[CreateUser]
				FROM
					dbo.[ZNodeCase]
				WHERE
					[AccountID] = @AccountID
					AND [CaseTypeID] = @CaseTypeID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_GetByOwnerAccountID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCase table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OwnerAccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CaseID],
					[PortalID],
					[AccountID],
					[OwnerAccountID],
					[CaseStatusID],
					[CasePriorityID],
					[CaseTypeID],
					[CaseOrigin],
					[Title],
					[Description],
					[FirstName],
					[LastName],
					[CompanyName],
					[EmailID],
					[PhoneNumber],
					[CreateDte],
					[CreateUser]
				FROM
					dbo.[ZNodeCase]
				WHERE
					[OwnerAccountID] = @OwnerAccountID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_GetByCaseStatusID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCase table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseStatusID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CaseID],
					[PortalID],
					[AccountID],
					[OwnerAccountID],
					[CaseStatusID],
					[CasePriorityID],
					[CaseTypeID],
					[CaseOrigin],
					[Title],
					[Description],
					[FirstName],
					[LastName],
					[CompanyName],
					[EmailID],
					[PhoneNumber],
					[CreateDte],
					[CreateUser]
				FROM
					dbo.[ZNodeCase]
				WHERE
					[CaseStatusID] = @CaseStatusID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_GetByTitleFirstNameLastNameCompanyName" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCase table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Title" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@FirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@LastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CaseID],
					[PortalID],
					[AccountID],
					[OwnerAccountID],
					[CaseStatusID],
					[CasePriorityID],
					[CaseTypeID],
					[CaseOrigin],
					[Title],
					[Description],
					[FirstName],
					[LastName],
					[CompanyName],
					[EmailID],
					[PhoneNumber],
					[CreateDte],
					[CreateUser]
				FROM
					dbo.[ZNodeCase]
				WHERE
					[Title] = @Title
					AND [FirstName] = @FirstName
					AND [LastName] = @LastName
					AND [CompanyName] = @CompanyName
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeCase table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CaseID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OwnerAccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CaseStatusID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CasePriorityID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CaseTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CaseOrigin" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Title" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@Description" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@FirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@LastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@CompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@EmailID" type="varchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@PhoneNumber" type="varchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@CreateDte" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateUser" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CaseID]
	, [PortalID]
	, [AccountID]
	, [OwnerAccountID]
	, [CaseStatusID]
	, [CasePriorityID]
	, [CaseTypeID]
	, [CaseOrigin]
	, [Title]
	, [Description]
	, [FirstName]
	, [LastName]
	, [CompanyName]
	, [EmailID]
	, [PhoneNumber]
	, [CreateDte]
	, [CreateUser]
    FROM
	dbo.[ZNodeCase]
    WHERE 
	 ([CaseID] = @CaseID OR @CaseID is null)
	AND ([PortalID] = @PortalID OR @PortalID is null)
	AND ([AccountID] = @AccountID OR @AccountID is null)
	AND ([OwnerAccountID] = @OwnerAccountID OR @OwnerAccountID is null)
	AND ([CaseStatusID] = @CaseStatusID OR @CaseStatusID is null)
	AND ([CasePriorityID] = @CasePriorityID OR @CasePriorityID is null)
	AND ([CaseTypeID] = @CaseTypeID OR @CaseTypeID is null)
	AND ([CaseOrigin] = @CaseOrigin OR @CaseOrigin is null)
	AND ([Title] = @Title OR @Title is null)
	AND ([FirstName] = @FirstName OR @FirstName is null)
	AND ([LastName] = @LastName OR @LastName is null)
	AND ([CompanyName] = @CompanyName OR @CompanyName is null)
	AND ([EmailID] = @EmailID OR @EmailID is null)
	AND ([PhoneNumber] = @PhoneNumber OR @PhoneNumber is null)
	AND ([CreateDte] = @CreateDte OR @CreateDte is null)
	AND ([CreateUser] = @CreateUser OR @CreateUser is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CaseID]
	, [PortalID]
	, [AccountID]
	, [OwnerAccountID]
	, [CaseStatusID]
	, [CasePriorityID]
	, [CaseTypeID]
	, [CaseOrigin]
	, [Title]
	, [Description]
	, [FirstName]
	, [LastName]
	, [CompanyName]
	, [EmailID]
	, [PhoneNumber]
	, [CreateDte]
	, [CreateUser]
    FROM
	dbo.[ZNodeCase]
    WHERE 
	 ([CaseID] = @CaseID AND @CaseID is not null)
	OR ([PortalID] = @PortalID AND @PortalID is not null)
	OR ([AccountID] = @AccountID AND @AccountID is not null)
	OR ([OwnerAccountID] = @OwnerAccountID AND @OwnerAccountID is not null)
	OR ([CaseStatusID] = @CaseStatusID AND @CaseStatusID is not null)
	OR ([CasePriorityID] = @CasePriorityID AND @CasePriorityID is not null)
	OR ([CaseTypeID] = @CaseTypeID AND @CaseTypeID is not null)
	OR ([CaseOrigin] = @CaseOrigin AND @CaseOrigin is not null)
	OR ([Title] = @Title AND @Title is not null)
	OR ([FirstName] = @FirstName AND @FirstName is not null)
	OR ([LastName] = @LastName AND @LastName is not null)
	OR ([CompanyName] = @CompanyName AND @CompanyName is not null)
	OR ([EmailID] = @EmailID AND @EmailID is not null)
	OR ([PhoneNumber] = @PhoneNumber AND @PhoneNumber is not null)
	OR ([CreateDte] = @CreateDte AND @CreateDte is not null)
	OR ([CreateUser] = @CreateUser AND @CreateUser is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCase_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeCase table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [CaseID]
					, [PortalID]
					, [AccountID]
					, [OwnerAccountID]
					, [CaseStatusID]
					, [CasePriorityID]
					, [CaseTypeID]
					, [CaseOrigin]
					, [Title]
					, [Description]
					, [FirstName]
					, [LastName]
					, [CompanyName]
					, [EmailID]
					, [PhoneNumber]
					, [CreateDte]
					, [CreateUser]
					from dbo.[ZNodeCase] {0}
				)
				select
				       [CaseID],
				       [PortalID],
				       [AccountID],
				       [OwnerAccountID],
				       [CaseStatusID],
				       [CasePriorityID],
				       [CaseTypeID],
				       [CaseOrigin],
				       [Title],
				       [Description],
				       [FirstName],
				       [LastName],
				       [CompanyName],
				       [EmailID],
				       [PhoneNumber],
				       [CreateDte],
				       [CreateUser]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeCase] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAttributeType_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeAttributeType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[AttributeTypeId],
					[PortalId],
					[Name],
					[Description],
					[DisplayOrder],
					[IsPrivate]
				FROM
					dbo.[ZNodeAttributeType]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAttributeType_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeAttributeType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[AttributeTypeId]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [AttributeTypeId]'
				SET @SQL = @SQL + ', [PortalId]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [DisplayOrder]'
				SET @SQL = @SQL + ', [IsPrivate]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeAttributeType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [AttributeTypeId],'
				SET @SQL = @SQL + ' [PortalId],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [DisplayOrder],'
				SET @SQL = @SQL + ' [IsPrivate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeAttributeType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAttributeType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeAttributeType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AttributeTypeId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IsPrivate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeAttributeType]
					(
					[PortalId]
					,[Name]
					,[Description]
					,[DisplayOrder]
					,[IsPrivate]
					)
				VALUES
					(
					@PortalId
					,@Name
					,@Description
					,@DisplayOrder
					,@IsPrivate
					)
				
				-- Get the identity value
				SET @AttributeTypeId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAttributeType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeAttributeType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AttributeTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@IsPrivate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeAttributeType]
				SET
					[PortalId] = @PortalId
					,[Name] = @Name
					,[Description] = @Description
					,[DisplayOrder] = @DisplayOrder
					,[IsPrivate] = @IsPrivate
				WHERE
[AttributeTypeId] = @AttributeTypeId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAttributeType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeAttributeType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AttributeTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeAttributeType] WITH (ROWLOCK) 
				WHERE
					[AttributeTypeId] = @AttributeTypeId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAttributeType_GetByAttributeTypeId" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeAttributeType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AttributeTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[AttributeTypeId],
					[PortalId],
					[Name],
					[Description],
					[DisplayOrder],
					[IsPrivate]
				FROM
					dbo.[ZNodeAttributeType]
				WHERE
					[AttributeTypeId] = @AttributeTypeId
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAttributeType_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeAttributeType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@AttributeTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PortalId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@IsPrivate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [AttributeTypeId]
	, [PortalId]
	, [Name]
	, [Description]
	, [DisplayOrder]
	, [IsPrivate]
    FROM
	dbo.[ZNodeAttributeType]
    WHERE 
	 ([AttributeTypeId] = @AttributeTypeId OR @AttributeTypeId is null)
	AND ([PortalId] = @PortalId OR @PortalId is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([DisplayOrder] = @DisplayOrder OR @DisplayOrder is null)
	AND ([IsPrivate] = @IsPrivate OR @IsPrivate is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [AttributeTypeId]
	, [PortalId]
	, [Name]
	, [Description]
	, [DisplayOrder]
	, [IsPrivate]
    FROM
	dbo.[ZNodeAttributeType]
    WHERE 
	 ([AttributeTypeId] = @AttributeTypeId AND @AttributeTypeId is not null)
	OR ([PortalId] = @PortalId AND @PortalId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([DisplayOrder] = @DisplayOrder AND @DisplayOrder is not null)
	OR ([IsPrivate] = @IsPrivate AND @IsPrivate is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeAttributeType_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeAttributeType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [AttributeTypeId]
					, [PortalId]
					, [Name]
					, [Description]
					, [DisplayOrder]
					, [IsPrivate]
					from dbo.[ZNodeAttributeType] {0}
				)
				select
				       [AttributeTypeId],
				       [PortalId],
				       [Name],
				       [Description],
				       [DisplayOrder],
				       [IsPrivate]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeAttributeType] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCountry_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeCountry table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[Code],
					[PortalID],
					[Name],
					[DisplayOrder],
					[ActiveInd]
				FROM
					dbo.[ZNodeCountry]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCountry_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeCountry table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[Code]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [Code]'
				SET @SQL = @SQL + ', [PortalID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [DisplayOrder]'
				SET @SQL = @SQL + ', [ActiveInd]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeCountry]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [Code],'
				SET @SQL = @SQL + ' [PortalID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [DisplayOrder],'
				SET @SQL = @SQL + ' [ActiveInd]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeCountry]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCountry_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeCountry table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Code" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeCountry]
					(
					[Code]
					,[PortalID]
					,[Name]
					,[DisplayOrder]
					,[ActiveInd]
					)
				VALUES
					(
					@Code
					,@PortalID
					,@Name
					,@DisplayOrder
					,@ActiveInd
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCountry_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeCountry table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Code" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@OriginalCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeCountry]
				SET
					[Code] = @Code
					,[PortalID] = @PortalID
					,[Name] = @Name
					,[DisplayOrder] = @DisplayOrder
					,[ActiveInd] = @ActiveInd
				WHERE
[Code] = @OriginalCode 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCountry_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeCountry table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Code" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeCountry] WITH (ROWLOCK) 
				WHERE
					[Code] = @Code
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCountry_GetByCode" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCountry table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Code" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Code],
					[PortalID],
					[Name],
					[DisplayOrder],
					[ActiveInd]
				FROM
					dbo.[ZNodeCountry]
				WHERE
					[Code] = @Code
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCountry_GetByPortalIDActiveInd" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCountry table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Code],
					[PortalID],
					[Name],
					[DisplayOrder],
					[ActiveInd]
				FROM
					dbo.[ZNodeCountry]
				WHERE
					[PortalID] = @PortalID
					AND [ActiveInd] = @ActiveInd
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCountry_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeCountry table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Code" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@DisplayOrder" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [Code]
	, [PortalID]
	, [Name]
	, [DisplayOrder]
	, [ActiveInd]
    FROM
	dbo.[ZNodeCountry]
    WHERE 
	 ([Code] = @Code OR @Code is null)
	AND ([PortalID] = @PortalID OR @PortalID is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([DisplayOrder] = @DisplayOrder OR @DisplayOrder is null)
	AND ([ActiveInd] = @ActiveInd OR @ActiveInd is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [Code]
	, [PortalID]
	, [Name]
	, [DisplayOrder]
	, [ActiveInd]
    FROM
	dbo.[ZNodeCountry]
    WHERE 
	 ([Code] = @Code AND @Code is not null)
	OR ([PortalID] = @PortalID AND @PortalID is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([DisplayOrder] = @DisplayOrder AND @DisplayOrder is not null)
	OR ([ActiveInd] = @ActiveInd AND @ActiveInd is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCountry_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeCountry table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [Code]
					, [PortalID]
					, [Name]
					, [DisplayOrder]
					, [ActiveInd]
					from dbo.[ZNodeCountry] {0}
				)
				select
				       [Code],
				       [PortalID],
				       [Name],
				       [DisplayOrder],
				       [ActiveInd]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeCountry] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderProcessingType_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeOrderProcessingType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[OrderProcessingTypeID],
					[Description],
					[ClassID]
				FROM
					dbo.[ZNodeOrderProcessingType]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderProcessingType_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeOrderProcessingType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[OrderProcessingTypeID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [OrderProcessingTypeID]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [ClassID]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeOrderProcessingType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [OrderProcessingTypeID],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [ClassID]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeOrderProcessingType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderProcessingType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeOrderProcessingType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderProcessingTypeID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Description" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@ClassID" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeOrderProcessingType]
					(
					[Description]
					,[ClassID]
					)
				VALUES
					(
					@Description
					,@ClassID
					)
				
				-- Get the identity value
				SET @OrderProcessingTypeID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderProcessingType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeOrderProcessingType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderProcessingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Description" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@ClassID" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeOrderProcessingType]
				SET
					[Description] = @Description
					,[ClassID] = @ClassID
				WHERE
[OrderProcessingTypeID] = @OrderProcessingTypeID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderProcessingType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeOrderProcessingType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderProcessingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeOrderProcessingType] WITH (ROWLOCK) 
				WHERE
					[OrderProcessingTypeID] = @OrderProcessingTypeID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderProcessingType_GetByOrderProcessingTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeOrderProcessingType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderProcessingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[OrderProcessingTypeID],
					[Description],
					[ClassID]
				FROM
					dbo.[ZNodeOrderProcessingType]
				WHERE
					[OrderProcessingTypeID] = @OrderProcessingTypeID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderProcessingType_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeOrderProcessingType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderProcessingTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Description" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ClassID" type="varchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [OrderProcessingTypeID]
	, [Description]
	, [ClassID]
    FROM
	dbo.[ZNodeOrderProcessingType]
    WHERE 
	 ([OrderProcessingTypeID] = @OrderProcessingTypeID OR @OrderProcessingTypeID is null)
	AND ([Description] = @Description OR @Description is null)
	AND ([ClassID] = @ClassID OR @ClassID is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [OrderProcessingTypeID]
	, [Description]
	, [ClassID]
    FROM
	dbo.[ZNodeOrderProcessingType]
    WHERE 
	 ([OrderProcessingTypeID] = @OrderProcessingTypeID AND @OrderProcessingTypeID is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([ClassID] = @ClassID AND @ClassID is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderProcessingType_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeOrderProcessingType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [OrderProcessingTypeID]
					, [Description]
					, [ClassID]
					from dbo.[ZNodeOrderProcessingType] {0}
				)
				select
				       [OrderProcessingTypeID],
				       [Description],
				       [ClassID]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeOrderProcessingType] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeNote_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeNote table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[NoteID],
					[CaseID],
					[AccountID],
					[NoteTitle],
					[NoteBody],
					[CreateDte],
					[CreateUser]
				FROM
					dbo.[ZNodeNote]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeNote_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeNote table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[NoteID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [NoteID]'
				SET @SQL = @SQL + ', [CaseID]'
				SET @SQL = @SQL + ', [AccountID]'
				SET @SQL = @SQL + ', [NoteTitle]'
				SET @SQL = @SQL + ', [NoteBody]'
				SET @SQL = @SQL + ', [CreateDte]'
				SET @SQL = @SQL + ', [CreateUser]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeNote]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [NoteID],'
				SET @SQL = @SQL + ' [CaseID],'
				SET @SQL = @SQL + ' [AccountID],'
				SET @SQL = @SQL + ' [NoteTitle],'
				SET @SQL = @SQL + ' [NoteBody],'
				SET @SQL = @SQL + ' [CreateDte],'
				SET @SQL = @SQL + ' [CreateUser]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeNote]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeNote_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeNote table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NoteID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CaseID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NoteTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@NoteBody" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDte" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateUser" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeNote]
					(
					[CaseID]
					,[AccountID]
					,[NoteTitle]
					,[NoteBody]
					,[CreateDte]
					,[CreateUser]
					)
				VALUES
					(
					@CaseID
					,@AccountID
					,@NoteTitle
					,@NoteBody
					,@CreateDte
					,@CreateUser
					)
				
				-- Get the identity value
				SET @NoteID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeNote_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeNote table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NoteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CaseID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@NoteTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@NoteBody" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDte" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateUser" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeNote]
				SET
					[CaseID] = @CaseID
					,[AccountID] = @AccountID
					,[NoteTitle] = @NoteTitle
					,[NoteBody] = @NoteBody
					,[CreateDte] = @CreateDte
					,[CreateUser] = @CreateUser
				WHERE
[NoteID] = @NoteID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeNote_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeNote table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NoteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeNote] WITH (ROWLOCK) 
				WHERE
					[NoteID] = @NoteID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeNote_GetByAccountID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeNote table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[NoteID],
					[CaseID],
					[AccountID],
					[NoteTitle],
					[NoteBody],
					[CreateDte],
					[CreateUser]
				FROM
					dbo.[ZNodeNote]
				WHERE
					[AccountID] = @AccountID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeNote_GetByNoteID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeNote table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@NoteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[NoteID],
					[CaseID],
					[AccountID],
					[NoteTitle],
					[NoteBody],
					[CreateDte],
					[CreateUser]
				FROM
					dbo.[ZNodeNote]
				WHERE
					[NoteID] = @NoteID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeNote_GetByCaseID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeNote table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CaseID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[NoteID],
					[CaseID],
					[AccountID],
					[NoteTitle],
					[NoteBody],
					[CreateDte],
					[CreateUser]
				FROM
					dbo.[ZNodeNote]
				WHERE
					[CaseID] = @CaseID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeNote_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeNote table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@NoteID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CaseID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@NoteTitle" type="varchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@NoteBody" type="ntext" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateDte" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateUser" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [NoteID]
	, [CaseID]
	, [AccountID]
	, [NoteTitle]
	, [NoteBody]
	, [CreateDte]
	, [CreateUser]
    FROM
	dbo.[ZNodeNote]
    WHERE 
	 ([NoteID] = @NoteID OR @NoteID is null)
	AND ([CaseID] = @CaseID OR @CaseID is null)
	AND ([AccountID] = @AccountID OR @AccountID is null)
	AND ([NoteTitle] = @NoteTitle OR @NoteTitle is null)
	AND ([CreateDte] = @CreateDte OR @CreateDte is null)
	AND ([CreateUser] = @CreateUser OR @CreateUser is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [NoteID]
	, [CaseID]
	, [AccountID]
	, [NoteTitle]
	, [NoteBody]
	, [CreateDte]
	, [CreateUser]
    FROM
	dbo.[ZNodeNote]
    WHERE 
	 ([NoteID] = @NoteID AND @NoteID is not null)
	OR ([CaseID] = @CaseID AND @CaseID is not null)
	OR ([AccountID] = @AccountID AND @AccountID is not null)
	OR ([NoteTitle] = @NoteTitle AND @NoteTitle is not null)
	OR ([CreateDte] = @CreateDte AND @CreateDte is not null)
	OR ([CreateUser] = @CreateUser AND @CreateUser is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeNote_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeNote table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [NoteID]
					, [CaseID]
					, [AccountID]
					, [NoteTitle]
					, [NoteBody]
					, [CreateDte]
					, [CreateUser]
					from dbo.[ZNodeNote] {0}
				)
				select
				       [NoteID],
				       [CaseID],
				       [AccountID],
				       [NoteTitle],
				       [NoteBody],
				       [CreateDte],
				       [CreateUser]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeNote] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountType_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeDiscountType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[DiscountTypeID],
					[DiscountTypeName]
				FROM
					dbo.[ZNodeDiscountType]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountType_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeDiscountType table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[DiscountTypeID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [DiscountTypeID]'
				SET @SQL = @SQL + ', [DiscountTypeName]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeDiscountType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [DiscountTypeID],'
				SET @SQL = @SQL + ' [DiscountTypeName]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeDiscountType]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountType_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeDiscountType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DiscountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DiscountTypeName" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeDiscountType]
					(
					[DiscountTypeID]
					,[DiscountTypeName]
					)
				VALUES
					(
					@DiscountTypeID
					,@DiscountTypeName
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountType_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeDiscountType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DiscountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalDiscountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DiscountTypeName" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeDiscountType]
				SET
					[DiscountTypeID] = @DiscountTypeID
					,[DiscountTypeName] = @DiscountTypeName
				WHERE
[DiscountTypeID] = @OriginalDiscountTypeID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountType_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeDiscountType table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DiscountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeDiscountType] WITH (ROWLOCK) 
				WHERE
					[DiscountTypeID] = @DiscountTypeID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountType_GetByDiscountTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeDiscountType table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DiscountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DiscountTypeID],
					[DiscountTypeName]
				FROM
					dbo.[ZNodeDiscountType]
				WHERE
					[DiscountTypeID] = @DiscountTypeID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountType_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeDiscountType table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DiscountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DiscountTypeName" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DiscountTypeID]
	, [DiscountTypeName]
    FROM
	dbo.[ZNodeDiscountType]
    WHERE 
	 ([DiscountTypeID] = @DiscountTypeID OR @DiscountTypeID is null)
	AND ([DiscountTypeName] = @DiscountTypeName OR @DiscountTypeName is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DiscountTypeID]
	, [DiscountTypeName]
    FROM
	dbo.[ZNodeDiscountType]
    WHERE 
	 ([DiscountTypeID] = @DiscountTypeID AND @DiscountTypeID is not null)
	OR ([DiscountTypeName] = @DiscountTypeName AND @DiscountTypeName is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountType_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeDiscountType table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [DiscountTypeID]
					, [DiscountTypeName]
					from dbo.[ZNodeDiscountType] {0}
				)
				select
				       [DiscountTypeID],
				       [DiscountTypeName]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeDiscountType] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderState_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeOrderState table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[OrderStateID],
					[OrderStateName]
				FROM
					dbo.[ZNodeOrderState]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderState_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeOrderState table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[OrderStateID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [OrderStateID]'
				SET @SQL = @SQL + ', [OrderStateName]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeOrderState]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [OrderStateID],'
				SET @SQL = @SQL + ' [OrderStateName]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeOrderState]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderState_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeOrderState table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderStateID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OrderStateName" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeOrderState]
					(
					[OrderStateID]
					,[OrderStateName]
					)
				VALUES
					(
					@OrderStateID
					,@OrderStateName
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderState_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeOrderState table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderStateID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalOrderStateID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OrderStateName" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeOrderState]
				SET
					[OrderStateID] = @OrderStateID
					,[OrderStateName] = @OrderStateName
				WHERE
[OrderStateID] = @OriginalOrderStateID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderState_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeOrderState table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderStateID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeOrderState] WITH (ROWLOCK) 
				WHERE
					[OrderStateID] = @OrderStateID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderState_GetByOrderStateID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeOrderState table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderStateID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[OrderStateID],
					[OrderStateName]
				FROM
					dbo.[ZNodeOrderState]
				WHERE
					[OrderStateID] = @OrderStateID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderState_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeOrderState table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderStateID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderStateName" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [OrderStateID]
	, [OrderStateName]
    FROM
	dbo.[ZNodeOrderState]
    WHERE 
	 ([OrderStateID] = @OrderStateID OR @OrderStateID is null)
	AND ([OrderStateName] = @OrderStateName OR @OrderStateName is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [OrderStateID]
	, [OrderStateName]
    FROM
	dbo.[ZNodeOrderState]
    WHERE 
	 ([OrderStateID] = @OrderStateID AND @OrderStateID is not null)
	OR ([OrderStateName] = @OrderStateName AND @OrderStateName is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderState_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeOrderState table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [OrderStateID]
					, [OrderStateName]
					from dbo.[ZNodeOrderState] {0}
				)
				select
				       [OrderStateID],
				       [OrderStateName]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeOrderState] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountTarget_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeDiscountTarget table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[DiscountTargetID],
					[DiscountTargetName]
				FROM
					dbo.[ZNodeDiscountTarget]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountTarget_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeDiscountTarget table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[DiscountTargetID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [DiscountTargetID]'
				SET @SQL = @SQL + ', [DiscountTargetName]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeDiscountTarget]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [DiscountTargetID],'
				SET @SQL = @SQL + ' [DiscountTargetName]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeDiscountTarget]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountTarget_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeDiscountTarget table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DiscountTargetID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DiscountTargetName" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeDiscountTarget]
					(
					[DiscountTargetID]
					,[DiscountTargetName]
					)
				VALUES
					(
					@DiscountTargetID
					,@DiscountTargetName
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountTarget_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeDiscountTarget table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DiscountTargetID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalDiscountTargetID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DiscountTargetName" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeDiscountTarget]
				SET
					[DiscountTargetID] = @DiscountTargetID
					,[DiscountTargetName] = @DiscountTargetName
				WHERE
[DiscountTargetID] = @OriginalDiscountTargetID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountTarget_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeDiscountTarget table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DiscountTargetID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeDiscountTarget] WITH (ROWLOCK) 
				WHERE
					[DiscountTargetID] = @DiscountTargetID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountTarget_GetByDiscountTargetID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeDiscountTarget table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DiscountTargetID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[DiscountTargetID],
					[DiscountTargetName]
				FROM
					dbo.[ZNodeDiscountTarget]
				WHERE
					[DiscountTargetID] = @DiscountTargetID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountTarget_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeDiscountTarget table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@DiscountTargetID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DiscountTargetName" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [DiscountTargetID]
	, [DiscountTargetName]
    FROM
	dbo.[ZNodeDiscountTarget]
    WHERE 
	 ([DiscountTargetID] = @DiscountTargetID OR @DiscountTargetID is null)
	AND ([DiscountTargetName] = @DiscountTargetName OR @DiscountTargetName is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [DiscountTargetID]
	, [DiscountTargetName]
    FROM
	dbo.[ZNodeDiscountTarget]
    WHERE 
	 ([DiscountTargetID] = @DiscountTargetID AND @DiscountTargetID is not null)
	OR ([DiscountTargetName] = @DiscountTargetName AND @DiscountTargetName is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeDiscountTarget_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeDiscountTarget table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [DiscountTargetID]
					, [DiscountTargetName]
					from dbo.[ZNodeDiscountTarget] {0}
				)
				select
				       [DiscountTargetID],
				       [DiscountTargetName]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeDiscountTarget] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeManufacturer_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeManufacturer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ManufacturerID],
					[PortalID],
					[Name],
					[Description],
					[ActiveInd],
					[Custom1],
					[Custom2],
					[Custom3]
				FROM
					dbo.[ZNodeManufacturer]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeManufacturer_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeManufacturer table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ManufacturerID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ManufacturerID]'
				SET @SQL = @SQL + ', [PortalID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [ActiveInd]'
				SET @SQL = @SQL + ', [Custom1]'
				SET @SQL = @SQL + ', [Custom2]'
				SET @SQL = @SQL + ', [Custom3]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeManufacturer]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ManufacturerID],'
				SET @SQL = @SQL + ' [PortalID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [ActiveInd],'
				SET @SQL = @SQL + ' [Custom1],'
				SET @SQL = @SQL + ' [Custom2],'
				SET @SQL = @SQL + ' [Custom3]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeManufacturer]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeManufacturer_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeManufacturer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ManufacturerID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Custom1" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom2" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom3" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeManufacturer]
					(
					[PortalID]
					,[Name]
					,[Description]
					,[ActiveInd]
					,[Custom1]
					,[Custom2]
					,[Custom3]
					)
				VALUES
					(
					@PortalID
					,@Name
					,@Description
					,@ActiveInd
					,@Custom1
					,@Custom2
					,@Custom3
					)
				
				-- Get the identity value
				SET @ManufacturerID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeManufacturer_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeManufacturer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ManufacturerID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Custom1" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom2" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom3" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeManufacturer]
				SET
					[PortalID] = @PortalID
					,[Name] = @Name
					,[Description] = @Description
					,[ActiveInd] = @ActiveInd
					,[Custom1] = @Custom1
					,[Custom2] = @Custom2
					,[Custom3] = @Custom3
				WHERE
[ManufacturerID] = @ManufacturerID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeManufacturer_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeManufacturer table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ManufacturerID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeManufacturer] WITH (ROWLOCK) 
				WHERE
					[ManufacturerID] = @ManufacturerID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeManufacturer_GetByPortalID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeManufacturer table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ManufacturerID],
					[PortalID],
					[Name],
					[Description],
					[ActiveInd],
					[Custom1],
					[Custom2],
					[Custom3]
				FROM
					dbo.[ZNodeManufacturer]
				WHERE
					[PortalID] = @PortalID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeManufacturer_GetByManufacturerID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeManufacturer table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ManufacturerID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ManufacturerID],
					[PortalID],
					[Name],
					[Description],
					[ActiveInd],
					[Custom1],
					[Custom2],
					[Custom3]
				FROM
					dbo.[ZNodeManufacturer]
				WHERE
					[ManufacturerID] = @ManufacturerID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeManufacturer_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeManufacturer table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@ManufacturerID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@ActiveInd" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Custom1" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom2" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom3" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ManufacturerID]
	, [PortalID]
	, [Name]
	, [Description]
	, [ActiveInd]
	, [Custom1]
	, [Custom2]
	, [Custom3]
    FROM
	dbo.[ZNodeManufacturer]
    WHERE 
	 ([ManufacturerID] = @ManufacturerID OR @ManufacturerID is null)
	AND ([PortalID] = @PortalID OR @PortalID is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([ActiveInd] = @ActiveInd OR @ActiveInd is null)
	AND ([Custom1] = @Custom1 OR @Custom1 is null)
	AND ([Custom2] = @Custom2 OR @Custom2 is null)
	AND ([Custom3] = @Custom3 OR @Custom3 is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ManufacturerID]
	, [PortalID]
	, [Name]
	, [Description]
	, [ActiveInd]
	, [Custom1]
	, [Custom2]
	, [Custom3]
    FROM
	dbo.[ZNodeManufacturer]
    WHERE 
	 ([ManufacturerID] = @ManufacturerID AND @ManufacturerID is not null)
	OR ([PortalID] = @PortalID AND @PortalID is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([ActiveInd] = @ActiveInd AND @ActiveInd is not null)
	OR ([Custom1] = @Custom1 AND @Custom1 is not null)
	OR ([Custom2] = @Custom2 AND @Custom2 is not null)
	OR ([Custom3] = @Custom3 AND @Custom3 is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeManufacturer_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeManufacturer table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [ManufacturerID]
					, [PortalID]
					, [Name]
					, [Description]
					, [ActiveInd]
					, [Custom1]
					, [Custom2]
					, [Custom3]
					from dbo.[ZNodeManufacturer] {0}
				)
				select
				       [ManufacturerID],
				       [PortalID],
				       [Name],
				       [Description],
				       [ActiveInd],
				       [Custom1],
				       [Custom2],
				       [Custom3]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeManufacturer] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeGateway_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeGateway table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[GatewayTypeID],
					[GatewayName],
					[WebsiteURL]
				FROM
					dbo.[ZNodeGateway]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeGateway_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeGateway table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[GatewayTypeID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [GatewayTypeID]'
				SET @SQL = @SQL + ', [GatewayName]'
				SET @SQL = @SQL + ', [WebsiteURL]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeGateway]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [GatewayTypeID],'
				SET @SQL = @SQL + ' [GatewayName],'
				SET @SQL = @SQL + ' [WebsiteURL]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeGateway]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeGateway_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeGateway table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GatewayTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GatewayName" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@WebsiteURL" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeGateway]
					(
					[GatewayTypeID]
					,[GatewayName]
					,[WebsiteURL]
					)
				VALUES
					(
					@GatewayTypeID
					,@GatewayName
					,@WebsiteURL
					)
				
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeGateway_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeGateway table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GatewayTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OriginalGatewayTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@GatewayName" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@WebsiteURL" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeGateway]
				SET
					[GatewayTypeID] = @GatewayTypeID
					,[GatewayName] = @GatewayName
					,[WebsiteURL] = @WebsiteURL
				WHERE
[GatewayTypeID] = @OriginalGatewayTypeID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeGateway_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeGateway table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GatewayTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeGateway] WITH (ROWLOCK) 
				WHERE
					[GatewayTypeID] = @GatewayTypeID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeGateway_GetByGatewayTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeGateway table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@GatewayTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[GatewayTypeID],
					[GatewayName],
					[WebsiteURL]
				FROM
					dbo.[ZNodeGateway]
				WHERE
					[GatewayTypeID] = @GatewayTypeID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeGateway_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeGateway table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@GatewayTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@GatewayName" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@WebsiteURL" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [GatewayTypeID]
	, [GatewayName]
	, [WebsiteURL]
    FROM
	dbo.[ZNodeGateway]
    WHERE 
	 ([GatewayTypeID] = @GatewayTypeID OR @GatewayTypeID is null)
	AND ([GatewayName] = @GatewayName OR @GatewayName is null)
	AND ([WebsiteURL] = @WebsiteURL OR @WebsiteURL is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [GatewayTypeID]
	, [GatewayName]
	, [WebsiteURL]
    FROM
	dbo.[ZNodeGateway]
    WHERE 
	 ([GatewayTypeID] = @GatewayTypeID AND @GatewayTypeID is not null)
	OR ([GatewayName] = @GatewayName AND @GatewayName is not null)
	OR ([WebsiteURL] = @WebsiteURL AND @WebsiteURL is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeGateway_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeGateway table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [GatewayTypeID]
					, [GatewayName]
					, [WebsiteURL]
					from dbo.[ZNodeGateway] {0}
				)
				select
				       [GatewayTypeID],
				       [GatewayName],
				       [WebsiteURL]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeGateway] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCoupon_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeCoupon table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CouponID],
					[CouponCode],
					[Discount],
					[DiscountTypeID],
					[DiscountTargetID],
					[StartDate],
					[ExpDate],
					[QuantityAvailable],
					[ProductList],
					[OrderMinimum]
				FROM
					dbo.[ZNodeCoupon]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCoupon_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeCoupon table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CouponID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CouponID]'
				SET @SQL = @SQL + ', [CouponCode]'
				SET @SQL = @SQL + ', [Discount]'
				SET @SQL = @SQL + ', [DiscountTypeID]'
				SET @SQL = @SQL + ', [DiscountTargetID]'
				SET @SQL = @SQL + ', [StartDate]'
				SET @SQL = @SQL + ', [ExpDate]'
				SET @SQL = @SQL + ', [QuantityAvailable]'
				SET @SQL = @SQL + ', [ProductList]'
				SET @SQL = @SQL + ', [OrderMinimum]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeCoupon]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CouponID],'
				SET @SQL = @SQL + ' [CouponCode],'
				SET @SQL = @SQL + ' [Discount],'
				SET @SQL = @SQL + ' [DiscountTypeID],'
				SET @SQL = @SQL + ' [DiscountTargetID],'
				SET @SQL = @SQL + ' [StartDate],'
				SET @SQL = @SQL + ' [ExpDate],'
				SET @SQL = @SQL + ' [QuantityAvailable],'
				SET @SQL = @SQL + ' [ProductList],'
				SET @SQL = @SQL + ' [OrderMinimum]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeCoupon]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCoupon_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeCoupon table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CouponID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CouponCode" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Discount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@DiscountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DiscountTargetID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@StartDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@QuantityAvailable" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductList" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@OrderMinimum" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeCoupon]
					(
					[CouponCode]
					,[Discount]
					,[DiscountTypeID]
					,[DiscountTargetID]
					,[StartDate]
					,[ExpDate]
					,[QuantityAvailable]
					,[ProductList]
					,[OrderMinimum]
					)
				VALUES
					(
					@CouponCode
					,@Discount
					,@DiscountTypeID
					,@DiscountTargetID
					,@StartDate
					,@ExpDate
					,@QuantityAvailable
					,@ProductList
					,@OrderMinimum
					)
				
				-- Get the identity value
				SET @CouponID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCoupon_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeCoupon table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CouponID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CouponCode" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Discount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@DiscountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DiscountTargetID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@StartDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@ExpDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault=""/>
				<parameter name="@QuantityAvailable" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductList" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@OrderMinimum" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeCoupon]
				SET
					[CouponCode] = @CouponCode
					,[Discount] = @Discount
					,[DiscountTypeID] = @DiscountTypeID
					,[DiscountTargetID] = @DiscountTargetID
					,[StartDate] = @StartDate
					,[ExpDate] = @ExpDate
					,[QuantityAvailable] = @QuantityAvailable
					,[ProductList] = @ProductList
					,[OrderMinimum] = @OrderMinimum
				WHERE
[CouponID] = @CouponID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCoupon_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeCoupon table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CouponID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeCoupon] WITH (ROWLOCK) 
				WHERE
					[CouponID] = @CouponID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCoupon_GetByDiscountTargetID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCoupon table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DiscountTargetID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[CouponID],
					[CouponCode],
					[Discount],
					[DiscountTypeID],
					[DiscountTargetID],
					[StartDate],
					[ExpDate],
					[QuantityAvailable],
					[ProductList],
					[OrderMinimum]
				FROM
					dbo.[ZNodeCoupon]
				WHERE
					[DiscountTargetID] = @DiscountTargetID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCoupon_GetByDiscountTypeID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCoupon table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DiscountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[CouponID],
					[CouponCode],
					[Discount],
					[DiscountTypeID],
					[DiscountTargetID],
					[StartDate],
					[ExpDate],
					[QuantityAvailable],
					[ProductList],
					[OrderMinimum]
				FROM
					dbo.[ZNodeCoupon]
				WHERE
					[DiscountTypeID] = @DiscountTypeID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCoupon_GetByCouponID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCoupon table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CouponID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CouponID],
					[CouponCode],
					[Discount],
					[DiscountTypeID],
					[DiscountTargetID],
					[StartDate],
					[ExpDate],
					[QuantityAvailable],
					[ProductList],
					[OrderMinimum]
				FROM
					dbo.[ZNodeCoupon]
				WHERE
					[CouponID] = @CouponID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCoupon_GetByCouponCode" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeCoupon table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CouponCode" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CouponID],
					[CouponCode],
					[Discount],
					[DiscountTypeID],
					[DiscountTargetID],
					[StartDate],
					[ExpDate],
					[QuantityAvailable],
					[ProductList],
					[OrderMinimum]
				FROM
					dbo.[ZNodeCoupon]
				WHERE
					[CouponCode] = @CouponCode
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCoupon_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeCoupon table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CouponID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CouponCode" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Discount" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@DiscountTypeID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DiscountTargetID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@StartDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@ExpDate" type="smalldatetime" direction="Input" size="4" precision="16" scale="0" param="" nulldefault="null"/>
				<parameter name="@QuantityAvailable" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductList" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@OrderMinimum" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CouponID]
	, [CouponCode]
	, [Discount]
	, [DiscountTypeID]
	, [DiscountTargetID]
	, [StartDate]
	, [ExpDate]
	, [QuantityAvailable]
	, [ProductList]
	, [OrderMinimum]
    FROM
	dbo.[ZNodeCoupon]
    WHERE 
	 ([CouponID] = @CouponID OR @CouponID is null)
	AND ([CouponCode] = @CouponCode OR @CouponCode is null)
	AND ([Discount] = @Discount OR @Discount is null)
	AND ([DiscountTypeID] = @DiscountTypeID OR @DiscountTypeID is null)
	AND ([DiscountTargetID] = @DiscountTargetID OR @DiscountTargetID is null)
	AND ([StartDate] = @StartDate OR @StartDate is null)
	AND ([ExpDate] = @ExpDate OR @ExpDate is null)
	AND ([QuantityAvailable] = @QuantityAvailable OR @QuantityAvailable is null)
	AND ([ProductList] = @ProductList OR @ProductList is null)
	AND ([OrderMinimum] = @OrderMinimum OR @OrderMinimum is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CouponID]
	, [CouponCode]
	, [Discount]
	, [DiscountTypeID]
	, [DiscountTargetID]
	, [StartDate]
	, [ExpDate]
	, [QuantityAvailable]
	, [ProductList]
	, [OrderMinimum]
    FROM
	dbo.[ZNodeCoupon]
    WHERE 
	 ([CouponID] = @CouponID AND @CouponID is not null)
	OR ([CouponCode] = @CouponCode AND @CouponCode is not null)
	OR ([Discount] = @Discount AND @Discount is not null)
	OR ([DiscountTypeID] = @DiscountTypeID AND @DiscountTypeID is not null)
	OR ([DiscountTargetID] = @DiscountTargetID AND @DiscountTargetID is not null)
	OR ([StartDate] = @StartDate AND @StartDate is not null)
	OR ([ExpDate] = @ExpDate AND @ExpDate is not null)
	OR ([QuantityAvailable] = @QuantityAvailable AND @QuantityAvailable is not null)
	OR ([ProductList] = @ProductList AND @ProductList is not null)
	OR ([OrderMinimum] = @OrderMinimum AND @OrderMinimum is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeCoupon_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeCoupon table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [CouponID]
					, [CouponCode]
					, [Discount]
					, [DiscountTypeID]
					, [DiscountTargetID]
					, [StartDate]
					, [ExpDate]
					, [QuantityAvailable]
					, [ProductList]
					, [OrderMinimum]
					from dbo.[ZNodeCoupon] {0}
				)
				select
				       [CouponID],
				       [CouponCode],
				       [Discount],
				       [DiscountTypeID],
				       [DiscountTargetID],
				       [StartDate],
				       [ExpDate],
				       [QuantityAvailable],
				       [ProductList],
				       [OrderMinimum]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeCoupon] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderLineItem_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeOrderLineItem table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[OrderLineItemID],
					[OrderID],
					[ShipmentID],
					[ProductNum],
					[Name],
					[Description],
					[Quantity],
					[Price],
					[Weight],
					[PrePromoPrice],
					[Custom1],
					[Custom2],
					[Custom3],
					[SKU],
					[ParentOrderLineItemID]
				FROM
					dbo.[ZNodeOrderLineItem]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderLineItem_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeOrderLineItem table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[OrderLineItemID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [OrderLineItemID]'
				SET @SQL = @SQL + ', [OrderID]'
				SET @SQL = @SQL + ', [ShipmentID]'
				SET @SQL = @SQL + ', [ProductNum]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [Quantity]'
				SET @SQL = @SQL + ', [Price]'
				SET @SQL = @SQL + ', [Weight]'
				SET @SQL = @SQL + ', [PrePromoPrice]'
				SET @SQL = @SQL + ', [Custom1]'
				SET @SQL = @SQL + ', [Custom2]'
				SET @SQL = @SQL + ', [Custom3]'
				SET @SQL = @SQL + ', [SKU]'
				SET @SQL = @SQL + ', [ParentOrderLineItemID]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeOrderLineItem]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [OrderLineItemID],'
				SET @SQL = @SQL + ' [OrderID],'
				SET @SQL = @SQL + ' [ShipmentID],'
				SET @SQL = @SQL + ' [ProductNum],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [Quantity],'
				SET @SQL = @SQL + ' [Price],'
				SET @SQL = @SQL + ' [Weight],'
				SET @SQL = @SQL + ' [PrePromoPrice],'
				SET @SQL = @SQL + ' [Custom1],'
				SET @SQL = @SQL + ' [Custom2],'
				SET @SQL = @SQL + ' [Custom3],'
				SET @SQL = @SQL + ' [SKU],'
				SET @SQL = @SQL + ' [ParentOrderLineItemID]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeOrderLineItem]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderLineItem_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeOrderLineItem table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderLineItemID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OrderID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShipmentID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductNum" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Description" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Quantity" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Price" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@Weight" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@PrePromoPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@Custom1" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom2" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom3" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SKU" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ParentOrderLineItemID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeOrderLineItem]
					(
					[OrderID]
					,[ShipmentID]
					,[ProductNum]
					,[Name]
					,[Description]
					,[Quantity]
					,[Price]
					,[Weight]
					,[PrePromoPrice]
					,[Custom1]
					,[Custom2]
					,[Custom3]
					,[SKU]
					,[ParentOrderLineItemID]
					)
				VALUES
					(
					@OrderID
					,@ShipmentID
					,@ProductNum
					,@Name
					,@Description
					,@Quantity
					,@Price
					,@Weight
					,@PrePromoPrice
					,@Custom1
					,@Custom2
					,@Custom3
					,@SKU
					,@ParentOrderLineItemID
					)
				
				-- Get the identity value
				SET @OrderLineItemID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderLineItem_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeOrderLineItem table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderLineItemID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OrderID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShipmentID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ProductNum" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Description" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Quantity" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@Price" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@Weight" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault=""/>
				<parameter name="@PrePromoPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@Custom1" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom2" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom3" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@SKU" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@ParentOrderLineItemID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeOrderLineItem]
				SET
					[OrderID] = @OrderID
					,[ShipmentID] = @ShipmentID
					,[ProductNum] = @ProductNum
					,[Name] = @Name
					,[Description] = @Description
					,[Quantity] = @Quantity
					,[Price] = @Price
					,[Weight] = @Weight
					,[PrePromoPrice] = @PrePromoPrice
					,[Custom1] = @Custom1
					,[Custom2] = @Custom2
					,[Custom3] = @Custom3
					,[SKU] = @SKU
					,[ParentOrderLineItemID] = @ParentOrderLineItemID
				WHERE
[OrderLineItemID] = @OrderLineItemID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderLineItem_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeOrderLineItem table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderLineItemID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeOrderLineItem] WITH (ROWLOCK) 
				WHERE
					[OrderLineItemID] = @OrderLineItemID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderLineItem_GetByParentOrderLineItemID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeOrderLineItem table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ParentOrderLineItemID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[OrderLineItemID],
					[OrderID],
					[ShipmentID],
					[ProductNum],
					[Name],
					[Description],
					[Quantity],
					[Price],
					[Weight],
					[PrePromoPrice],
					[Custom1],
					[Custom2],
					[Custom3],
					[SKU],
					[ParentOrderLineItemID]
				FROM
					dbo.[ZNodeOrderLineItem]
				WHERE
					[ParentOrderLineItemID] = @ParentOrderLineItemID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderLineItem_GetByOrderID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeOrderLineItem table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[OrderLineItemID],
					[OrderID],
					[ShipmentID],
					[ProductNum],
					[Name],
					[Description],
					[Quantity],
					[Price],
					[Weight],
					[PrePromoPrice],
					[Custom1],
					[Custom2],
					[Custom3],
					[SKU],
					[ParentOrderLineItemID]
				FROM
					dbo.[ZNodeOrderLineItem]
				WHERE
					[OrderID] = @OrderID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderLineItem_GetByOrderLineItemID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeOrderLineItem table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderLineItemID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[OrderLineItemID],
					[OrderID],
					[ShipmentID],
					[ProductNum],
					[Name],
					[Description],
					[Quantity],
					[Price],
					[Weight],
					[PrePromoPrice],
					[Custom1],
					[Custom2],
					[Custom3],
					[SKU],
					[ParentOrderLineItemID]
				FROM
					dbo.[ZNodeOrderLineItem]
				WHERE
					[OrderLineItemID] = @OrderLineItemID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderLineItem_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeOrderLineItem table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderLineItemID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShipmentID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ProductNum" type="varchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Description" type="varchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Quantity" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@Price" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@Weight" type="decimal" direction="Input" size="9" precision="18" scale="2" param="(18, 2)" nulldefault="null"/>
				<parameter name="@PrePromoPrice" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@Custom1" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom2" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom3" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@SKU" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@ParentOrderLineItemID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [OrderLineItemID]
	, [OrderID]
	, [ShipmentID]
	, [ProductNum]
	, [Name]
	, [Description]
	, [Quantity]
	, [Price]
	, [Weight]
	, [PrePromoPrice]
	, [Custom1]
	, [Custom2]
	, [Custom3]
	, [SKU]
	, [ParentOrderLineItemID]
    FROM
	dbo.[ZNodeOrderLineItem]
    WHERE 
	 ([OrderLineItemID] = @OrderLineItemID OR @OrderLineItemID is null)
	AND ([OrderID] = @OrderID OR @OrderID is null)
	AND ([ShipmentID] = @ShipmentID OR @ShipmentID is null)
	AND ([ProductNum] = @ProductNum OR @ProductNum is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([Description] = @Description OR @Description is null)
	AND ([Quantity] = @Quantity OR @Quantity is null)
	AND ([Price] = @Price OR @Price is null)
	AND ([Weight] = @Weight OR @Weight is null)
	AND ([PrePromoPrice] = @PrePromoPrice OR @PrePromoPrice is null)
	AND ([Custom1] = @Custom1 OR @Custom1 is null)
	AND ([Custom2] = @Custom2 OR @Custom2 is null)
	AND ([Custom3] = @Custom3 OR @Custom3 is null)
	AND ([SKU] = @SKU OR @SKU is null)
	AND ([ParentOrderLineItemID] = @ParentOrderLineItemID OR @ParentOrderLineItemID is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [OrderLineItemID]
	, [OrderID]
	, [ShipmentID]
	, [ProductNum]
	, [Name]
	, [Description]
	, [Quantity]
	, [Price]
	, [Weight]
	, [PrePromoPrice]
	, [Custom1]
	, [Custom2]
	, [Custom3]
	, [SKU]
	, [ParentOrderLineItemID]
    FROM
	dbo.[ZNodeOrderLineItem]
    WHERE 
	 ([OrderLineItemID] = @OrderLineItemID AND @OrderLineItemID is not null)
	OR ([OrderID] = @OrderID AND @OrderID is not null)
	OR ([ShipmentID] = @ShipmentID AND @ShipmentID is not null)
	OR ([ProductNum] = @ProductNum AND @ProductNum is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([Quantity] = @Quantity AND @Quantity is not null)
	OR ([Price] = @Price AND @Price is not null)
	OR ([Weight] = @Weight AND @Weight is not null)
	OR ([PrePromoPrice] = @PrePromoPrice AND @PrePromoPrice is not null)
	OR ([Custom1] = @Custom1 AND @Custom1 is not null)
	OR ([Custom2] = @Custom2 AND @Custom2 is not null)
	OR ([Custom3] = @Custom3 AND @Custom3 is not null)
	OR ([SKU] = @SKU AND @SKU is not null)
	OR ([ParentOrderLineItemID] = @ParentOrderLineItemID AND @ParentOrderLineItemID is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrderLineItem_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeOrderLineItem table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [OrderLineItemID]
					, [OrderID]
					, [ShipmentID]
					, [ProductNum]
					, [Name]
					, [Description]
					, [Quantity]
					, [Price]
					, [Weight]
					, [PrePromoPrice]
					, [Custom1]
					, [Custom2]
					, [Custom3]
					, [SKU]
					, [ParentOrderLineItemID]
					from dbo.[ZNodeOrderLineItem] {0}
				)
				select
				       [OrderLineItemID],
				       [OrderID],
				       [ShipmentID],
				       [ProductNum],
				       [Name],
				       [Description],
				       [Quantity],
				       [Price],
				       [Weight],
				       [PrePromoPrice],
				       [Custom1],
				       [Custom2],
				       [Custom3],
				       [SKU],
				       [ParentOrderLineItemID]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeOrderLineItem] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeHighlight_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeHighlight table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[HighlightID],
					[PortalID],
					[ImageFile],
					[Name],
					[Description],
					[DisplayPopup]
				FROM
					dbo.[ZNodeHighlight]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeHighlight_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeHighlight table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[HighlightID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [HighlightID]'
				SET @SQL = @SQL + ', [PortalID]'
				SET @SQL = @SQL + ', [ImageFile]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [DisplayPopup]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeHighlight]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [HighlightID],'
				SET @SQL = @SQL + ' [PortalID],'
				SET @SQL = @SQL + ' [ImageFile],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [DisplayPopup]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeHighlight]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeHighlight_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeHighlight table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@HighlightID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageFile" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayPopup" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeHighlight]
					(
					[PortalID]
					,[ImageFile]
					,[Name]
					,[Description]
					,[DisplayPopup]
					)
				VALUES
					(
					@PortalID
					,@ImageFile
					,@Name
					,@Description
					,@DisplayPopup
					)
				
				-- Get the identity value
				SET @HighlightID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeHighlight_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeHighlight table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@HighlightID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ImageFile" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault=""/>
				<parameter name="@DisplayPopup" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeHighlight]
				SET
					[PortalID] = @PortalID
					,[ImageFile] = @ImageFile
					,[Name] = @Name
					,[Description] = @Description
					,[DisplayPopup] = @DisplayPopup
				WHERE
[HighlightID] = @HighlightID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeHighlight_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeHighlight table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@HighlightID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeHighlight] WITH (ROWLOCK) 
				WHERE
					[HighlightID] = @HighlightID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeHighlight_GetByHighlightID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeHighlight table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@HighlightID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[HighlightID],
					[PortalID],
					[ImageFile],
					[Name],
					[Description],
					[DisplayPopup]
				FROM
					dbo.[ZNodeHighlight]
				WHERE
					[HighlightID] = @HighlightID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeHighlight_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeHighlight table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@HighlightID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PortalID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ImageFile" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Name" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Description" type="text" direction="Input" size="16" precision="0" scale="0" param="" nulldefault="null"/>
				<parameter name="@DisplayPopup" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [HighlightID]
	, [PortalID]
	, [ImageFile]
	, [Name]
	, [Description]
	, [DisplayPopup]
    FROM
	dbo.[ZNodeHighlight]
    WHERE 
	 ([HighlightID] = @HighlightID OR @HighlightID is null)
	AND ([PortalID] = @PortalID OR @PortalID is null)
	AND ([ImageFile] = @ImageFile OR @ImageFile is null)
	AND ([Name] = @Name OR @Name is null)
	AND ([DisplayPopup] = @DisplayPopup OR @DisplayPopup is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [HighlightID]
	, [PortalID]
	, [ImageFile]
	, [Name]
	, [Description]
	, [DisplayPopup]
    FROM
	dbo.[ZNodeHighlight]
    WHERE 
	 ([HighlightID] = @HighlightID AND @HighlightID is not null)
	OR ([PortalID] = @PortalID AND @PortalID is not null)
	OR ([ImageFile] = @ImageFile AND @ImageFile is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([DisplayPopup] = @DisplayPopup AND @DisplayPopup is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeHighlight_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeHighlight table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [HighlightID]
					, [PortalID]
					, [ImageFile]
					, [Name]
					, [Description]
					, [DisplayPopup]
					from dbo.[ZNodeHighlight] {0}
				)
				select
				       [HighlightID],
				       [PortalID],
				       [ImageFile],
				       [Name],
				       [Description],
				       [DisplayPopup]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeHighlight] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrder_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets all records from the ZNodeOrder table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[OrderID],
					[PortalId],
					[AccountID],
					[OrderStateID],
					[ShippingID],
					[PaymentTypeId],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountry],
					[ShipPhoneNumber],
					[ShipEmailID],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountry],
					[BillingPhoneNumber],
					[BillingEmailId],
					[CardTransactionID],
					[CardTypeId],
					[CardEndsIn],
					[TaxCost],
					[ShippingCost],
					[SubTotal],
					[DiscountAmount],
					[Total],
					[CouponID],
					[OrderDate],
					[CreditCardNumber],
					[CreditCardExp],
					[CreditCardCVV],
					[Custom1],
					[Custom2],
					[AdditionalInstructions],
					[Custom3]
				FROM
					dbo.[ZNodeOrder]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrder_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeOrder table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy is null or LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[OrderID]'
				END

				-- SQL Server 2005 Paging
				declare @SQL as nvarchar(4000)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [OrderID]'
				SET @SQL = @SQL + ', [PortalId]'
				SET @SQL = @SQL + ', [AccountID]'
				SET @SQL = @SQL + ', [OrderStateID]'
				SET @SQL = @SQL + ', [ShippingID]'
				SET @SQL = @SQL + ', [PaymentTypeId]'
				SET @SQL = @SQL + ', [ShipFirstName]'
				SET @SQL = @SQL + ', [ShipLastName]'
				SET @SQL = @SQL + ', [ShipCompanyName]'
				SET @SQL = @SQL + ', [ShipStreet]'
				SET @SQL = @SQL + ', [ShipStreet1]'
				SET @SQL = @SQL + ', [ShipCity]'
				SET @SQL = @SQL + ', [ShipStateCode]'
				SET @SQL = @SQL + ', [ShipPostalCode]'
				SET @SQL = @SQL + ', [ShipCountry]'
				SET @SQL = @SQL + ', [ShipPhoneNumber]'
				SET @SQL = @SQL + ', [ShipEmailID]'
				SET @SQL = @SQL + ', [BillingFirstName]'
				SET @SQL = @SQL + ', [BillingLastName]'
				SET @SQL = @SQL + ', [BillingCompanyName]'
				SET @SQL = @SQL + ', [BillingStreet]'
				SET @SQL = @SQL + ', [BillingStreet1]'
				SET @SQL = @SQL + ', [BillingCity]'
				SET @SQL = @SQL + ', [BillingStateCode]'
				SET @SQL = @SQL + ', [BillingPostalCode]'
				SET @SQL = @SQL + ', [BillingCountry]'
				SET @SQL = @SQL + ', [BillingPhoneNumber]'
				SET @SQL = @SQL + ', [BillingEmailId]'
				SET @SQL = @SQL + ', [CardTransactionID]'
				SET @SQL = @SQL + ', [CardTypeId]'
				SET @SQL = @SQL + ', [CardEndsIn]'
				SET @SQL = @SQL + ', [TaxCost]'
				SET @SQL = @SQL + ', [ShippingCost]'
				SET @SQL = @SQL + ', [SubTotal]'
				SET @SQL = @SQL + ', [DiscountAmount]'
				SET @SQL = @SQL + ', [Total]'
				SET @SQL = @SQL + ', [CouponID]'
				SET @SQL = @SQL + ', [OrderDate]'
				SET @SQL = @SQL + ', [CreditCardNumber]'
				SET @SQL = @SQL + ', [CreditCardExp]'
				SET @SQL = @SQL + ', [CreditCardCVV]'
				SET @SQL = @SQL + ', [Custom1]'
				SET @SQL = @SQL + ', [Custom2]'
				SET @SQL = @SQL + ', [AdditionalInstructions]'
				SET @SQL = @SQL + ', [Custom3]'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeOrder]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [OrderID],'
				SET @SQL = @SQL + ' [PortalId],'
				SET @SQL = @SQL + ' [AccountID],'
				SET @SQL = @SQL + ' [OrderStateID],'
				SET @SQL = @SQL + ' [ShippingID],'
				SET @SQL = @SQL + ' [PaymentTypeId],'
				SET @SQL = @SQL + ' [ShipFirstName],'
				SET @SQL = @SQL + ' [ShipLastName],'
				SET @SQL = @SQL + ' [ShipCompanyName],'
				SET @SQL = @SQL + ' [ShipStreet],'
				SET @SQL = @SQL + ' [ShipStreet1],'
				SET @SQL = @SQL + ' [ShipCity],'
				SET @SQL = @SQL + ' [ShipStateCode],'
				SET @SQL = @SQL + ' [ShipPostalCode],'
				SET @SQL = @SQL + ' [ShipCountry],'
				SET @SQL = @SQL + ' [ShipPhoneNumber],'
				SET @SQL = @SQL + ' [ShipEmailID],'
				SET @SQL = @SQL + ' [BillingFirstName],'
				SET @SQL = @SQL + ' [BillingLastName],'
				SET @SQL = @SQL + ' [BillingCompanyName],'
				SET @SQL = @SQL + ' [BillingStreet],'
				SET @SQL = @SQL + ' [BillingStreet1],'
				SET @SQL = @SQL + ' [BillingCity],'
				SET @SQL = @SQL + ' [BillingStateCode],'
				SET @SQL = @SQL + ' [BillingPostalCode],'
				SET @SQL = @SQL + ' [BillingCountry],'
				SET @SQL = @SQL + ' [BillingPhoneNumber],'
				SET @SQL = @SQL + ' [BillingEmailId],'
				SET @SQL = @SQL + ' [CardTransactionID],'
				SET @SQL = @SQL + ' [CardTypeId],'
				SET @SQL = @SQL + ' [CardEndsIn],'
				SET @SQL = @SQL + ' [TaxCost],'
				SET @SQL = @SQL + ' [ShippingCost],'
				SET @SQL = @SQL + ' [SubTotal],'
				SET @SQL = @SQL + ' [DiscountAmount],'
				SET @SQL = @SQL + ' [Total],'
				SET @SQL = @SQL + ' [CouponID],'
				SET @SQL = @SQL + ' [OrderDate],'
				SET @SQL = @SQL + ' [CreditCardNumber],'
				SET @SQL = @SQL + ' [CreditCardExp],'
				SET @SQL = @SQL + ' [CreditCardCVV],'
				SET @SQL = @SQL + ' [Custom1],'
				SET @SQL = @SQL + ' [Custom2],'
				SET @SQL = @SQL + ' [AdditionalInstructions],'
				SET @SQL = @SQL + ' [Custom3]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + convert(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + convert(nvarchar, @PageUpperBound)
				END
				exec sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM dbo.[ZNodeOrder]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrder_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Inserts a record into the ZNodeOrder table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OrderStateID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShippingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PaymentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShipFirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipLastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipCompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipStreet" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipStreet1" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipCity" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@ShipPostalCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@ShipCountry" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@ShipPhoneNumber" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipEmailID" type="varchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@BillingFirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingLastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingCompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingStreet" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingStreet1" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingCity" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@BillingPostalCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@BillingCountry" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@BillingPhoneNumber" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingEmailId" type="varchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@CardTransactionID" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CardTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CardEndsIn" type="varchar" direction="Input" size="4" precision="0" scale="0" param="(4)" nulldefault=""/>
				<parameter name="@TaxCost" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault=""/>
				<parameter name="@ShippingCost" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault=""/>
				<parameter name="@SubTotal" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@DiscountAmount" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@Total" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@CouponID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OrderDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreditCardNumber" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreditCardExp" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreditCardCVV" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom1" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom2" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@AdditionalInstructions" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom3" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO dbo.[ZNodeOrder]
					(
					[PortalId]
					,[AccountID]
					,[OrderStateID]
					,[ShippingID]
					,[PaymentTypeId]
					,[ShipFirstName]
					,[ShipLastName]
					,[ShipCompanyName]
					,[ShipStreet]
					,[ShipStreet1]
					,[ShipCity]
					,[ShipStateCode]
					,[ShipPostalCode]
					,[ShipCountry]
					,[ShipPhoneNumber]
					,[ShipEmailID]
					,[BillingFirstName]
					,[BillingLastName]
					,[BillingCompanyName]
					,[BillingStreet]
					,[BillingStreet1]
					,[BillingCity]
					,[BillingStateCode]
					,[BillingPostalCode]
					,[BillingCountry]
					,[BillingPhoneNumber]
					,[BillingEmailId]
					,[CardTransactionID]
					,[CardTypeId]
					,[CardEndsIn]
					,[TaxCost]
					,[ShippingCost]
					,[SubTotal]
					,[DiscountAmount]
					,[Total]
					,[CouponID]
					,[OrderDate]
					,[CreditCardNumber]
					,[CreditCardExp]
					,[CreditCardCVV]
					,[Custom1]
					,[Custom2]
					,[AdditionalInstructions]
					,[Custom3]
					)
				VALUES
					(
					@PortalId
					,@AccountID
					,@OrderStateID
					,@ShippingID
					,@PaymentTypeId
					,@ShipFirstName
					,@ShipLastName
					,@ShipCompanyName
					,@ShipStreet
					,@ShipStreet1
					,@ShipCity
					,@ShipStateCode
					,@ShipPostalCode
					,@ShipCountry
					,@ShipPhoneNumber
					,@ShipEmailID
					,@BillingFirstName
					,@BillingLastName
					,@BillingCompanyName
					,@BillingStreet
					,@BillingStreet1
					,@BillingCity
					,@BillingStateCode
					,@BillingPostalCode
					,@BillingCountry
					,@BillingPhoneNumber
					,@BillingEmailId
					,@CardTransactionID
					,@CardTypeId
					,@CardEndsIn
					,@TaxCost
					,@ShippingCost
					,@SubTotal
					,@DiscountAmount
					,@Total
					,@CouponID
					,@OrderDate
					,@CreditCardNumber
					,@CreditCardExp
					,@CreditCardCVV
					,@Custom1
					,@Custom2
					,@AdditionalInstructions
					,@Custom3
					)
				
				-- Get the identity value
				SET @OrderID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrder_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Updates a record in the ZNodeOrder table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PortalId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OrderStateID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShippingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PaymentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ShipFirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipLastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipCompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipStreet" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipStreet1" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipCity" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@ShipPostalCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@ShipCountry" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@ShipPhoneNumber" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@ShipEmailID" type="varchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@BillingFirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingLastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingCompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingStreet" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingStreet1" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingCity" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@BillingPostalCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@BillingCountry" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault=""/>
				<parameter name="@BillingPhoneNumber" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@BillingEmailId" type="varchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@CardTransactionID" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CardTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@CardEndsIn" type="varchar" direction="Input" size="4" precision="0" scale="0" param="(4)" nulldefault=""/>
				<parameter name="@TaxCost" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault=""/>
				<parameter name="@ShippingCost" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault=""/>
				<parameter name="@SubTotal" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@DiscountAmount" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@Total" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault=""/>
				<parameter name="@CouponID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@OrderDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreditCardNumber" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreditCardExp" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@CreditCardCVV" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom1" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom2" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@AdditionalInstructions" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
				<parameter name="@Custom3" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					dbo.[ZNodeOrder]
				SET
					[PortalId] = @PortalId
					,[AccountID] = @AccountID
					,[OrderStateID] = @OrderStateID
					,[ShippingID] = @ShippingID
					,[PaymentTypeId] = @PaymentTypeId
					,[ShipFirstName] = @ShipFirstName
					,[ShipLastName] = @ShipLastName
					,[ShipCompanyName] = @ShipCompanyName
					,[ShipStreet] = @ShipStreet
					,[ShipStreet1] = @ShipStreet1
					,[ShipCity] = @ShipCity
					,[ShipStateCode] = @ShipStateCode
					,[ShipPostalCode] = @ShipPostalCode
					,[ShipCountry] = @ShipCountry
					,[ShipPhoneNumber] = @ShipPhoneNumber
					,[ShipEmailID] = @ShipEmailID
					,[BillingFirstName] = @BillingFirstName
					,[BillingLastName] = @BillingLastName
					,[BillingCompanyName] = @BillingCompanyName
					,[BillingStreet] = @BillingStreet
					,[BillingStreet1] = @BillingStreet1
					,[BillingCity] = @BillingCity
					,[BillingStateCode] = @BillingStateCode
					,[BillingPostalCode] = @BillingPostalCode
					,[BillingCountry] = @BillingCountry
					,[BillingPhoneNumber] = @BillingPhoneNumber
					,[BillingEmailId] = @BillingEmailId
					,[CardTransactionID] = @CardTransactionID
					,[CardTypeId] = @CardTypeId
					,[CardEndsIn] = @CardEndsIn
					,[TaxCost] = @TaxCost
					,[ShippingCost] = @ShippingCost
					,[SubTotal] = @SubTotal
					,[DiscountAmount] = @DiscountAmount
					,[Total] = @Total
					,[CouponID] = @CouponID
					,[OrderDate] = @OrderDate
					,[CreditCardNumber] = @CreditCardNumber
					,[CreditCardExp] = @CreditCardExp
					,[CreditCardCVV] = @CreditCardCVV
					,[Custom1] = @Custom1
					,[Custom2] = @Custom2
					,[AdditionalInstructions] = @AdditionalInstructions
					,[Custom3] = @Custom3
				WHERE
[OrderID] = @OrderID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrder_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Deletes a record in the ZNodeOrder table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM dbo.[ZNodeOrder] WITH (ROWLOCK) 
				WHERE
					[OrderID] = @OrderID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrder_GetByPortalId" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeOrder table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PortalId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[OrderID],
					[PortalId],
					[AccountID],
					[OrderStateID],
					[ShippingID],
					[PaymentTypeId],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountry],
					[ShipPhoneNumber],
					[ShipEmailID],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountry],
					[BillingPhoneNumber],
					[BillingEmailId],
					[CardTransactionID],
					[CardTypeId],
					[CardEndsIn],
					[TaxCost],
					[ShippingCost],
					[SubTotal],
					[DiscountAmount],
					[Total],
					[CouponID],
					[OrderDate],
					[CreditCardNumber],
					[CreditCardExp],
					[CreditCardCVV],
					[Custom1],
					[Custom2],
					[AdditionalInstructions],
					[Custom3]
				FROM
					dbo.[ZNodeOrder]
				WHERE
					[PortalId] = @PortalId
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrder_GetByShippingID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeOrder table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ShippingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[OrderID],
					[PortalId],
					[AccountID],
					[OrderStateID],
					[ShippingID],
					[PaymentTypeId],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountry],
					[ShipPhoneNumber],
					[ShipEmailID],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountry],
					[BillingPhoneNumber],
					[BillingEmailId],
					[CardTransactionID],
					[CardTypeId],
					[CardEndsIn],
					[TaxCost],
					[ShippingCost],
					[SubTotal],
					[DiscountAmount],
					[Total],
					[CouponID],
					[OrderDate],
					[CreditCardNumber],
					[CreditCardExp],
					[CreditCardCVV],
					[Custom1],
					[Custom2],
					[AdditionalInstructions],
					[Custom3]
				FROM
					dbo.[ZNodeOrder]
				WHERE
					[ShippingID] = @ShippingID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrder_GetByCouponID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeOrder table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@CouponID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[OrderID],
					[PortalId],
					[AccountID],
					[OrderStateID],
					[ShippingID],
					[PaymentTypeId],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountry],
					[ShipPhoneNumber],
					[ShipEmailID],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountry],
					[BillingPhoneNumber],
					[BillingEmailId],
					[CardTransactionID],
					[CardTypeId],
					[CardEndsIn],
					[TaxCost],
					[ShippingCost],
					[SubTotal],
					[DiscountAmount],
					[Total],
					[CouponID],
					[OrderDate],
					[CreditCardNumber],
					[CreditCardExp],
					[CreditCardCVV],
					[Custom1],
					[Custom2],
					[AdditionalInstructions],
					[Custom3]
				FROM
					dbo.[ZNodeOrder]
				WHERE
					[CouponID] = @CouponID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrder_GetByOrderStateID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeOrder table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderStateID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[OrderID],
					[PortalId],
					[AccountID],
					[OrderStateID],
					[ShippingID],
					[PaymentTypeId],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountry],
					[ShipPhoneNumber],
					[ShipEmailID],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountry],
					[BillingPhoneNumber],
					[BillingEmailId],
					[CardTransactionID],
					[CardTypeId],
					[CardEndsIn],
					[TaxCost],
					[ShippingCost],
					[SubTotal],
					[DiscountAmount],
					[Total],
					[CouponID],
					[OrderDate],
					[CreditCardNumber],
					[CreditCardExp],
					[CreditCardCVV],
					[Custom1],
					[Custom2],
					[AdditionalInstructions],
					[Custom3]
				FROM
					dbo.[ZNodeOrder]
				WHERE
					[OrderStateID] = @OrderStateID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrder_GetByOrderID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeOrder table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@OrderID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[OrderID],
					[PortalId],
					[AccountID],
					[OrderStateID],
					[ShippingID],
					[PaymentTypeId],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountry],
					[ShipPhoneNumber],
					[ShipEmailID],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountry],
					[BillingPhoneNumber],
					[BillingEmailId],
					[CardTransactionID],
					[CardTypeId],
					[CardEndsIn],
					[TaxCost],
					[ShippingCost],
					[SubTotal],
					[DiscountAmount],
					[Total],
					[CouponID],
					[OrderDate],
					[CreditCardNumber],
					[CreditCardExp],
					[CreditCardCVV],
					[Custom1],
					[Custom2],
					[AdditionalInstructions],
					[Custom3]
				FROM
					dbo.[ZNodeOrder]
				WHERE
					[OrderID] = @OrderID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrder_GetByAccountID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Select records from the ZNodeOrder table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[OrderID],
					[PortalId],
					[AccountID],
					[OrderStateID],
					[ShippingID],
					[PaymentTypeId],
					[ShipFirstName],
					[ShipLastName],
					[ShipCompanyName],
					[ShipStreet],
					[ShipStreet1],
					[ShipCity],
					[ShipStateCode],
					[ShipPostalCode],
					[ShipCountry],
					[ShipPhoneNumber],
					[ShipEmailID],
					[BillingFirstName],
					[BillingLastName],
					[BillingCompanyName],
					[BillingStreet],
					[BillingStreet1],
					[BillingCity],
					[BillingStateCode],
					[BillingPostalCode],
					[BillingCountry],
					[BillingPhoneNumber],
					[BillingEmailId],
					[CardTransactionID],
					[CardTypeId],
					[CardEndsIn],
					[TaxCost],
					[ShippingCost],
					[SubTotal],
					[DiscountAmount],
					[Total],
					[CouponID],
					[OrderDate],
					[CreditCardNumber],
					[CreditCardExp],
					[CreditCardCVV],
					[Custom1],
					[Custom2],
					[AdditionalInstructions],
					[Custom3]
				FROM
					dbo.[ZNodeOrder]
				WHERE
					[AccountID] = @AccountID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrder_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Finds records in the ZNodeOrder table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PortalId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AccountID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderStateID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShippingID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PaymentTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ShipFirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipLastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipCompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipStreet" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipStreet1" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipCity" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@ShipPostalCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@ShipCountry" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@ShipPhoneNumber" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@ShipEmailID" type="varchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@BillingFirstName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BillingLastName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BillingCompanyName" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BillingStreet" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BillingStreet1" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BillingCity" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BillingStateCode" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@BillingPostalCode" type="varchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@BillingCountry" type="varchar" direction="Input" size="2" precision="0" scale="0" param="(2)" nulldefault="null"/>
				<parameter name="@BillingPhoneNumber" type="varchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@BillingEmailId" type="varchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@CardTransactionID" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CardTypeId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@CardEndsIn" type="varchar" direction="Input" size="4" precision="0" scale="0" param="(4)" nulldefault="null"/>
				<parameter name="@TaxCost" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault="null"/>
				<parameter name="@ShippingCost" type="smallmoney" direction="Input" size="4" precision="10" scale="4" param="" nulldefault="null"/>
				<parameter name="@SubTotal" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@DiscountAmount" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@Total" type="money" direction="Input" size="8" precision="19" scale="4" param="" nulldefault="null"/>
				<parameter name="@CouponID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@OrderDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreditCardNumber" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CreditCardExp" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@CreditCardCVV" type="varchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom1" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom2" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@AdditionalInstructions" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
				<parameter name="@Custom3" type="nvarchar" direction="Input" size="-1" precision="0" scale="0" param="(MAX)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [OrderID]
	, [PortalId]
	, [AccountID]
	, [OrderStateID]
	, [ShippingID]
	, [PaymentTypeId]
	, [ShipFirstName]
	, [ShipLastName]
	, [ShipCompanyName]
	, [ShipStreet]
	, [ShipStreet1]
	, [ShipCity]
	, [ShipStateCode]
	, [ShipPostalCode]
	, [ShipCountry]
	, [ShipPhoneNumber]
	, [ShipEmailID]
	, [BillingFirstName]
	, [BillingLastName]
	, [BillingCompanyName]
	, [BillingStreet]
	, [BillingStreet1]
	, [BillingCity]
	, [BillingStateCode]
	, [BillingPostalCode]
	, [BillingCountry]
	, [BillingPhoneNumber]
	, [BillingEmailId]
	, [CardTransactionID]
	, [CardTypeId]
	, [CardEndsIn]
	, [TaxCost]
	, [ShippingCost]
	, [SubTotal]
	, [DiscountAmount]
	, [Total]
	, [CouponID]
	, [OrderDate]
	, [CreditCardNumber]
	, [CreditCardExp]
	, [CreditCardCVV]
	, [Custom1]
	, [Custom2]
	, [AdditionalInstructions]
	, [Custom3]
    FROM
	dbo.[ZNodeOrder]
    WHERE 
	 ([OrderID] = @OrderID OR @OrderID is null)
	AND ([PortalId] = @PortalId OR @PortalId is null)
	AND ([AccountID] = @AccountID OR @AccountID is null)
	AND ([OrderStateID] = @OrderStateID OR @OrderStateID is null)
	AND ([ShippingID] = @ShippingID OR @ShippingID is null)
	AND ([PaymentTypeId] = @PaymentTypeId OR @PaymentTypeId is null)
	AND ([ShipFirstName] = @ShipFirstName OR @ShipFirstName is null)
	AND ([ShipLastName] = @ShipLastName OR @ShipLastName is null)
	AND ([ShipCompanyName] = @ShipCompanyName OR @ShipCompanyName is null)
	AND ([ShipStreet] = @ShipStreet OR @ShipStreet is null)
	AND ([ShipStreet1] = @ShipStreet1 OR @ShipStreet1 is null)
	AND ([ShipCity] = @ShipCity OR @ShipCity is null)
	AND ([ShipStateCode] = @ShipStateCode OR @ShipStateCode is null)
	AND ([ShipPostalCode] = @ShipPostalCode OR @ShipPostalCode is null)
	AND ([ShipCountry] = @ShipCountry OR @ShipCountry is null)
	AND ([ShipPhoneNumber] = @ShipPhoneNumber OR @ShipPhoneNumber is null)
	AND ([ShipEmailID] = @ShipEmailID OR @ShipEmailID is null)
	AND ([BillingFirstName] = @BillingFirstName OR @BillingFirstName is null)
	AND ([BillingLastName] = @BillingLastName OR @BillingLastName is null)
	AND ([BillingCompanyName] = @BillingCompanyName OR @BillingCompanyName is null)
	AND ([BillingStreet] = @BillingStreet OR @BillingStreet is null)
	AND ([BillingStreet1] = @BillingStreet1 OR @BillingStreet1 is null)
	AND ([BillingCity] = @BillingCity OR @BillingCity is null)
	AND ([BillingStateCode] = @BillingStateCode OR @BillingStateCode is null)
	AND ([BillingPostalCode] = @BillingPostalCode OR @BillingPostalCode is null)
	AND ([BillingCountry] = @BillingCountry OR @BillingCountry is null)
	AND ([BillingPhoneNumber] = @BillingPhoneNumber OR @BillingPhoneNumber is null)
	AND ([BillingEmailId] = @BillingEmailId OR @BillingEmailId is null)
	AND ([CardTransactionID] = @CardTransactionID OR @CardTransactionID is null)
	AND ([CardTypeId] = @CardTypeId OR @CardTypeId is null)
	AND ([CardEndsIn] = @CardEndsIn OR @CardEndsIn is null)
	AND ([TaxCost] = @TaxCost OR @TaxCost is null)
	AND ([ShippingCost] = @ShippingCost OR @ShippingCost is null)
	AND ([SubTotal] = @SubTotal OR @SubTotal is null)
	AND ([DiscountAmount] = @DiscountAmount OR @DiscountAmount is null)
	AND ([Total] = @Total OR @Total is null)
	AND ([CouponID] = @CouponID OR @CouponID is null)
	AND ([OrderDate] = @OrderDate OR @OrderDate is null)
	AND ([CreditCardNumber] = @CreditCardNumber OR @CreditCardNumber is null)
	AND ([CreditCardExp] = @CreditCardExp OR @CreditCardExp is null)
	AND ([CreditCardCVV] = @CreditCardCVV OR @CreditCardCVV is null)
	AND ([Custom1] = @Custom1 OR @Custom1 is null)
	AND ([Custom2] = @Custom2 OR @Custom2 is null)
	AND ([AdditionalInstructions] = @AdditionalInstructions OR @AdditionalInstructions is null)
	AND ([Custom3] = @Custom3 OR @Custom3 is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [OrderID]
	, [PortalId]
	, [AccountID]
	, [OrderStateID]
	, [ShippingID]
	, [PaymentTypeId]
	, [ShipFirstName]
	, [ShipLastName]
	, [ShipCompanyName]
	, [ShipStreet]
	, [ShipStreet1]
	, [ShipCity]
	, [ShipStateCode]
	, [ShipPostalCode]
	, [ShipCountry]
	, [ShipPhoneNumber]
	, [ShipEmailID]
	, [BillingFirstName]
	, [BillingLastName]
	, [BillingCompanyName]
	, [BillingStreet]
	, [BillingStreet1]
	, [BillingCity]
	, [BillingStateCode]
	, [BillingPostalCode]
	, [BillingCountry]
	, [BillingPhoneNumber]
	, [BillingEmailId]
	, [CardTransactionID]
	, [CardTypeId]
	, [CardEndsIn]
	, [TaxCost]
	, [ShippingCost]
	, [SubTotal]
	, [DiscountAmount]
	, [Total]
	, [CouponID]
	, [OrderDate]
	, [CreditCardNumber]
	, [CreditCardExp]
	, [CreditCardCVV]
	, [Custom1]
	, [Custom2]
	, [AdditionalInstructions]
	, [Custom3]
    FROM
	dbo.[ZNodeOrder]
    WHERE 
	 ([OrderID] = @OrderID AND @OrderID is not null)
	OR ([PortalId] = @PortalId AND @PortalId is not null)
	OR ([AccountID] = @AccountID AND @AccountID is not null)
	OR ([OrderStateID] = @OrderStateID AND @OrderStateID is not null)
	OR ([ShippingID] = @ShippingID AND @ShippingID is not null)
	OR ([PaymentTypeId] = @PaymentTypeId AND @PaymentTypeId is not null)
	OR ([ShipFirstName] = @ShipFirstName AND @ShipFirstName is not null)
	OR ([ShipLastName] = @ShipLastName AND @ShipLastName is not null)
	OR ([ShipCompanyName] = @ShipCompanyName AND @ShipCompanyName is not null)
	OR ([ShipStreet] = @ShipStreet AND @ShipStreet is not null)
	OR ([ShipStreet1] = @ShipStreet1 AND @ShipStreet1 is not null)
	OR ([ShipCity] = @ShipCity AND @ShipCity is not null)
	OR ([ShipStateCode] = @ShipStateCode AND @ShipStateCode is not null)
	OR ([ShipPostalCode] = @ShipPostalCode AND @ShipPostalCode is not null)
	OR ([ShipCountry] = @ShipCountry AND @ShipCountry is not null)
	OR ([ShipPhoneNumber] = @ShipPhoneNumber AND @ShipPhoneNumber is not null)
	OR ([ShipEmailID] = @ShipEmailID AND @ShipEmailID is not null)
	OR ([BillingFirstName] = @BillingFirstName AND @BillingFirstName is not null)
	OR ([BillingLastName] = @BillingLastName AND @BillingLastName is not null)
	OR ([BillingCompanyName] = @BillingCompanyName AND @BillingCompanyName is not null)
	OR ([BillingStreet] = @BillingStreet AND @BillingStreet is not null)
	OR ([BillingStreet1] = @BillingStreet1 AND @BillingStreet1 is not null)
	OR ([BillingCity] = @BillingCity AND @BillingCity is not null)
	OR ([BillingStateCode] = @BillingStateCode AND @BillingStateCode is not null)
	OR ([BillingPostalCode] = @BillingPostalCode AND @BillingPostalCode is not null)
	OR ([BillingCountry] = @BillingCountry AND @BillingCountry is not null)
	OR ([BillingPhoneNumber] = @BillingPhoneNumber AND @BillingPhoneNumber is not null)
	OR ([BillingEmailId] = @BillingEmailId AND @BillingEmailId is not null)
	OR ([CardTransactionID] = @CardTransactionID AND @CardTransactionID is not null)
	OR ([CardTypeId] = @CardTypeId AND @CardTypeId is not null)
	OR ([CardEndsIn] = @CardEndsIn AND @CardEndsIn is not null)
	OR ([TaxCost] = @TaxCost AND @TaxCost is not null)
	OR ([ShippingCost] = @ShippingCost AND @ShippingCost is not null)
	OR ([SubTotal] = @SubTotal AND @SubTotal is not null)
	OR ([DiscountAmount] = @DiscountAmount AND @DiscountAmount is not null)
	OR ([Total] = @Total AND @Total is not null)
	OR ([CouponID] = @CouponID AND @CouponID is not null)
	OR ([OrderDate] = @OrderDate AND @OrderDate is not null)
	OR ([CreditCardNumber] = @CreditCardNumber AND @CreditCardNumber is not null)
	OR ([CreditCardExp] = @CreditCardExp AND @CreditCardExp is not null)
	OR ([CreditCardCVV] = @CreditCardCVV AND @CreditCardCVV is not null)
	OR ([Custom1] = @Custom1 AND @Custom1 is not null)
	OR ([Custom2] = @Custom2 AND @Custom2 is not null)
	OR ([AdditionalInstructions] = @AdditionalInstructions AND @AdditionalInstructions is not null)
	OR ([Custom3] = @Custom3 AND @Custom3 is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ZNODE_NT_ZNodeOrder_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------
-- Date Created: Thursday, October 18, 2007

-- Created By: ZNode Inc (http://www.znode.com)
-- Purpose: Gets records from the ZNodeOrder table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				with PageIndex as (
					select top {3} row_number() over (order by {1}) as RowIndex
					, [OrderID]
					, [PortalId]
					, [AccountID]
					, [OrderStateID]
					, [ShippingID]
					, [PaymentTypeId]
					, [ShipFirstName]
					, [ShipLastName]
					, [ShipCompanyName]
					, [ShipStreet]
					, [ShipStreet1]
					, [ShipCity]
					, [ShipStateCode]
					, [ShipPostalCode]
					, [ShipCountry]
					, [ShipPhoneNumber]
					, [ShipEmailID]
					, [BillingFirstName]
					, [BillingLastName]
					, [BillingCompanyName]
					, [BillingStreet]
					, [BillingStreet1]
					, [BillingCity]
					, [BillingStateCode]
					, [BillingPostalCode]
					, [BillingCountry]
					, [BillingPhoneNumber]
					, [BillingEmailId]
					, [CardTransactionID]
					, [CardTypeId]
					, [CardEndsIn]
					, [TaxCost]
					, [ShippingCost]
					, [SubTotal]
					, [DiscountAmount]
					, [Total]
					, [CouponID]
					, [OrderDate]
					, [CreditCardNumber]
					, [CreditCardExp]
					, [CreditCardCVV]
					, [Custom1]
					, [Custom2]
					, [AdditionalInstructions]
					, [Custom3]
					from dbo.[ZNodeOrder] {0}
				)
				select
				       [OrderID],
				       [PortalId],
				       [AccountID],
				       [OrderStateID],
				       [ShippingID],
				       [PaymentTypeId],
				       [ShipFirstName],
				       [ShipLastName],
				       [ShipCompanyName],
				       [ShipStreet],
				       [ShipStreet1],
				       [ShipCity],
				       [ShipStateCode],
				       [ShipPostalCode],
				       [ShipCountry],
				       [ShipPhoneNumber],
				       [ShipEmailID],
				       [BillingFirstName],
				       [BillingLastName],
				       [BillingCompanyName],
				       [BillingStreet],
				       [BillingStreet1],
				       [BillingCity],
				       [BillingStateCode],
				       [BillingPostalCode],
				       [BillingCountry],
				       [BillingPhoneNumber],
				       [BillingEmailId],
				       [CardTransactionID],
				       [CardTypeId],
				       [CardEndsIn],
				       [TaxCost],
				       [ShippingCost],
				       [SubTotal],
				       [DiscountAmount],
				       [Total],
				       [CouponID],
				       [OrderDate],
				       [CreditCardNumber],
				       [CreditCardExp],
				       [CreditCardCVV],
				       [Custom1],
				       [Custom2],
				       [AdditionalInstructions],
				       [Custom3]
				  from PageIndex
				 where RowIndex > {2}
				   and RowIndex <= {3};
				

				-- get total count
				select count(*) as TotalRowCount from dbo.[ZNodeOrder] {0};
			
				END
			]]></body>
		</procedure>
		
</procedures>
</root>
